/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/upload-upload-js"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/upload/upload.less":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/upload/upload.less ***!
  \************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.bbn-upload .bbn-upload-thumb {\n  user-select: none;\n  pointer-events: none;\n}\n.bbn-upload .bbn-upload-thumb object,\n.bbn-upload .bbn-upload-thumb img,\n.bbn-upload .bbn-upload-thumb video,\n.bbn-upload .bbn-upload-thumb div:not(.bbn-overlay) {\n  height: 4rem;\n  width: 4rem;\n}\n.bbn-upload .bbn-upload-thumb img,\n.bbn-upload .bbn-upload-thumb video {\n  object-fit: cover;\n}\n.bbn-upload .bbn-upload-thumb i {\n  font-size: 3.5rem;\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/upload/upload.less?./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/components/upload/upload.html":
/*!*******************************************!*\
  !*** ./src/components/upload/upload.html ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div :class=\\\"[componentClass, 'bbn-box', 'bbn-spadded']\\\">\\n    <div bbn-if=\\\"ready && showList\\\"\\n         style=\\\"z-index: 2\\\">\\n      <div bbn-for=\\\"(f, idx) in currentData\\\"\\n           :class=\\\"['bbn-flex-width', 'bbn-bordered', 'bbn-spadded', 'bbn-vmiddle', {\\n             'bbn-alt-background': (f.status !== 'progress') && (f.status !== 'error'),\\n             'bbn-background-tertiary': f.status === 'progress',\\n             'bbn-bg-red': f.status === 'error',\\n             'bbn-bottom-sspace': currentData[idx+1],\\n             'bbn-alt-dark': !!(idx % 2),\\n             'bbn-primary-text-alt': f.status === 'ready'\\n           }]\\\"\\n      >\\n        <div bbn-if=\\\"icons\\\">\\n          <i :class=\\\"['bbn-large', getFileIcon(f)]\\\"/>\\n        </div>\\n        <div bbn-elseif=\\\"thumbs\\\"\\n             class=\\\"bbn-upload-thumb bbn-block\\\">\\n          <template bbn-if=\\\"isFile(f)\\\">\\n            <img bbn-if=\\\"f.data.type.startsWith('image/')\\\"\\n                 :src=\\\"getThumbURL(f)\\\">\\n            <video bbn-elseif=\\\"f.data.type.startsWith('video/')\\\"\\n                   muted>\\n              <source :src=\\\"getThumbURL(f)\\\"\\n                      :type=\\\"f.data.type\\\">\\n              <div class=\\\"bbn-middle\\\">\\n                <i :class=\\\"['bbn-large', getFileIcon(f)]\\\"/>\\n              </div>\\n            </video>\\n            <object bbn-elseif=\\\"f.data.type === 'application/pdf'\\\"\\n                    :data=\\\"getThumbURL(f)\\\"/>\\n            <div bbn-else\\n                 class=\\\"bbn-middle\\\">\\n              <i :class=\\\"['bbn-large', getFileIcon(f)]\\\"/>\\n            </div>\\n          </template>\\n          <img bbn-elseif=\\\"getThumbURL(f)\\\"\\n               :src=\\\"getThumbURL(f)\\\">\\n          <div bbn-else\\n               class=\\\"bbn-middle\\\">\\n            <i :class=\\\"['bbn-large', getFileIcon(f)]\\\"/>\\n          </div>\\n          <div class=\\\"bbn-overlay\\\" style=\\\"opacity: 0;\\\"/>\\n        </div>\\n        <div class=\\\"bbn-flex-fill bbn-hmargin\\\">\\n          <div bbn-if=\\\"f.edit === false\\\"\\n               :class=\\\"{\\n                 'bbn-abs': f.status === 'progress',\\n                 'bbn-h-100': f.status === 'progress',\\n                 'bbn-vmiddle': f.status === 'progress'\\n               }\\\"\\n               :style=\\\"{'z-index': f.status === 'progress' ? 2 : 0}\\\"\\n          >\\n            <span bbn-text=\\\"f.data.name\\\"></span>\\n            <span bbn-if=\\\"showFilesize\\\"\\n                  class=\\\"bbn-left-sspace bbn-i bbn-s\\\"\\n            >({{getFileSize(f)}})</span>\\n          </div>\\n          <bbn-input bbn-elseif=\\\"f.status !== 'progress'\\\"\\n                     bbn-model=\\\"f.edit\\\"\\n                     class=\\\"bbn-w-100\\\"\\n                     :placeholder=\\\"currentText.filename\\\"\\n                     ref=\\\"filenameInput\\\"\\n          ></bbn-input>\\n          <bbn-progressbar bbn-if=\\\"(f.edit === false) && (f.status === 'progress')\\\"\\n                           :value=\\\"f.progress\\\"\\n                           :show-value=\\\"true\\\"\\n                           type=\\\"percent\\\"\\n                           class=\\\"bbn-no-border\\\"\\n                           style=\\\"text-align: right\\\"\\n                           bar-class=\\\"bbn-background-tertiary\\\"\\n          ></bbn-progressbar>\\n        </div>\\n        <div>\\n          <div bbn-if=\\\"isEnabled && (f.edit === false)\\\">\\n            <i bbn-if=\\\"(f.status === 'success') && !!downloadable && !!downloadUrl && !uploading\\\"\\n              class=\\\"bbn-large nf nf-fa-download bbn-p bbn-right-sspace\\\"\\n              @click=\\\"download(f)\\\"\\n              :title=\\\"currentText.download\\\"\\n            ></i>\\n            <i bbn-if=\\\"(f.status === 'success') && editable && !uploading\\\"\\n              class=\\\"bbn-large nf nf-fa-edit bbn-p bbn-right-sspace\\\"\\n              @click=\\\"edit(f)\\\"\\n              :title=\\\"currentText.editFilename\\\"\\n            ></i>\\n            <i bbn-if=\\\"f.status === 'error'\\\"\\n              class=\\\"bbn-large nf nf-fa-repeat bbn-p bbn-right-sspace\\\"\\n              @click=\\\"retry(f)\\\"\\n              :title=\\\"currentText.retry\\\"\\n            ></i>\\n            <i bbn-if=\\\"eliminable && (f.status !== 'progress') && !uploading\\\"\\n              class=\\\"bbn-large nf nf-fa-trash bbn-p\\\"\\n              @click=\\\"remove(f)\\\"\\n              :title=\\\"currentText.remove\\\"\\n            ></i>\\n            <bbn-loadicon bbn-if=\\\"f.status === 'progress'\\\"></bbn-loadicon>\\n          </div>\\n          <div bbn-elseif=\\\"isEnabled && (f.edit !== false) && !uploading\\\">\\n            <i class=\\\"bbn-large nf nf-fa-check bbn-p bbn-right-sspace\\\"\\n               @click=\\\"saveEdit(f)\\\"\\n               :title=\\\"currentText.save\\\"\\n            ></i>\\n            <i class=\\\"bbn-large nf nf-fa-close bbn-p\\\"\\n               @click=\\\"cancelEdit(f)\\\"\\n               :title=\\\"currentText.cancel\\\"\\n            ></i>\\n          </div>\\n          <div bbn-elseif=\\\"(f.status === 'success') && !!downloadable && !!downloadUrl && !uploading\\\">\\n            <i class=\\\"bbn-large nf nf-fa-download bbn-p\\\"\\n               @click=\\\"download(f)\\\"\\n               :title=\\\"currentText.download\\\"\\n            ></i>\\n          </div>\\n        </div>\\n      </div>\\n      <div bbn-if=\\\"!currentData.length && !isEnabled\\\"\\n           class=\\\"bbn-c\\\"\\n           bbn-text=\\\"currentText.empty\\\"\\n      ></div>\\n    </div>\\n    <div bbn-if=\\\"isEnabled\\\"\\n         class=\\\"bbn-rel\\\"\\n         :style=\\\"{\\n           'padding-top': !!currentData.length && canAddFile ? '.5rem' : '0',\\n           'z-index': 2\\n         }\\\"\\n    >\\n      <div class=\\\"bbn-flex-width bbn-vmiddle\\\">\\n        <i bbn-if=\\\"canAddFile\\\"\\n           :class=\\\"[icon, 'bbn-primary-text-alt', 'bbn-xlarge']\\\"\\n        ></i>\\n        <div bbn-if=\\\"canAddFile\\\"\\n             class=\\\"bbn-flex-fill bbn-primary-text-alt bbn-hsmargin\\\"\\n             @click=\\\"getRef('fileInput').click()\\\"\\n             bbn-text=\\\"dragDrop ? currentText.uploadOrDrop : currentText.uploadButton\\\"\\n             @drop=\\\"dropEvent\\\"\\n        ></div>\\n        <div class=\\\"bbn-box bbn-spadded\\\"\\n             ref=\\\"pasteContainer\\\"\\n             bbn-if=\\\"paste && canAddFile\\\"\\n             style=\\\"z-index: 2\\\"\\n             :title=\\\"currentText.pasteContainer\\\"\\n             @paste=\\\"pasteEvent\\\"\\n        >\\n          <i class=\\\"nf nf-fa-paste bbn-large\\\"></i>\\n        </div>\\n        <div class=\\\"bbn-box bbn-spadded bbn-p\\\"\\n             ref=\\\"uploadButton\\\"\\n             bbn-if=\\\"canAddFile && !autoUpload && !!filesReady.length\\\"\\n             style=\\\"z-index: 2\\\"\\n             :title=\\\"currentText.upload\\\"\\n             @click=\\\"upload()\\\"\\n        >\\n          <i class=\\\"nf nf-fa-upload bbn-large\\\"></i>\\n        </div>\\n        <input title=\\\"\\\"\\n               :disabled=\\\"!!isDisabled || !canAddFile\\\"\\n               ref=\\\"fileInput\\\"\\n               type=\\\"file\\\"\\n               :multiple=\\\"multiple\\\"\\n               :accept=\\\"accept\\\"\\n               @change=\\\"filesChanged\\\"\\n               class=\\\"bbn-invisible bbn-abs bbn-top-left bbn-bottom-right bbn-100\\\"\\n               style=\\\"z-index: 1\\\"\\n               @drop=\\\"dropEvent\\\"\\n        >\\n        <input type=\\\"hidden\\\"\\n               :value=\\\"value\\\"\\n               :readonly=\\\"readonly\\\"\\n               :required=\\\"required\\\"\\n               ref=\\\"element\\\"\\n        >\\n      </div>\\n    </div>\\n</div>\";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/upload/upload.html?");

/***/ }),

/***/ "./src/components/upload/upload.less":
/*!*******************************************!*\
  !*** ./src/components/upload/upload.less ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_upload_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js!./upload.less */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/upload/upload.less\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_upload_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_upload_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_upload_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_upload_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/upload/upload.less?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/components/upload/_i18n lazy recursive ^\\.\\/upload\\..*\\.lang$":
/*!******************************************************************************************!*\
  !*** ./src/components/upload/_i18n/ lazy ^\.\/upload\..*\.lang$ strict namespace object ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./upload.fr.lang\": [\n\t\t\"./src/components/upload/_i18n/upload.fr.lang\",\n\t\t\"src_components_upload__i18n_upload_fr_lang\"\n\t],\n\t\"./upload.it.lang\": [\n\t\t\"./src/components/upload/_i18n/upload.it.lang\",\n\t\t\"src_components_upload__i18n_upload_it_lang\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src/components/upload/_i18n lazy recursive ^\\\\.\\\\/upload\\\\..*\\\\.lang$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/upload/_i18n/_lazy_^\\.\\/upload\\..*\\.lang$_strict_namespace_object?");

/***/ }),

/***/ "./src/components/upload/upload.js":
/*!*****************************************!*\
  !*** ./src/components/upload/upload.js ***!
  \*****************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _upload_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.html */ \"./src/components/upload/upload.html\");\n/* harmony import */ var _upload_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./upload.less */ \"./src/components/upload/upload.less\");\n/**\n  * @file bbn-upload component\n  *\n  * @description bbn-upload is a component that allows users to send files from their file system by selecting it, using drag and drop or with a keyboard shortcut.\n  *\n  * @author Mirko Argentino\n  *\n  * @copyright BBN Solutions\n  *\n  * @cretaed 13/06/2017\n  */\n\nconst cpDef = {\n  /**\n   * @mixin bbn.cp.mixins.input\n   * @mixin bbn.cp.mixins.basic\n   */\n  mixins: [bbn.cp.mixins.basic, bbn.cp.mixins.input],\n  props: {\n    /**\n     * @prop {Boolean} [true] showList\n     */\n    showList: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * The value of the component.\n     * @prop {Array|String} [[]] value\n     */\n    value: {\n      type: [Array, String],\n      default() {\n        return [];\n      }\n    },\n    /**\n     * The URL for the action 'save'.\n     * @prop {String} [null] saveUrl\n     */\n    saveUrl: {\n      type: String,\n      default: null\n    },\n    /**\n     * The URL for the action 'delete'.\n     * @prop {String} [null] removeUrl\n     */\n    removeUrl: {\n      type: String,\n      default: null\n    },\n    /**\n     * The URL for the action 'download'.\n     * @prop {String} [null] downloadUrl\n     */\n    downloadUrl: {\n      type: String,\n      default: null\n    },\n    /**\n     * Set to true to automatically upload selected files.\n     * @prop {Boolean} [true] autoUpload\n     */\n    autoUpload: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Set to true to allow the upload of multiple files.\n     * @prop {Boolean} [true] multiple\n     */\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Tha maximum number of files. 0 for infinite.\n     * @prop {Number} [0] max\n     */\n    max: {\n      type: Number,\n      default: 0\n    },\n    /**\n     * Set to true to disable the component.\n     * @prop {Boolean} [false] disabled\n     */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Set it to true if you want to be able to edit the filename.\n     * @prop {Boolean} [false] editable\n     */\n    editable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * True if you want the possibility to download a file.\n     * @prop {Boolean} [false] downloadable\n     */\n    downloadable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * True if you want the possibility to delete a file.\n     * @prop {Boolean} [true] eliminable\n    */\n    eliminable: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * @prop {Boolean} [true] uploadable\n     */\n    uploadable: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Shows the file's icon.\n     * @prop {Boolean} [true] icons\n     */\n    icons: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Shows the preview image of the file uploaded.\n     * @prop {Boolean} [false] thumbs\n     */\n    thumbs: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * The maximum size of the thumb.\n     * @prop {Number} [60] maxSize\n     */\n    maxSize: {\n      type: Number,\n      default: 60\n    },\n    /**\n     * The text shown during the file's transfer.\n     * @prop {String} thumbWaiting\n     */\n    thumbWaiting: {\n      type: String\n    },\n    /**\n    * Set to true to convert the value as JSON.\n     * @prop {Boolean} [false] json\n     */\n    json: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * An object to customize the default text.\n     * @prop {Object} text\n     */\n    text: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    /**\n     * The icon displayed on the upload button.\n     * @prop {String} ['nf nf-fa-upload'] icon\n     */\n    icon: {\n      type: String,\n      default: 'nf nf-fa-upload'\n    },\n    /**\n     * The array of accepted extensions.\n     * @prop {Array} [[]] extensions\n     */\n    extensions: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    /**\n     * The  accepted types of files.\n     * @prop {String} [*] accept\n     */\n    accept: {\n      type: String,\n      default: '*'\n    },\n    /**\n     * Set to false to disable the 'paste' function.\n     *\n     * @prop {Boolean} [true] paste\n     */\n    paste: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Set to false to disable the 'drang&drop' function.\n     *\n     * @prop {Boolean} [true] dragDrop\n     */\n    dragDrop: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Additional data sent with the ajax call.\n     *\n     * @prop {Object} data\n     */\n    data: {\n      type: Object\n    },\n    /**\n     * Shows or not the files' size on the list.\n     * @prop {Boolean} [true] showFilesize\n     */\n    showFilesize: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      /**\n       * The current files.\n       *  @data {Array} [[]] currentData\n       */\n      currentData: [],\n      /**\n       * Indicates if an uploading is running.\n       *  @data {Boolean} [false] uploading\n       */\n      uploading: false\n    };\n  },\n  computed: {\n    /**\n     * An object of default text.\n     *\n     * @computed text\n     * @return Object\n     */\n    currentText() {\n      return bbn.fn.extend({\n        uploadButton: bbn._('Choose files'),\n        dropHere: bbn._('Drop files here'),\n        pasteContainer: bbn._('Click on the container and then press CTRL+V keys to paste the file'),\n        uploadOrDrop: bbn._('Choose files or drop files here'),\n        retry: bbn._('Retry'),\n        editFilename: bbn._('Edit filename'),\n        remove: bbn._('Delete'),\n        removeConfirm: bbn._('Are you sure you want to delete this file?'),\n        empty: bbn._('no files'),\n        download: bbn._('Download'),\n        save: bbn._('Save'),\n        cancel: bbn._('Cancel'),\n        filename: bbn._('Write the filename without the extension'),\n        upload: bbn._('Upload')\n      }, this.text);\n    },\n    /**\n     * Shows you can add more files.\n     * @computed canAddFile\n     * @return Boolean\n     */\n    canAddFile() {\n      return this.uploadable && !this.uploading && this.multiple && (!this.max || this.filesCount < this.max) || !this.multiple && !this.filesCount;\n    },\n    /**\n     * A list of files with the status 'ready'.\n     * @computed filesReady\n     * @return Array\n     */\n    filesReady() {\n      return this.currentData.filter(d => {\n        return d.status === 'ready';\n      });\n    },\n    /**\n     * A list of files with the status 'progress'.\n     * @computed filesProgress\n     * @return Array\n     */\n    filesProgress() {\n      return this.currentData.filter(d => {\n        return d.status === 'progress';\n      });\n    },\n    /**\n     * A list of files with the status 'error'.\n     * @computed filesError\n     * @return Array\n     */\n    filesError() {\n      return this.currentData.filter(d => {\n        return d.status === 'error';\n      });\n    },\n    /**\n     * A list of files with the status 'success'.\n     * @computed filesSuccess\n     * @return Array\n     */\n    filesSuccess() {\n      return this.currentData.filter(d => {\n        return d.status === 'success';\n      });\n    },\n    /**\n     * The sum of the files withe the statuses 'ready, 'progress' and 'success'.\n     * @computed filesCount\n     * @return Number\n     */\n    filesCount() {\n      return this.filesReady.length + this.filesProgress.length + this.filesSuccess.length;\n    },\n    /**\n     * Shows if it is not disabled and not readonly.\n     * @computed isEnabled\n     * @return Boolean\n     */\n    isEnabled() {\n      return !this.isDisabled && !this.readonly;\n    }\n  },\n  methods: {\n    /**\n     * Sets the given status to the file with the given id.\n     * @method _setStatus\n     * @param {Number} id\n     * @param {String} status\n     * @return Boolean\n     */\n    _setStatus(id, status) {\n      if (id) {\n        let idx = bbn.fn.search(this.currentData, {\n          id: id\n        });\n        if (idx > -1) {\n          this.$set(this.currentData[idx], 'status', status);\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n     * Makes an object with the file's info.\n     * @method _makeFile\n     * @param {Object|File} file\n     * @param {Boolean} fromUser\n     * @param {String} status\n     * @param {Boolean} fromPaste\n     * @return Object\n     */\n    _makeFile(file, fromUser, status, fromPaste) {\n      return {\n        id: bbn.fn.randomInt(1000, 9999),\n        data: file,\n        status: status || 'ready',\n        fromUser: fromUser,\n        fromPaste: !!fromPaste,\n        edit: false,\n        progress: 0\n      };\n    },\n    /**\n     * The method used to makes the files and to upload them if necessary.\n     * @method _makeFiles\n     * @param {Array} files\n     * @param {Boolean} fromUser\n     * @param {String} status\n     * @fires _filterFiles\n     * @fires _makeFile\n     * @fires _addFile\n     * @fires upload\n     */\n    _makeFiles(files, fromUser, status) {\n      if (!this.ready || !this.isDisabled) {\n        if (files instanceof FileList) {\n          files = Object.values(files);\n        }\n        files = this._filterFiles(bbn.fn.map(files, file => {\n          return this._makeFile(file, fromUser, status);\n        }));\n        bbn.fn.each(files, file => {\n          if (!this.ready || this.canAddFile) {\n            this._addFile(file);\n          }\n        });\n        if (this.ready && this.autoUpload) {\n          this.$nextTick(() => {\n            this.upload();\n          });\n        }\n      }\n      if (this.getRef('fileInput')) {\n        this.getRef('fileInput').value = null;\n      }\n    },\n    /**\n     * Adds a file to the currentData property.\n     * @method _addFile\n     * @param {Object} file\n     */\n    _addFile(file) {\n      this.currentData.push(file);\n    },\n    /**\n     * Removes the given file from the currentData property.\n     * @method _remove\n     * @param {Object} file\n     * @emits remove\n     * @fires setValue\n     */\n    _remove(file, res) {\n      let idx = bbn.fn.search(this.currentData, {\n        id: file.id\n      });\n      if (idx > -1) {\n        this.currentData.splice(idx, 1);\n        this.$emit('remove', file.id, res, false);\n        this.$nextTick(() => {\n          this.setValue();\n        });\n      }\n    },\n    /**\n     * Filters the give files.\n     * @method _filterFiles\n     * @param {Array} files\n     * @emits error\n     * @return Array\n     */\n    _filterFiles(files) {\n      return bbn.fn.filter(files, file => {\n        if (!file.data.name || file.data.size !== undefined && !file.data.size) {\n          return false;\n        }\n        if (bbn.fn.getRow(this.currentData, {\n          'data.name': file.data.name\n        })) {\n          if (file.fromUser) {\n            this.$emit('error', {\n              file: file.data.name,\n              message: bbn._('The file exists!')\n            });\n            this.alert(bbn._('The file') + ` \"${file.data.name}\" ` + bbn._('exists') + '!');\n          }\n          return false;\n        }\n        if (bbn.fn.isArray(this.extensions) && this.extensions.length) {\n          let ext = file.data.name.substring(file.data.name.lastIndexOf('.') + 1).toLowerCase(),\n            extensions = bbn.fn.map(this.extensions, e => {\n              return e.toLowerCase();\n            });\n          if (!extensions.includes(ext)) {\n            if (file.fromUser) {\n              this.$emit('error', {\n                file: file.data.name,\n                message: bbn._('The extension') + ` \"${ext}\" ` + bbn._('is not allowed') + '!'\n              });\n              this.alert(bbn._('The extension') + ` \"${ext}\" ` + bbn._('is not allowed') + '!');\n            }\n            return false;\n          }\n        }\n        return true;\n      });\n    },\n    /**\n     * Returns a knowed object structure of the given file.\n     * @method _getData\n     * @param {Object} file\n     * @return Object\n     */\n    _getData(file) {\n      if (file.data) {\n        return {\n          name: file.data.name,\n          size: file.data.size,\n          extension: file.data.name.substring(file.data.name.lastIndexOf('.'))\n        };\n      }\n      return {};\n    },\n    /**\n     * Returns the current value. If it is in the JSON format, it's converted.\n     * @method getValue\n     * @return Array\n     */\n    getValue() {\n      let res;\n      if (typeof this.value === 'string' && this.json) {\n        res = JSON.parse(this.value);\n      } else if (bbn.fn.isArray(this.value)) {\n        res = this.value;\n      }\n      return bbn.fn.isArray(res) ? res : [];\n    },\n    /**\n     * The method called when the user select or drop files.\n     * @method filesChanged\n     * @fires _makeFiles\n     */\n    filesChanged(e) {\n      if (e.target.files.length) {\n        this._makeFiles(e.target.files, true);\n      }\n    },\n    /**\n     * Uploads the file with the given id or all files with the status 'ready'.\n     * @method upload\n     * @param {Number} id\n     * @fires setStatusProgress\n     * @fires setName\n     * @fires setStatusSuccess\n     * @fires setStatusError\n     * @emits success\n     * @emits failure\n     */\n    upload(id) {\n      if (this.uploadable && this.filesReady.length) {\n        this.uploading = true;\n        if (id) {\n          this.setStatusProgress(id);\n        } else {\n          bbn.fn.each(this.filesReady, fr => {\n            this.setStatusProgress(fr.id);\n          });\n        }\n        this.$nextTick(() => {\n          bbn.fn.each(this.filesProgress, fr => {\n            if (id === undefined || fr.id === id) {\n              let ev = new Event('beforeupload', {\n                cancelable: true\n              });\n              this.$emit('beforeupload', ev, fr);\n              if (!ev.defaultPrevented) {\n                if (this.saveUrl) {\n                  bbn.fn.upload(this.saveUrl, bbn.fn.extend(true, {}, this.data ? this.data : {}, {\n                    file: fr.data\n                  }), res => {\n                    let f = false;\n                    if (res.data.file || res.data.fichier) {\n                      f = res.data.file || res.data.fichier;\n                    } else if (res.data.data && (res.data.data.file || res.data.data.fichier)) {\n                      f = res.data.data.file || res.data.data.fichier;\n                    }\n                    if (f && f.name !== fr.data.name) {\n                      this.setName(fr.id, f.name, false);\n                    }\n                    if (this.setStatusSuccess(fr.id)) {\n                      this.$nextTick(() => {\n                        this.$emit('success', fr.id, f.name || fr.data.name, res.data, res);\n                      });\n                    }\n                  }, err => {\n                    if (this.setStatusError(fr.id)) {\n                      this.$emit('error', fr.id, err);\n                      bbn.fn.log('bbn-upload error', fr.id, err);\n                    }\n                  }, prog => {\n                    this.setProgress(fr.id, prog);\n                  });\n                } else {\n                  if (this.setStatusSuccess(fr.id)) {\n                    this.$nextTick(() => {\n                      this.$emit('success', fr.id, fr.data.name, fr.data);\n                    });\n                  }\n                }\n              }\n            }\n          });\n        });\n      }\n    },\n    /**\n     * Sets the name to the file with the given id.\n     * @method setName\n     * @param {Number} id\n     * @param {String} name\n     * @return Boolean\n     */\n    setName(id, name, setVal = true) {\n      if (id && name) {\n        let idx = bbn.fn.search(this.currentData, {\n          id: id\n        });\n        if (idx > -1) {\n          if (this.currentData[idx].fromUser) {\n            const newFile = new File([this.currentData[idx].data], name, {\n              type: this.currentData[idx].data.type\n            });\n            this.$set(this.currentData[idx], 'data', newFile);\n          } else {\n            this.$set(this.currentData[idx].data, 'name', name);\n          }\n          if (setVal) {\n            this.$nextTick(() => {\n              this.setValue();\n            });\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n     * Sets the status 'ready' to the file with the given id.\n     * @method setStatusReady\n     * @param id\n     * @fires _setStatus\n     * @return Boolean\n     */\n    setStatusReady(id) {\n      return this._setStatus(id, 'ready');\n    },\n    /**\n     * Sets the status 'error' to the file with the given id.\n     * @method setStatusError\n     * @param id\n     * @fires _setStatus\n     * @return Boolean\n     */\n    setStatusError(id) {\n      return this._setStatus(id, 'error');\n    },\n    /**\n     * Sets the status 'success' to the file with the given id.\n     * @method setStatusSuccess\n     * @param id\n     * @fires _setStatus\n     * @return Boolean\n     */\n    setStatusSuccess(id) {\n      return this._setStatus(id, 'success');\n    },\n    /**\n     * Sets the status 'progress' to the file with the given id.\n     * @method setStatusProgress\n     * @param id\n     * @fires _setStatus\n     * @return Boolean\n     */\n    setStatusProgress(id) {\n      return this._setStatus(id, 'progress');\n    },\n    /**\n     * Sets the value.\n     * @method setValue\n     * @emits input\n     * @emits change\n     */\n    setValue() {\n      let value = bbn.fn.map(this.filesSuccess, f => {\n        if (f.data instanceof File) {\n          return {\n            name: f.data.name,\n            size: f.data.size,\n            extension: bbn.fn.substr(f.data.name, f.data.name.lastIndexOf('.'))\n          };\n        }\n        return bbn.fn.extend(true, {}, f.data, {\n          size: f.data.size,\n          extension: bbn.fn.substr(f.data.name, f.data.name.lastIndexOf('.'))\n        });\n      });\n      this.emitInput(this.json ? JSON.stringify(value) : value);\n      this.$nextTick(() => this.$emit('change', this.value));\n    },\n    /**\n     * Sets the given progress value to to the file with the given id.\n     * @method setProgress\n     * @param {String} id\n     * @param {Number} [0] progress\n     */\n    setProgress(id, progress = 0) {\n      if (bbn.fn.isArray(this.currentData) && this.currentData.length) {\n        let file = bbn.fn.getRow(this.currentData, {\n          id: id\n        });\n        if (bbn.fn.isObject(file)) {\n          this.$set(file, 'progress', progress);\n        }\n      }\n    },\n    /**\n     * Sets the given file to edit mode.\n     * @method edit\n     * @param {Object} file\n     */\n    edit(file) {\n      file.edit = bbn.fn.substr(file.data.name, 0, file.data.name.lastIndexOf('.'));\n    },\n    /**\n     * Saves the change did to the filename.\n     * @method saveEdit\n     * @param {Object} file\n     * @fires upload\n     * @emits edit\n     */\n    saveEdit(file) {\n      const name = `${file.edit}.${this.getFileExt(file)}`;\n      if (file.edit && file.name !== name) {\n        let old = bbn.fn.extend(true, {}, file.data);\n        if (file.fromUser) {\n          const newFile = new File([file.data], name, {\n            type: file.data.type\n          });\n          this.$set(file, 'data', newFile);\n        } else {\n          this.$set(file.data, 'name', name);\n        }\n        if (file.fromPaste && file.status === 'ready') {\n          this.upload(file.id);\n        } else {\n          this.$emit('edit', file.id, name, old.name);\n        }\n        this.$nextTick(() => {\n          this.setValue();\n        });\n      }\n      file.edit = false;\n    },\n    /**\n     * Exits from the edit mode.\n     * @method cancelEdit\n     * @param {Object} file\n     */\n    cancelEdit(file) {\n      if (file.fromPaste && file.status === 'ready') {\n        this.currentData.splice(bbn.fn.search(this.currentData, {\n          id: file.id\n        }), 1);\n      } else {\n        file.edit = false;\n      }\n    },\n    /**\n     * Retries to upload the given file.\n     * @method retry\n     * @param {Object} file\n     * @fires setStatusReady\n     * @fires upload\n     */\n    retry(file) {\n      if (this.setStatusReady(file.id)) {\n        this.upload(file.id);\n      }\n    },\n    /**\\\n     * Deletes the given file.\n     * @method remove\n     * @param {Object} file\n     * @fires _remove\n     */\n    remove(file, force) {\n      let ev = new Event('beforeremove', {\n        cancelable: true\n      });\n      this.$emit('beforeremove', ev, file);\n      if (force || !ev.defaultPrevented) {\n        this.confirm(this.currentText.removeConfirm, () => {\n          if (this.removeUrl) {\n            this.post(this.removeUrl, bbn.fn.extend(true, {}, this.data ? this.data : {}, {\n              file: file.data.name\n            }), d => {\n              this._remove(file, d);\n            });\n          } else {\n            this._remove(file);\n          }\n        });\n      }\n    },\n    /**\n     * The method called on the paste event.\n     * @method pasteEvent\n     * @param {Event} event\n     * @fires _makeFile\n     * @fires _addFile\n     */\n    pasteEvent(event) {\n      if (event.clipboardData.files.length && this.canAddFile) {\n        let file = this._makeFile(event.clipboardData.files[0], true, 'ready', true);\n        file.edit = '';\n        this._addFile(file);\n        this.$nextTick(() => {\n          this.getRef('filenameInput').focus();\n        });\n      }\n    },\n    dropEvent(event) {\n      if (!this.dragDrop) {\n        event.preventDefault();\n      }\n    },\n    /**\n     * Downloads the given file.\n     * @method download\n     * @param {Object} file\n     */\n    download(file) {\n      if (!!this.downloadable && !!this.downloadUrl) {\n        this.postOut(this.downloadUrl, bbn.fn.extend(true, {}, this.data ? this.data : {}, {\n          file: file.data.name\n        }));\n      }\n    },\n    /**\n     * Gets the formatted file' size.\n     * @method getFileSize\n     * @param {Object} file\n     * @return String\n     */\n    getFileSize(file) {\n      return bbn.fn.formatBytes(file.data.size);\n    },\n    /**\n     * Gets the icon class by the file's extension.\n     * @method getFileIcon\n     * @param {Object} file\n     * @return String\n     */\n    getFileIcon(file) {\n      switch (this.getFileExt(file)) {\n        case 'pdf':\n          return 'nf nf-fa-file_pdf_o';\n        case 'zip':\n          return 'nf nf-fa-file_zip_o';\n        case 'rar':\n        case 'tar':\n        case 'bz2':\n        case 'gz':\n        case '7z':\n        case 'cab':\n        case 'cab':\n          return 'nf nf-fa-file_archive_o';\n        case 'jpg':\n        case 'jpeg':\n        case 'png':\n        case 'gif':\n        case 'bmp':\n        case 'svg':\n          return 'nf nf-fa-file_image_o';\n        case 'avi':\n        case 'mov':\n        case 'mkv':\n        case 'mpg':\n        case 'mpeg':\n        case 'wmv':\n        case 'mp4':\n          return 'nf nf-fa-file_movie_o';\n        case 'mp3':\n        case 'wav':\n          return 'nf nf-fa-file_sound_o';\n        case 'php':\n        case 'js':\n        case 'html':\n        case 'htm':\n        case 'css':\n        case 'less':\n          return 'nf nf-fa-file_code_o';\n        case 'txt':\n        case 'rtf':\n          return 'nf nf-fa-file_text_o';\n        case 'doc':\n        case 'docx':\n        case 'odt':\n          return 'nf nf-fa-file_word_o';\n        case 'xls':\n        case 'xlsx':\n        case 'ods':\n        case 'csv':\n          return 'nf nf-fa-file_excel_o';\n        case 'ppt':\n        case 'pptx':\n        case 'odp':\n          return 'nf nf-fa-file_powerpoint_o';\n        default:\n          return 'nf nf-fa-file';\n      }\n    },\n    /**\n     * Gets the extension of the given file.\n     * @method getFileExt\n     * @param {Object} file\n     * @return String\n     */\n    getFileExt(file) {\n      if (file.fromUser || file.data.extension === undefined || !file.data.extension.length) {\n        return file.data.name.substring(file.data.name.lastIndexOf('.') + 1);\n      } else {\n        return bbn.fn.substr(file.data.extension, 1);\n      }\n    },\n    /**\n     * Gets the thumb url of the given file\n     * @method getThumbURL\n     * @param {Object} file\n     * @return String\n     */\n    getThumbURL(file) {\n      return this.isFile(file) ? URL.createObjectURL(file.data) : !!file.data.thumb && bbn.fn.isURL(file.data.thumb) ? file.data.thumb : '';\n    },\n    /**\n     * Check if the data property of the given file is an instance of File object\n     * @method isFile\n     * @param {Object} file\n     * @return Boolean\n     */\n    isFile(file) {\n      return file.data instanceof File;\n    }\n  },\n  /**\n   * @event mounted\n   * @fires _makeFiles\n   * @fires getValue\n   */\n  mounted() {\n    this.$nextTick(() => {\n      if (this.value) {\n        this._makeFiles(this.getValue(), false, 'success');\n      }\n      this.ready = true;\n    });\n  },\n  watch: {\n    /**\n     * @watch value\n     * @fires _makeFiles\n     * @fires getValue\n     */\n    value: {\n      deep: true,\n      handler(newVal, oldVal) {\n        if (!bbn.fn.isSame(newVal, oldVal)) {\n          this.currentData.splice(0);\n        }\n        this.$nextTick(() => {\n          this._makeFiles(this.getValue(), false, 'success');\n        });\n      }\n    },\n    /**\n     * @watch filesSProgress\n     * @emits complete\n     * @fires setValue\n     */\n    filesProgress(newVal, oldVal) {\n      if (!bbn.fn.isSame(newVal, oldVal) && !newVal.length) {\n        this.uploading = false;\n        if (!this.filesError.length) {\n          this.$emit('complete', this.filesSuccess, this.filesError);\n          this.$nextTick(() => {\n            this.setValue();\n          });\n        }\n      }\n    }\n  }\n};\n\n\nlet cpLang = {};\nif (bbn.env.lang) {\n  try {\n    const lang = bbn.env.lang || 'en';\n    cpLang = await __webpack_require__(\"./src/components/upload/_i18n lazy recursive ^\\\\.\\\\/upload\\\\..*\\\\.lang$\")(`./upload.${lang}.lang`);\n    if (cpLang.default) {\n      cpLang = cpLang.default;\n    }\n  } catch (err) {}\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'bbn-upload',\n  definition: cpDef,\n  template: _upload_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  style: _upload_less__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  lang: cpLang\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/upload/upload.js?");

/***/ })

}]);