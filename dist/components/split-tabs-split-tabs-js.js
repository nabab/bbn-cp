/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/split-tabs-split-tabs-js"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/split-tabs/split-tabs.less":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/split-tabs/split-tabs.less ***!
  \********************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `bbn-split-tabs {\n  border: 0 !important;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/split-tabs/split-tabs.less?./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/components/split-tabs/split-tabs.html":
/*!***************************************************!*\
  !*** ./src/components/split-tabs/split-tabs.html ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div :class=\\\"componentClass\\\">\\n  <bbn-splitter :orientation=\\\"orientation\\\"\\n                :resizable=\\\"resizable\\\">\\n    <bbn-pane bbn-for=\\\"(tn, i) in source\\\"\\n              :key=\\\"i\\\"\\n              :resizable=\\\"resizable\\\"\\n              @focusin=\\\"currentPane = i\\\">\\n      <bbn-tabnav :autoload=\\\"true\\\"\\n                  :root=\\\"root\\\"\\n                  :source=\\\"tn.source\\\"\\n                  :observer=\\\"observer\\\"\\n                  :ref=\\\"'tabnav' + i\\\">\\n      </bbn-tabnav>\\n    </bbn-pane>\\n  </bbn-splitter>\\n</div>\\n\";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/split-tabs/split-tabs.html?");

/***/ }),

/***/ "./src/components/split-tabs/split-tabs.less":
/*!***************************************************!*\
  !*** ./src/components/split-tabs/split-tabs.less ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_split_tabs_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js!./split-tabs.less */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/split-tabs/split-tabs.less\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_split_tabs_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_split_tabs_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_split_tabs_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_split_tabs_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/split-tabs/split-tabs.less?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/components/split-tabs/_i18n lazy recursive ^\\.\\/split\\-tabs\\..*\\.lang$":
/*!***************************************************************************************************!*\
  !*** ./src/components/split-tabs/_i18n/ lazy ^\.\/split\-tabs\..*\.lang$ strict namespace object ***!
  \***************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./split-tabs.fr.lang\": [\n\t\t\"./src/components/split-tabs/_i18n/split-tabs.fr.lang\",\n\t\t\"src_components_split-tabs__i18n_split-tabs_fr_lang\"\n\t],\n\t\"./split-tabs.it.lang\": [\n\t\t\"./src/components/split-tabs/_i18n/split-tabs.it.lang\",\n\t\t\"src_components_split-tabs__i18n_split-tabs_it_lang\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src/components/split-tabs/_i18n lazy recursive ^\\\\.\\\\/split\\\\-tabs\\\\..*\\\\.lang$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/split-tabs/_i18n/_lazy_^\\.\\/split\\-tabs\\..*\\.lang$_strict_namespace_object?");

/***/ }),

/***/ "./src/components/split-tabs/split-tabs.js":
/*!*************************************************!*\
  !*** ./src/components/split-tabs/split-tabs.js ***!
  \*************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _split_tabs_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./split-tabs.html */ \"./src/components/split-tabs/split-tabs.html\");\n/* harmony import */ var _split_tabs_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./split-tabs.less */ \"./src/components/split-tabs/split-tabs.less\");\n/**\n * @file bbn-split-tabs component\n *\n * @description Allows and manages the navigation (url) different routers in a splitter\n *\n * @copyright BBN Solutions\n *\n * @author BBN Solutions\n */\n\n\n/**\n * @component\n * @param {string} url - The URL on which the tabNav will be initialized.\n * @param {boolean} autoload - Defines if the tab will be automatically loaded based on URLs. False by default\n * except if it is true for the parent.\n * @param {string} orientation - The position of the views' titles: top (default) or bottom.\n * @param {string} root - The root URL of the tabNav, will be only taken into account for the top parents'\n * tabNav, will be automatically calculated for the children.\n * @param {boolean} scrollable - Sets if the views' titles will be scrollable in case they have a greater width\n * than the page (true), or if they will be shown multilines (false, default).\n * @param {array} source - The views shown at init.\n * @param {string} currentURL - The URL to which the tabnav currently corresponds (its selected tab).\n * @param {string} baseURL - The parent TabNav's URL (if any) on top of which the tabNav has been built.\n * @param {array} parents - The views shown at init.\n * @param {array} views - The views configuration and state.\n * @param {boolean} parentTab - If the tabNav has a tabNav parent, the tab Vue object in which it stands, false\n * otherwise.\n * @param {boolean|number} selected - The index of the currently selected tab, and false otherwise.\n */\nconst cpDef = {\n  /**\n   * @mixin bbn.cp.mixins.basic\n   * @mixin bbn.cp.mixins.localStorage\n   */\n  mixins: [bbn.cp.mixins.basic, bbn.cp.mixins.localStorage],\n  props: {\n    // Routes automatically after mount\n    /**\n     * @prop {Boolean} [true] auto\n     */\n    auto: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * @prop {String} [''] url\n     */\n    url: {\n      type: String,\n      default: ''\n    },\n    /**\n     * @prop {Boolean} [true] autoload\n     */\n    autoload: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * @prop {Boolean} [false] observer\n     */\n    observer: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * @prop {String} [''] root\n     */\n    root: {\n      type: String,\n      default: ''\n    },\n    /**\n     * @prop {String} def\n     */\n    def: {\n      type: String\n    },\n    /**\n     * @prop {Array} [[]] source\n     */\n    source: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    /**\n     * @prop {String} ['horizontal'] orientation\n     */\n    orientation: {\n      type: String,\n      default: 'horizontal'\n    },\n    /**\n     * @prop {Boolean} [true] resizable\n     */\n    resizable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      registeredChildren: []\n    };\n  },\n  computed: {\n    // Not only the baseURL but a combination of all the parent's baseURLs\n    fullBaseURL() {\n      let vm = this,\n        base = '',\n        tmp;\n      while (tmp = vm.baseURL) {\n        base = tmp + base;\n        if (!vm.parents.length) {\n          break;\n        }\n        vm = vm.parents[0];\n      }\n      return base;\n    },\n    // Returns true if there are any unsaved views\n    isDirty() {\n      return !!this.dirtyContainers.length;\n    }\n  },\n  methods: {\n    /**\n     * Function used by container to make themselves known when they are mounted\n     *\n     * @param {bbnCp} cp\n     */\n    register(cp, fake) {\n      if (fake) {\n        this.add(cp);\n        return;\n      }\n      this.numRegistered++;\n      if (cp.url && !this.urls[cp.url]) {\n        this.urls[cp.url] = cp;\n      }\n      if (!this.isInit && this.numRegistered === this.views.length) {\n        this.isInit = true;\n        if (this.auto) {\n          this.route(this.getDefaultURL(), true);\n        }\n      }\n    },\n    /**\n     * Function used by container to make themselves known when they are destroyed\n     *\n     * @param {bbnCp} cp\n     */\n    unregister(cp) {\n      this.numRegistered--;\n      if (cp.url && this.urls[cp.url]) {\n        delete this.urls[cp.url];\n      }\n    },\n    registerSubrouter(cp) {\n      this.registeredChildren.push({\n        idx: this.registeredChildren.length,\n        cp: cp\n      });\n    },\n    unregisterSubrouter(cp) {\n      let deleted = false;\n      bbn.fn.each(this.registeredChildren, (c, i) => {\n        if (c.cp === cp) {\n          this.registeredChildren.splice(c.idx, 1);\n          deleted = true;\n        } else if (deleted) {\n          c.idx--;\n        }\n      });\n    },\n    retrieveDirtyContainers() {\n      // Array of unsaved views\n      let r = [];\n      bbn.fn.iterate(this.urls, v => {\n        if (v.dirty) {\n          r.push({\n            idx: v.idx,\n            url: v.url\n          });\n        }\n      });\n      this.dirtyContainers = r;\n      this.dirty = this.dirtyContainers.length > 0;\n    },\n    /**\n     * Given a URL returns the existing path of a corresponding view or false, or the default view if forced\n     *\n     * @param {String} url\n     * @param {Boolean} force\n     * @returns {String|false}\n     */\n    getRoute(url, force) {\n      if (!url && !this.parent) {\n        url = this.parseURL(bbn.env.path);\n      }\n      if (!url && force && this.parent) {\n        url = this.parseURL(this.router.getFullCurrentURL());\n      }\n      if (url) {\n        let bits = url.split('/');\n        while (bits.length) {\n          let st = bits.join('/');\n          if (this.urls[st]) {\n            return st;\n          }\n          bits.pop();\n        }\n      }\n      if (this.def && force) {\n        return this.def;\n      }\n      if (this.views.length && force) {\n        return this.views[0].current;\n      }\n      return false;\n    },\n    /**\n     * Formats a baseURL correctly (without 1st slash and with end slash\n     *\n     * @param {String} baseURL\n     * @returns {String}\n     */\n    setBaseURL(baseURL) {\n      while (bbn.fn.substr(baseURL, -1) === '/') {\n        baseURL = bbn.fn.substr(baseURL, 0, baseURL.length - 1);\n      }\n      while (bbn.fn.substr(baseURL, 0, 1) === '/') {\n        baseURL = bbn.fn.substr(baseURL, 1);\n      }\n      return baseURL ? baseURL + '/' : '';\n    },\n    getDefaultView() {\n      return {\n        source: null,\n        title: bbn._(\"Untitled\"),\n        options: null,\n        cached: false,\n        scrollable: true,\n        component: null,\n        icon: '',\n        notext: false,\n        content: null,\n        menu: [],\n        loaded: null,\n        fcolor: null,\n        bcolor: null,\n        load: false,\n        selected: null,\n        css: '',\n        advert: null,\n        dirty: false,\n        help: null,\n        imessages: [],\n        script: null,\n        fixed: false,\n        pinned: false,\n        url: null,\n        current: null,\n        real: false,\n        cfg: {},\n        events: {}\n      };\n    },\n    /*\n    observerEmit(newVal, obs){\n      bbn.fn.log(\"OBS EMIT\", newVal, obs);\n      let ele = $(\".bbn-observer-\" + obs.element, this.$el);\n      if ( ele.length ){\n        let idx = this.getIndex(ele);\n        if ( idx !== false ){\n          let i = bbn.fn.search(this.observers, {id: obs.id, element: obs.element});\n          if ( (i > -1) && (this.observers[i].value !== newVal) ){\n            if ( idx === this.selected ){\n              this.$emit('bbnObs' + obs.element + obs.id, newVal);\n              this.observers[i].value = newVal;\n            }\n            else{\n              this.observers[i].value = newVal;\n              this.$set(this.views[idx].events, 'bbnObs' + obs.element + obs.id, newVal);\n            }\n          }\n        }\n      }\n    },\n    */\n\n    /**\n     * Sends event beforeRoute (cancellable) and launch real routing\n     *\n     * @param {String} url\n     * @param {Boolean} force\n     * @returns {void}\n     */\n    route(url, force) {\n      if (this.ready && (force || !this.activeContainer || url !== this.currentURL)) {\n        let event = new CustomEvent(\"beforeRoute\", {\n          bubbles: false,\n          cancelable: true\n        });\n        this.$emit(\"beforeRoute\", event, url);\n        if (!event.defaultPrevented) {\n          // Checks weather the container is already there\n          if (!url) {\n            let idx = this.getRoute('', true);\n            if (idx) {\n              url = this.urls[idx].currentURL;\n            }\n          }\n          let st = url ? this.getRoute(url) : '';\n          //bbn.fn.log(\"ROUTING FUNCTION EXECUTING FOR \" + url + \" (CORRESPONDING TO \" + st + \")\");\n          if (!url) {\n            return;\n          }\n          if (!force && this.currentURL === url) {\n            //bbn.fn.log(\"SAME URL END ROUTING\");\n            return;\n          }\n          if (url && (!st && this.autoload || this.urls[st] && this.urls[st].load && !this.urls[st].isLoaded)) {\n            this.load(url);\n          }\n          // Otherwise the container is activated ie made visible\n          else {\n            //bbn.fn.log(\"LOADED \" + url);\n            if (!st && this.def && (!url || force)) {\n              st = this.getRoute(this.def);\n              if (st) {\n                url = this.def;\n              }\n            }\n            if (!st && force && this.views.length) {\n              st = this.views[0].url;\n              if (st) {\n                url = this.urls[st].currentURL || st;\n              }\n            }\n            if (st) {\n              this.urls[st].setCurrent(url);\n              this.realRoute(url, st, force);\n            }\n          }\n        }\n      }\n    },\n    /**\n     * Route the router!\n     *\n     * @param {String} url The URL to route to\n     * @param {String} st The URL/key of the container on which we will route\n     * @param {Boolean} force\n     */\n    realRoute(url, st, force) {\n      if (st && this.urls[st]) {\n        //bbn.fn.log(\"REAL ROUTING GOING ON FOR \" + url);\n        if (url !== this.currentURL) {\n          //bbn.fn.log(\"THE URL IS DIFFERENT FROM THE ORIGINAL \" + this.currentURL);\n          this.currentURL = url;\n        }\n        // First routing, triggered only once\n        if (!this.routed) {\n          this.routed = true;\n          this.$emit(\"route1\", this);\n        }\n        this.activate(url, this.urls[st]);\n        if (this.urls[st]) {\n          this.urls[st].currentURL = url;\n          this.urls[st].init();\n          this.$nextTick(() => {\n            let child = this.urls[st].find('bbn-router');\n            if (child) {\n              //bbn.fn.log(\"CHILD ROUTER ROUTING: \" + bbn.fn.substr(url, st.length + 1));\n              child.route(bbn.fn.substr(url, st.length + 1), force);\n            }\n          });\n        }\n      }\n    },\n    /**\n     * Looks for a subrouter and route through it if found.\n     *\n     * @param container\n     */\n    updateView(container) {\n      return;\n      // Looking for a subrouter in the activated container\n      let subRouter = this.getSubRouter();\n      if (subRouter) {\n        // If so routing also this container\n        //bbn.fn.log(\"FROM UPDATEVIEW\");\n        subRouter.route(container.currentURL);\n      } else {\n        //bbn.fn.log(container);\n        if (this.$children.length && !this.currentURL && this.auto) {\n          //bbn.fn.log(\"ROUTING \" + this.url + \" FROM METHOD UPDATEVIEW\");\n          this.route(this.url, true);\n        } else {\n          //bbn.fn.log(\"NOT ROUTING \" + this.currentURL + \" NOR \" + this.url + \"FROM METHOD UPDATEVIEW\");\n        }\n      }\n    },\n    /**\n     * Shows the container with the corresponding URL and hide all others.\n     *\n     * @param url\n     * @param container\n     */\n    activate(url, container) {\n      let todo = false;\n      //bbn.fn.log(\"ACTIVATING \" + url + \" AND SENDING FOLLOWING CONTAINER:\", container);\n      if (!this.activeContainer || container && this.activeContainer !== container) {\n        this.activeContainer = null;\n        bbn.fn.each(this.$children, cp => {\n          if (bbn.fn.isFunction(cp.hide)) {\n            if (cp !== container) {\n              cp.hide();\n            } else {\n              cp.setCurrent(url);\n              this.activeContainer = cp;\n            }\n          }\n        });\n        if (this.activeContainer) {\n          this.activeContainer.show();\n        }\n      } else if (url !== this.activeContainer.currentURL) {\n        this.activeContainer.setCurrent(url);\n      }\n      //bbn.fn.log(\"ACTIVATED \" + url + \" AND ACTIVATED CONTAINER BELOW:\", this.activeContainer);\n    },\n    /**\n     * Function triggered every time a container is shown (at the start of the animation) to change the URL if needed.\n     */\n    enter(container) {\n      //bbn.fn.log(\"THE CONTAINER WILL BE SHOWN: \", container);\n    },\n    changeURL(url, title, replace) {\n      //bbn.fn.log(\"CHANGE URL TO \" + url);\n      if (!bbn.env.isInit) {\n        return;\n      }\n      if (url !== this.currentURL) {\n        this.currentURL = url;\n      }\n      // Changing the current property of the view cascades on the container's currentURL\n      if (this.views[this.selected] && url.indexOf(this.views[this.selected].url) === 0) {\n        this.$set(this.views[this.selected], 'current', url);\n      }\n      if (this.parent) {\n        this.parent.changeURL(this.baseURL + url, title, replace);\n      } else if (replace || url !== bbn.env.path) {\n        if (!replace) {\n          //bbn.fn.log(\"NO REPLAACE\", this.getFullBaseURL() + url, bbn.env.path);\n        }\n        if (!replace && (this.getFullBaseURL() + url).indexOf(bbn.env.path) === 0) {\n          //bbn.fn.log(\"REPLACING\");\n          replace = true;\n        }\n        bbn.fn.setNavigationVars(this.getFullBaseURL() + url, title, {}, replace);\n      }\n    },\n    /**\n     * Returns the baseURL property.\n     *\n     * @returns {string}\n     */\n    getBaseURL() {\n      return this.baseURL;\n    },\n    /**\n     * Returns a string of all the baseURL properties till root.\n     *\n     * @returns {string}\n     */\n    getFullBaseURL() {\n      return this.fullBaseURL;\n    },\n    /**\n     * Returns the full URL from the root router (without the hostname)\n     *\n     * @returns {string}\n     */\n    getFullURL() {\n      let url = this.getURL();\n      if (url !== false) {\n        return this.getFullBaseURL() + url;\n      }\n      return '';\n    },\n    /**\n     * Returns the current URL of the current router\n     *\n     * @returns {string}\n     */\n    getCurrentURL() {\n      return this.currentURL;\n    },\n    /**\n     * Returns the full current URL from the root router (without the hostname)\n     *\n     * @returns {string}\n     */\n    getFullCurrentURL() {\n      let url = this.getCurrentURL();\n      if (url !== false) {\n        return this.getFullBaseURL() + url;\n      }\n      return false;\n    },\n    /**\n     * Returns the url relative to the current tabNav from the given url.\n     *\n     * @param fullURL\n     * @returns {string}\n     */\n    parseURL(fullURL) {\n      let url = fullURL;\n      if (fullURL === undefined) {\n        return '';\n      }\n      if (typeof fullURL !== 'string') {\n        fullURL = fullURL.toString();\n      }\n      if (fullURL.indexOf(bbn.env.root) === 0) {\n        fullURL = bbn.fn.substr(fullURL, bbn.env.root.length);\n      }\n      fullURL = bbn.fn.removeTrailingChars(fullURL, '/');\n      if (this.fullBaseURL === fullURL + '/' || fullURL === '') {\n        return '';\n      }\n      if (this.fullBaseURL) {\n        if (fullURL.indexOf(this.fullBaseURL) === 0) {\n          fullURL = bbn.fn.substr(fullURL, this.fullBaseURL.length);\n        } else {\n          fullURL = '';\n        }\n      }\n      //bbn.fn.log(\"PARSING \" + url + ' INTO ' + fullURL + ' with a baseURL like this: ' + this.fullBaseURL);\n      return fullURL;\n    },\n    isValidIndex(idx) {\n      return this.views[idx] !== undefined;\n    },\n    /**\n     * Activates the default view, or the first one if no default\n     */\n    activateDefault() {\n      let idx = vm.getIndex('', true);\n      if (this.isValidIndex(idx)) {\n        //bbn.fn.log(\"ACTIVATE6\", this.views[idx].current ? this.views[idx].current : this.views[idx].url);\n        this.activate(this.views[idx].current ? this.views[idx].current : this.views[idx].url);\n      }\n    },\n    activateIndex(idx) {\n      if (this.isValidIndex(idx)) {\n        if (this.urls[this.views[idx].url]) {\n          this.route(this.urls[this.views[idx].url].currentURL);\n        } else {\n          this.route(this.views[idx].current);\n        }\n      }\n    },\n    getVue(idx) {\n      if (idx === undefined) {\n        idx = this.selected;\n      }\n      if (this.isValidIndex(idx)) {\n        return this.urls[this.views[idx].url];\n      }\n      return false;\n    },\n    // Returns the corresponding container's component's DOM element\n    getContainer(idx) {\n      if (idx === undefined) {\n        idx = this.selected;\n      }\n      let c = this.getVue(idx);\n      return c ? c.$el : false;\n    },\n    // Returns the next router in the corresponding container if there's any\n    getSubRouter(misc) {\n      let idx = this.getIndex(misc);\n      if (idx === undefined) {\n        idx = this.selected;\n      }\n      let container = this.getVue(idx);\n      if (container) {\n        return container.find('bbn-router') || null;\n      }\n      return null;\n    },\n    getRealVue(misc) {\n      let idx = this.getIndex(misc);\n      let tabnav = this,\n        sub = tabnav;\n      if (idx === undefined) {\n        idx = this.selected;\n      }\n      while (tabnav) {\n        tabnav = sub.getSubRouter(idx);\n        if (tabnav) {\n          sub = tabnav;\n          idx = sub.selected;\n        }\n      }\n      return sub.getVue(idx);\n    },\n    getIndex(misc) {\n      if (!this.views.length) {\n        return false;\n      }\n      if (misc === undefined) {\n        return this.selected;\n      }\n      if (!this.isValidIndex(misc)) {\n        if (typeof misc === 'string') {\n          misc = this.search(misc);\n        } else if (typeof misc === 'object') {\n          // Vue\n          if (misc.$el) {\n            misc = misc.$el;\n          }\n          if (misc.tagName) {\n            bbn.fn.each(this.$children, ct => {\n              if (ct.$vnode && ct.$vnode.componentOptions && ct.$vnode.componentOptions.tag === 'bbn-container' && (ct.$el === misc || ct.$el.contains(misc))) {\n                misc = ct.currentIndex;\n                return false;\n              }\n            });\n          }\n        }\n      }\n      return this.isValidIndex(misc) ? misc : false;\n    },\n    remove(misc, force) {\n      let idx = this.getIndex(misc);\n      if (idx > -1 && !this.views[idx].slot) {\n        let ev = new Event('close', {\n          cancelable: true\n        });\n        if (this.isDirty && this.views[idx].dirty && !ev.defaultPrevented && !force) {\n          ev.preventDefault();\n          this.confirm(this.confirmLeave, () => {\n            let forms = this.views[idx].findAll('bbn-form');\n            if (Array.isArray(forms) && forms.length) {\n              bbn.fn.each(forms, (f, k) => {\n                f.reset();\n              });\n            }\n            this.$nextTick(() => {\n              this.$emit('close', idx, ev);\n              this.remove(idx, true);\n            });\n          });\n        }\n        this.$emit('close', idx, ev);\n        if (force || !ev.defaultPrevented) {\n          let t = this.views.splice(idx, 1);\n          delete this.urls[t.url];\n          bbn.fn.each(this.views, (v, i) => {\n            if (v.idx !== i) {\n              v.idx = i;\n            }\n          });\n        }\n        return true;\n      }\n      return false;\n    },\n    add(obj, idx) {\n      let index;\n      //obj must be an object with property url\n      //bbn.fn.log(\"ADDING\", obj);\n      if (typeof obj === 'object' && obj.url && (idx === undefined || this.isValidIndex(idx) || idx === this.views.length)) {\n        if (!obj.current) {\n          if (bbn.env.path.indexOf(this.getFullBaseURL() + obj.url + '/') === 0) {\n            obj.current = bbn.fn.substr(bbn.env.path, this.getFullBaseURL().length);\n          } else {\n            obj.current = obj.url;\n          }\n        } else if (obj.current !== obj.url && obj.current.indexOf(obj.url + '/') !== 0) {\n          obj.current = obj.url;\n        }\n        if (!obj.current) {\n          obj.current = obj.url;\n        }\n        if (obj.content) {\n          obj.loaded = true;\n        }\n        obj.events = {};\n        if (obj.menu === undefined) {\n          obj.menu = [];\n        }\n        index = this.search(obj.url);\n        //bbn.fn.log(\"ADDING CONTAINER \" + obj.current + \" (\" + index + \")\");\n        if (index !== false) {\n          let o = this.views[index],\n            cn = this.urls[this.views[index].url];\n          if (idx === undefined) {\n            idx = index;\n          }\n          if (cn) {\n            cn.currentIndex = idx;\n          }\n          if (obj.real) {\n            return;\n          }\n          bbn.fn.iterate(obj, (a, n) => {\n            if (o[n] !== a) {\n              // Each new property must be set with $set\n              this.$set(o, n, a);\n            }\n          });\n        } else {\n          if (this.single) {\n            if (this.views.length) {\n              this.views.splice(0, this.views.length);\n            }\n            obj.selected = true;\n            obj.idx = this.views.length;\n          } else {\n            obj.selected = false;\n            obj.idx = idx === undefined ? this.views.length : idx;\n          }\n          bbn.fn.iterate(this.getDefaultView(), (a, n) => {\n            if (obj[n] === undefined) {\n              // Each new property must be set with $set\n              this.$set(obj, n, a);\n            }\n          });\n          this.views.push(obj);\n        }\n      }\n    },\n    search(url) {\n      let r = bbn.fn.search(this.views, \"url\", url);\n      if (r === -1) {\n        bbn.fn.each(this.views, (tab, index) => {\n          if (url.indexOf(tab.url + '/') === 0) {\n            r = index;\n            return false;\n          }\n        });\n      }\n      return r > -1 ? r : false;\n    },\n    callRouter(url, st) {\n      if (this.parent) {\n        let containers = this.ancestors('bbn-container');\n        url = this.getFullBaseURL().substr(this.router.baseURL.length) + url;\n        //bbn.fn.log(\"CALL ROOT ROUTER WITH URL \" + url);\n        // The URL of the last bbn-container as index of the root router\n        this.router.realRoute(url, containers[containers.length - 1].url, true);\n      } else {\n        this.realRoute(url, st, true);\n      }\n    },\n    load(url, force) {\n      if (url) {\n        this.isLoading = true;\n        let finalURL = this.fullBaseURL + url;\n        let idx = this.search(url);\n        let toAdd = false;\n        //bbn.fn.log(\"START LOADING FN FOR IDX \" + idx + \" ON URL \" + finalURL);\n        if (idx !== false) {\n          //bbn.fn.log(\"INDEX RETRIEVED BEFORE LOAD: \" + idx.toString(), this.views[idx].slot, this.views[idx].loading);\n          if (this.views[idx].loading || !force && !this.views[idx].load) {\n            return;\n          }\n          if (force) {\n            toAdd = true;\n            this.views.splice(idx, 1);\n          }\n        } else {\n          toAdd = true;\n          idx = this.views.length;\n        }\n        if (toAdd) {\n          this.$nextTick(() => {\n            this.add({\n              url: url,\n              title: bbn._('Loading'),\n              load: true,\n              loading: true,\n              visible: true,\n              real: false,\n              current: url,\n              error: false,\n              loaded: false\n            }, idx);\n          });\n        }\n        this.$emit('update', this.views);\n        return this.post(finalURL, {\n          _bbn_baseURL: this.fullBaseURL\n        }, d => {\n          this.isLoading = false;\n          //this.remove(url);\n          if (d.url) {\n            d.url = this.parseURL(d.url);\n          }\n          if (!d.url) {\n            d.url = url;\n          }\n          //bbn.fn.log(\"URLS\", url, d.url);\n          if (url.indexOf(d.url) === 0) {\n            d.current = url;\n            //bbn.fn.log(\"CURRENT DEFINED AS \" + d.current);\n          }\n          if (d.data) {\n            d.source = d.data;\n            delete d.data;\n          }\n          if (d.url !== d.current && this.urls[d.current]) {\n            //bbn.fn.log(\"DELETING VIEW CASE\");\n            this.views.splice(this.urls[d.current].idx, 1);\n            delete this.urls[d.current];\n          }\n          if (!d.title || d.title === bbn._('Loading')) {\n            let title = bbn._('Untitled');\n            let num = 1;\n            while (bbn.fn.search(this.views, {\n              title: title\n            }) > -1) {\n              num++;\n              title = bbn._('Untitled') + ' ' + num;\n            }\n            d.title = title;\n          }\n          this.$nextTick(() => {\n            this.add(bbn.fn.extend(d, {\n              slot: false,\n              loading: false,\n              load: true,\n              real: false,\n              loaded: true\n            }));\n            setTimeout(() => {\n              if (!this.urls[d.url]) {\n                throw Error(bbn._(\"Impossible to find the container for URL\") + ' ' + d.url);\n              }\n              //bbn.fn.log(\"LOADED \" + d.url, url);\n              this.urls[d.url].setLoaded(true);\n              // Otherwise the changes we just did on the props wont be taken into account at container level\n              this.urls[d.url].init();\n              this.callRouter(d.current, d.url);\n              this.$emit('update', this.views);\n            });\n          });\n          /*\n          setTimeout(() => {\n            bbn.fn.log(d.url, d, ';;;;;');\n            if ( !this.urls[d.url] ){\n              throw Error(bbn._(\"Impossible to find the container for URL\") + ' ' + d.url);\n            }\n            this.urls[d.url].setLoaded(true);\n            this.urls[d.url].init();\n            setTimeout(() => {\n              bbn.fn.log(\"ROUTER LOADED:\" + d.current);\n              //this.callRouter(d.current, d.url);\n            }, 200)\n          }, 200)\n          */\n        }, (xhr, textStatus, errorThrown) => {\n          this.isLoading = false;\n          this.alert(textStatus);\n          let idx = this.search(this.parseURL(finalURL));\n          if (idx > -1) {\n            let url = this.views[idx].url;\n            this.views.splice(this.urls[url].idx, 1);\n            delete this.urls[url];\n          }\n          /*\n          if ( this.isValidIndex(idx) ){\n            this.views[idx].state = xhr.status;\n            this.views[idx].error = errorThrown;\n            this.views[idx].loading = false;\n            this.views[idx].loaded = true;\n            this.views[idx].menu = false;\n            this.views[idx].title = bbn._('Error') + ' ' + xhr.status;\n            if ( this.views[idx].load !== false ){\n              this.views[idx].load = null;\n            }\n            this.navigate(url);\n            this.activate(url);\n          }\n          */\n          //bbn.fn.log(arguments)\n        }, () => {\n          this.isLoading = false;\n        });\n      }\n    },\n    reload(idx) {\n      if (this.views[idx] && !this.views[idx].slot && this.views[idx].load && this.urls[this.views[idx].url] && this.urls[this.views[idx].url].isLoaded) {\n        this.views[idx].loaded = false;\n        this.urls[this.views[idx].url].isLoaded = false;\n        this.$nextTick(() => {\n          this.route(this.urls[this.views[idx].url].currentURL, true);\n        });\n      }\n    },\n    getDefaultURL() {\n      // If there is a parent router we automatically give the proper baseURL\n      if (this.url) {\n        return this.url;\n      } else if (this.parentContainer && this.parentContainer.currentURL !== this.parentContainer.url) {\n        return bbn.fn.substr(this.parentContainer.currentURL, this.parentContainer.url.length + 1);\n      }\n      if (this.def) {\n        return this.def;\n      } else {\n        return this.parseURL(bbn.env.path);\n      }\n    },\n    getTitle(idx) {\n      let cp = this,\n        res = '';\n      if (idx === undefined) {\n        idx = this.selected;\n      }\n      if (cp.views[idx]) {\n        res += cp.views[idx].title || bbn._('Untitled');\n        if (cp.parentTab) {\n          idx = cp.parentTab.idx;\n          cp = cp.parentTab.tabNav;\n          while (cp) {\n            res += ' < ' + (cp.views[idx].title || bbn._('Untitled'));\n            if (cp.parentTab) {\n              idx = cp.parentTab.idx;\n              cp = cp.parentTab.tabNav;\n            } else {\n              cp = false;\n            }\n          }\n        }\n        res += ' - ';\n      }\n      res += bbn.env.siteTitle || bbn._(\"Untitled site\");\n      return res;\n    }\n  },\n  mounted() {\n    // All routers above (which constitute the fullBaseURL)\n    this.parents = this.ancestors('bbn-router');\n    // The closest\n    this.parent = this.parents.length ? this.parents[0] : false;\n    // The root\n    this.router = this.parents.length ? this.parents[this.parents.length - 1] : this;\n    if (this.parent) {\n      this.parentContainer = this.closest('bbn-container');\n      if (this.parentContainer && this.parentContainer.url) {\n        let uri = this.parentContainer.url;\n        if (this.root && uri !== this.root && uri.indexOf(this.root) === 0) {\n          uri = this.root;\n        }\n        bbn.fn.log(\"URI\", uri);\n        this.baseURL = this.setBaseURL(uri);\n      } else {\n        bbn.fn.log(\"NO URI\", this.root);\n        this.baseURL = this.setBaseURL(this.root);\n      }\n      this.parentContainer.registerSubrouter(this);\n    }\n    this.ready = true;\n  },\n  beforeDestroy() {\n    if (this.parentContainer) {\n      this.parentContainer.unregisterRouter(this);\n    }\n  },\n  watch: {\n    currentURL(newVal, oldVal) {\n      if (this.ready) {\n        this.$nextTick(() => {\n          if (this.activeContainer) {\n            this.changeURL(newVal, this.activeContainer.title);\n          } else if (this.isLoading) {\n            this.changeURL(newVal, bbn._(\"Loading\"));\n          }\n          let idx = this.search(newVal);\n          if (idx !== false && this.selected !== idx) {\n            this.selected = idx;\n          }\n          this.$emit('change', newVal);\n        });\n        this.$emit('route', newVal);\n      }\n    },\n    url(newVal) {\n      if (this.ready) {\n        //bbn.fn.log(\"ROUTER change URL\", newVal);\n        this.route(newVal);\n      }\n    }\n  }\n};\n\n\nlet cpLang = {};\nif (bbn.env.lang) {\n  try {\n    cpLang = await __webpack_require__(\"./src/components/split-tabs/_i18n lazy recursive ^\\\\.\\\\/split\\\\-tabs\\\\..*\\\\.lang$\")(`./split-tabs.${bbn.env.lang}.lang`);\n    if (cpLang.default) {\n      cpLang = cpLang.default;\n    }\n  } catch (err) {}\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'bbn-split-tabs',\n  definition: cpDef,\n  template: _split_tabs_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  style: _split_tabs_less__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  lang: cpLang\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/split-tabs/split-tabs.js?");

/***/ })

}]);