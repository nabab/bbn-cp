/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/finder-finder-js"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/finder/finder.less":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/finder/finder.less ***!
  \************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.bbn-finder > .bbn-scroll-container > .bbn-scroll-content {\n  display: flex;\n}\n.bbn-finder .bbn-finder-info-dirs > div:nth-child(odd) {\n  text-align: right;\n}\n.bbn-finder .bbn-finder-info-dirs > div:nth-child(even) {\n  text-align: center;\n}\n.bbn-finder .bbn-finder-info-file-container {\n  width: 60rem;\n  float: left;\n}\n.bbn-finder .bbn-finder-info-file-container .CodeMirror {\n  font-size: 10px!important;\n}\n.bbn-finder .bbn-finder-pane {\n  width: 25rem;\n  border-right: 2px dotted;\n  float: left;\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/finder/finder.less?./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/components/finder/_i18n lazy recursive ^\\.\\/finder\\..*\\.lang$":
/*!******************************************************************************************!*\
  !*** ./src/components/finder/_i18n/ lazy ^\.\/finder\..*\.lang$ strict namespace object ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./finder.fr.lang\": [\n\t\t\"./src/components/finder/_i18n/finder.fr.lang\",\n\t\t\"src_components_finder__i18n_finder_fr_lang\"\n\t],\n\t\"./finder.it.lang\": [\n\t\t\"./src/components/finder/_i18n/finder.it.lang\",\n\t\t\"src_components_finder__i18n_finder_it_lang\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src/components/finder/_i18n lazy recursive ^\\\\.\\\\/finder\\\\..*\\\\.lang$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/finder/_i18n/_lazy_^\\.\\/finder\\..*\\.lang$_strict_namespace_object?");

/***/ }),

/***/ "./src/components/finder/finder.html":
/*!*******************************************!*\
  !*** ./src/components/finder/finder.html ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = `<div :class=\"[componentClass, 'bbn-overlay']\">\n  <bbn-scroll axis=\"x\" :class=\"componentClass\" ref=\"scroll\">\n    <!-- Each tree pane -->\n    <div bbn-for=\"(p, i) in dirs\"\n         class=\"bbn-flex-height bbn-finder-pane bbn-border-right\">\n\n      <div bbn-if=\"uploading === p.path\"\n           class=\"bbn-flex-fill\">\n        <div class=\"bbn-right\">\n          <bbn-button icon=\"nf nf-fa-close\"\n                      @click=\"uploading = false\"\n                      :title=\"_('Cancel upload')\"\n                      :notext=\"true\"\n                      class=\"bbn-xs\"/>\n        </div>\n        <bbn-upload bbn-model=\"uploaded\" \n                    ref='upload'\n                    :data=\"{\n                      origin: origin, \n                      path: p.path\n                    }\"\n                    :save-url=\"root + 'actions/finder/upload'\"\n                    @success=\"uploadSuccess\"\n                    :label=\"{\n                      uploadOrDrop: 'Select files or drag & drop it here'\n                    }\"/>\n      </div>\n      <div class=\"bbn-flex-fill\" bbn-else>\n        <div class=\"bbn-overlay\">\n          <bbn-tree :source=\"source\"\n                    :data=\"getData(p)\"\n                    :map=\"mapTree\"\n                    :menu=\"itemsContextMenu\"\n                    :key=\"'/' + p.path\"\n                    @load=\"updateInfo\"\n                    @select=\"select\"/>\n        </div>\n      </div>\n      \n      \n      <div class=\"bbn-w-100 bbn-widget bbn-finder-info\" style=\"height: 12rem\">\n        <div :class=\"{\n                      'bbn-overlay': true,\n                      'bbn-state-default': true,\n                      'bbn-state-active': i === (numCols - 1),\n                      'bbn-padding': true,\n                      'bbn-alt-background': true,\n                      'bbn-alt-border-top': true\n                      }\">\n          <div class=\"bbn-grid-fields bbn-finder-info-dirs\">\n            <div class=\"bbn-grid-full bbn-l\">\n              <bbn-button class=\"bbn-xs bbn-p\"\n                          @click=\"refresh(p.name)\"\n                          :title=\"_('Refresh tree')\"\n                          icon=\"nf nf-fa-refresh\"/>\n              <bbn-context :source=\"contextMenuTree\"\n                          :data=\"{path: p.path}\" \n                          :key=\"p.path\">\n                <bbn-button class=\"bbn-xs\"\n                            @click=\"context\"\n                            :title=\"_('New Folder/Add files to this folder')\"\n                            icon=\"nf nf-fa-plus\"/>\n              </bbn-context>\n            </div>\n            <div bbn-text=\"_('Number of childs')\" bbn-if=\"p.num_dirs || p.num_files\"></div>\n            <div bbn-text=\"p.num_dirs + p.num_files\" bbn-if=\"p.num_dirs || p.num_files\"></div>\n\n            <div bbn-text=\"_('Directories')\" bbn-if=\"p.num_dirs\"></div>\n            <div bbn-text=\"p.num_dirs\" bbn-if=\"p.num_dirs\"></div>\n\n            <div bbn-text=\"_('Files')\" bbn-if=\"p.num_files\"></div>\n            <div bbn-text=\"p.num_files\" bbn-if=\"p.num_files\"></div>\n\n            <div bbn-text=\"_('Size')\"></div>\n            <div bbn-if=\"!p.size\">\n              <bbn-button icon=\"nf nf-md-scale\"\n                          class=\"bbn-xs\"\n                          @click=\"get_size(p)\" \n                          :title=\"_('Get dir size')\"/>\n            </div>\n            <span bbn-text=\"p.size\"\n                  bbn-else\n                  style=\"text-align:right!important\"/>\n\n            <div class=\"bbn-grid-full bbn-c\" bbn-if=\"isLoading && (i === (numCols - 1))\">\n              <bbn-button icon=\"nf nf-fa-hand_paper\" \n                          @click=\"abortRequest(i)\"\n                          :label=\"_('Abort request')\"\n                          :title=\"_('Cancel the current request')\"/>\n            </div>\n          </div>\n        </div>          \n      </div>\n    </div>\n    <!-- File detail / Image preview -->\n    <div bbn-if=\"preview && currentFile\"               \n          class=\"bbn-finder-info-file-container bbn-flex-height\">\n      <div class=\"bbn-grid-fields bbn-header bbn-widget bbn-spadding\">\n        <span bbn-text=\"_('Filename')\"/>\n        <span bbn-text=\"currentFile ? currentFile.node.data.value : ''\"/>\n        <span bbn-if=\"currentFile.info && currentFile.info.size\"\n              bbn-text=\"_('Size')\"/>\n        <span bbn-text=\"(currentFile.info && currentFile.info.size) ? currentFile.info.size : ''\"/>\n        <span bbn-if=\"(currentFile.info && currentFile.info.width)\"\n              bbn-text=\"_('Width')\"/>\n        <span bbn-if=\"(currentFile.info && currentFile.info.width)\"\n              bbn-text=\"currentFile.info.width + 'px'\"/>\n        <span bbn-if=\"(currentFile.info && currentFile.info.height)\"\n              bbn-text=\"_('Height')\"/>\n        <span bbn-if=\"(currentFile.info && currentFile.info.height)\"\n              bbn-text=\"currentFile.info.height + 'px'\"/>\n        <!--span bbn-if=\"currentFile.info && currentFile.info.creation\" bbn-text=\"_('Creation')\"></span>\n        <span-- bbn-text=\"(currentFile.info && currentFile.info.creation) ? currentFile.info.creation : ''\"></span-->\n        <span bbn-if=\"currentFile.info && currentFile.info.mtime\"\n              bbn-text=\"_('Last modification')\"/>\n        <span bbn-text=\"(currentFile.info && currentFile.info.mtime) ? currentFile.info.mtime : ''\"/>\n        <div class=\"bbn-grid-full bbn-right\">\n          <bbn-button icon=\"nf nf-fa-hand_paper_o\"\n                      @click=\"abortRequest('file')\"\n                      :label=\"_('Abort request')\"\n                      :title=\"_('Cancel the current request')\"\n                      bbn-if=\"isLoading\"/>\n          <bbn-button icon=\"nf nf-fa-close\"\n                      @click=\"closePreview\"\n                      :title=\"_('Close preview')\"\n                      :notext=\"true\"/>\n        </div>\n      </div>\n      <bbn-code class=\"bbn-flex-fill\" \n                bbn-if=\"currentFile.info && currentFile.info.content && !isImage && !isLoading\"\n                :value=\"currentFile.info.content\"/>\n      <div bbn-elseif=\"isImage && !isLoading\" \n            class=\"bbn-flex-fill bbn-c bbn-padding\">\n        <!--need of origin for the filesystem to recognize the environment-->\n        <img :src=\"root + 'actions/finder/image/' +  encodedURL + '/' + origin\" style=\"max-width:80%\">\n      </div>\n      <div bbn-elseif=\"currentFile.info && !currentFile.info.content && !isImage && !isLoading\"\n            class=\"bbn-padding bbn-medium bbn-b\"\n            bbn-text=\"_('The content of this file cannot be shown')\">\n      </div>\n      <div bbn-elseif=\"isLoading\" \n            class=\"bbn-padding bbn-medium bbn-b\"\n            bbn-text=\"_('Loading file infos..')\"/>\n    </div>\n  </bbn-scroll>\n  <bbn-popup ref=\"popup\"/>\n</div>\n`;\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/finder/finder.html?");

/***/ }),

/***/ "./src/components/finder/finder.js":
/*!*****************************************!*\
  !*** ./src/components/finder/finder.js ***!
  \*****************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _finder_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./finder.html */ \"./src/components/finder/finder.html\");\n/* harmony import */ var _finder_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./finder.less */ \"./src/components/finder/finder.less\");\n/**\n * Created by BBN on 15/08/2019.\n */\nconst cpDef = {\n  /**\n   * @mixin bbn.cp.mixins.basic\n   * @mixin bbn.cp.mixins.localStorage\n   */\n  mixins: [bbn.cp.mixins.basic, bbn.cp.mixins.localStorage],\n  statics() {\n    let fields = ['host', 'user', 'pass'],\n      filesRules = {\n        pdf: 'nf nf-md-file_pdf bbn-red',\n        php: 'nf nf-md-language_php bbn-blue',\n        doc: 'nf nf-md-file_word bbn-blue',\n        docx: 'nf nf-md-file_word bbn-blue',\n        xls: 'nf nf-md-file_excel bbn-green',\n        xlsx: 'nf nf-md-file_excel bbn-green',\n        ppt: 'nf nf-md-file_powerpoint bbn-red',\n        pptx: 'nf nf-md-file_powerpoint bbn-red',\n        psd: 'nf nf-dev-photoshop bbn-blue',\n        js: 'nf nf-md-language_javascript bbn-red',\n        html: 'nf nf-md-language_html5 bbn-green',\n        txt: 'nf nf-oct-file_text',\n        css: 'nf nf-dev-css3 bbn-orange',\n        less: 'nf nf-dev-css3 bbn-orange',\n        zip: 'nf nf-md-archive bbn-orange',\n        gz: 'nf nf-md-archive',\n        gzip: 'nf nf-md-archive',\n        png: 'nf nf-md-file_image bbn-purple',\n        jpeg: 'nf nf-md-file_image bbn-blue',\n        jpg: 'nf nf-md-file_image bbn-blue',\n        gif: 'nf nf-md-file_image bbn-pink',\n        tiff: 'nf nf-md-file_image bbn-brown',\n        json: 'nf nf-md-json bbn-red'\n      },\n      imageExt = ['jpeg', 'png', 'jpg', 'tiff', 'gif'];\n    return {\n      fields,\n      filesRules,\n      imageExt\n    };\n  },\n  props: {\n    /**\n     * @prop {String} ['.'] path\n     */\n    path: {\n      type: String,\n      default: '.'\n    },\n    /**\n     * @prop {} source\n     */\n    source: {},\n    /**\n     * @prop {String} origin\n     */\n    origin: {\n      type: String\n    },\n    /**\n     * @prop {String} root\n     */\n    root: {\n      type: String\n    },\n    /**\n     * @prop {Boolean} [true] preview\n     */\n    preview: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * @prop {String} ['nf nf-fa-folder bbn-yellow'] folderIcon\n     */\n    folderIcon: {\n      type: String,\n      default: 'nf nf-fa-folder bbn-yellow'\n    }\n  },\n  data() {\n    return {\n      /**\n       * @data {Boolean} [false] uploading\n       */\n      // takes the value of the path when the upload is clicked from the context menu - used to show / hide bbn-upload\n      uploading: false,\n      //bbn-model of bbn-upload\n      /**\n       * @data {Array} [[]] uploaded\n       */\n      uploaded: [],\n      //defined when the button new folder/file is clicked on the bottom of the tree\n      /**\n       * @data {String} [''] currentContextPath\n       */\n      currentContextPath: '',\n      /**\n       * @data {Boolean} [false] hasConnection\n       */\n      hasConnection: false,\n      /**\n       * @data {Array} [[]] data\n       */\n      data: [],\n      /**\n       * @data {String} [''] host\n       */\n      host: '',\n      /**\n       * @data {String} [''] user\n       */\n      user: '',\n      /**\n       * @data {String} [''] pass\n       */\n      pass: '',\n      /**\n       * @data {Boolean} [false] copied\n       */\n      copied: false,\n      /**\n       * @data {String} [''] oldDir\n       */\n      oldDir: '',\n      /**\n       * @data {Array} [[{name:'',path:'.',empty_dirs:0,num_dirs:0,num_files:0,size:0}]] dirs\n       */\n      dirs: [{\n        name: '',\n        path: '.',\n        empty_dirs: 0,\n        num_dirs: 0,\n        num_files: 0,\n        size: 0\n      }],\n      /**\n       * @data {Boolean} [false] currentFile\n       */\n      currentFile: false,\n      /**\n       * @data [null] dirInfo\n       */\n      dirInfo: null,\n      /**\n       * @data {Boolean} [false] editingNode\n       */\n      editingNode: false,\n      /**\n       * @data {Boolean} [false] isImage\n       */\n      isImage: false,\n      /**\n       * @data {Boolean} [false] isLoading}\n       */\n      isLoading: false,\n      /**\n       * @data {Boolean} [false] currentTitle\n       */\n      currentTitle: false\n    };\n  },\n  computed: {\n    /**\n     * @computed mapUploaded\n     * @return {(Array)}\n     */\n    mapUploaded() {\n      if (this.uploaded.length) {\n        return bbn.fn.map(this.uploaded, a => {\n          a.name = a.name.replace(' ', '_');\n          return a;\n        });\n      }\n      return [];\n    },\n    /**\n     * @computed currentPath\n     * @return {String}\n     */\n    currentPath() {\n      return this.dirs.map(a => {\n        return a.name ? a.name + '/' : '';\n      }).join('');\n    },\n    /**\n     * @computed numCols\n     * @return {Number}\n     */\n    numCols() {\n      return this.dirs.length;\n    },\n    /**\n     * @computed encodeURL\n     * @return {String}\n     */\n    encodedURL() {\n      if (this.currentFile && this.isImage) {\n        //return btoa(this.origin + this.currentPath + this.currentFile.node.data.value)\n        return btoa(this.currentPath + this.currentFile.node.data.value);\n      }\n    }\n  },\n  methods: {\n    //abort the current request\n    /**\n     * Abord the current request.\n     *\n     * @method abortRequest\n     * @param {Number} i\n     */\n    abortRequest(i) {\n      bbn.fn.happy(i);\n      let loadBar = this.closest('bbn-appui').getRef('loading');\n      if (loadBar) {\n        let loadUrl = loadBar.currentItem.url;\n        if (bbn.fn.isNumber(i) && loadUrl === 'ide/finder') {\n          bbn.fn.abort(loadBar.currentItem.key);\n          appui.success(bbn._('Current request aborted'));\n          this.currentFile = false;\n          this.dirs.splice(i, 1);\n        } else if (loadUrl.indexOf('ide/actions/finder/file') === 0) {\n          this.currentFile = false;\n          this.isLoading = false;\n          bbn.fn.abort(loadBar.currentItem.key);\n        }\n      }\n    },\n    // at click on the button of the new folder/ file on the bottom of the tree defines the property path of the current tree. Is the only way to know the current context \n    /**\n     * At click on the button of the new folder/ file on the bottom of the tree defines the property path of the current tree. Is the only way to know the current context.       *\n     *\n     * @method context\n     * @param a\n     * @param {Object} button\n     */\n    context(a, button) {\n      this.currentContextPath = button.closest('bbn-context').data.path;\n    },\n    /**\n     * Closes the preview of the file.\n     *\n     * @method closePreview\n     */\n    //closes the preview of the file\n    closePreview() {\n      this.currentFile = false;\n      this.isLoading = false;\n    },\n    //refresh the tree data\n    /**\n     * Refresh the tree data0\n     *\n     * @method refresh\n     * @param {String} name\n     */\n    refresh(name) {\n      let trees = this.findAll('bbn-tree');\n      if (trees.length) {\n        let tree = bbn.fn.filter(trees, a => {\n          return a.data.name === name;\n        });\n        if (tree.length) {\n          tree[0].reload();\n        }\n      }\n    },\n    /**\n     * Get the size of the current tree (the selected folder of the previous tree).\n     *\n     * @method get_size\n     * @param {Object} p\n     */\n    get_size(p) {\n      let idx = bbn.fn.search(this.dirs, 'name', p.name);\n      this.post(this.root + 'actions/finder/dirsize', {\n        path: p.path,\n        origin: this.origin\n      }, d => {\n        if (d.success) {\n          this.dirs[idx].size = d.size;\n        } else {\n          appui.error(bbn._('Something went wrong'));\n        }\n      });\n    },\n    /**\n     * @method add\n     * @param {String} path\n     */\n    add(path) {\n      let fpath = path;\n      if (this.dirs.length > 1) {\n        fpath = this.currentPath + path;\n      }\n      this.dirs.push({\n        name: path,\n        path: fpath,\n        empty_dirs: 0,\n        num_dirs: 0,\n        size: 0\n      });\n    },\n    /**\n     * Remove the current dirs.\n     *\n     * @method removeCurrentDir\n     */\n    removeCurrentDir() {\n      this.dirs.pop();\n    },\n    /**\n     * Method at @load of bbn-tree.\n     *\n     * @method updatInfo\n     * @param {Object} res\n     */\n    updateInfo(res) {\n      if (res && res.path) {\n        setTimeout(() => {\n          let idx = bbn.fn.search(this.dirs, {\n            path: res.path\n          });\n          if (idx > -1) {\n            this.dirs[idx].num_dirs = res.num_dirs;\n            this.dirs[idx].num_files = res.num_files;\n            this.isLoading = false;\n          }\n        }, 300);\n      }\n    },\n    /**\n     * Method at @select of bbn-tree, defines currentFile and makes the post to take the infos of the file.\n     *\n     * @method select\n     * @param {Object} node\n     */\n    select(node) {\n      // Reinit\n      this.isImage = false;\n      this.isLoading = true;\n      this.currentFile = {\n        node: node\n      };\n      if (node.data.value) {\n        let path = '';\n        let num = 2;\n        if (node.tree.data.path && node.tree.data.path !== '.') {\n          path += node.tree.data.path;\n          num += path.split('/').length;\n        }\n        path += node.data.value;\n        if (this.currentPath !== path) {\n          while (num <= this.numCols) {\n            this.removeCurrentDir();\n          }\n          if (node.data.dir) {\n            this.currentFile = false;\n            this.dirInfo = node.data;\n            this.add(node.data.value);\n          } else if (node.data.file) {\n            let idx = node.data.value.lastIndexOf('.'),\n              ext = '';\n            if (idx > -1) {\n              let val = node.data.value.length - idx;\n              ext = node.data.value.slice(-val);\n            }\n\n            //isImage\n            if (!bbnFinder.imageExt.includes(ext)) {\n              this.post(this.root + 'actions/finder/file', {\n                node: node.data,\n                path: this.currentPath,\n                origin: this.origin,\n                ext: ext,\n                width: 450,\n                height: 300\n              }, d => {\n                if (d.success && d.info) {\n                  this.currentFile = {\n                    node: node,\n                    height: d.info.height ? d.info.height : '',\n                    width: d.info.width ? d.info.width : '',\n                    info: d.info,\n                    ext: ext\n                  };\n                  if (d.info.is_image) {\n                    this.isImage = true;\n                  }\n                } else {\n                  appui.error(bbn._('Something went wrong while loading the file infos'));\n                }\n                this.isLoading = false;\n              });\n            } else {\n              return;\n              bbn.fn.postOut(this.root + 'actions/finder/image/' + this.encodedURL);\n            }\n          }\n        }\n      }\n    },\n    /**\n     * @method mapTree\n     * @param {Object} node\n     * @return {Object}\n     */\n    mapTree(node) {\n      //bbn.fn.log(\"NODE\", node);\n      let bits = node.text.split('.');\n      let ext = bits[bits.length - 1];\n      if (node.dir) {\n        node.icon = this.folderIcon;\n      } else if (bbnFinder.filesRules[ext]) {\n        node.icon = bbnFinder.filesRules[ext];\n      }\n      return node;\n    },\n    /**\n     * @method getData\n     * @param {Object} p\n     */\n    getData(p) {\n      //return $.extend({\n      return bbn.fn.extend({\n        name: p.name,\n        path: p.path,\n        origin: this.origin\n      }, this.hasConnection ? {\n        host: this.host,\n        user: this.user,\n        pass: this.pass\n      } : {});\n    },\n    /**\n     * @method contextMenuTree\n     * @fires uploadFile\n     * @fires newFolder\n     * @return {[{action: uploadFile, text: string}, {action: newFolder, text: string}, {action: log, text: string}]}\n     */\n    contextMenuTree() {\n      return [{\n        text: '<i class=\"nf nf-fa-file\"></i>' + bbn._('Add files to this folder'),\n        action: () => {\n          this.uploadFile(this.currentContextPath);\n        }\n      }, {\n        text: '<i class=\"nf nf-custom-folder\"></i>' + bbn._('Create new folder'),\n        action: () => {\n          this.newFolder();\n        }\n      }, {\n        text: '<i class=\"nf nf-fa-paste\"></i>' + bbn._('Paste'),\n        action: node => {\n          bbn.fn.log('context--->', arguments);\n        }\n      }];\n    },\n    /**\n     * Returns the array of buttons of the context menu\n     *\n     * @method itemContextMenu\n     * @param {Object} n the node\n     * @param {Number} i the index of the node\n     * @fires copy\n     * @fires newFolder\n     * @fires paste\n     * @fires download\n     * @fires edit\n     * @fires delete\n     * @return {Array}\n     */\n    itemsContextMenu(n, i) {\n      let objContext = [{\n        icon: 'nf nf-fa-copy',\n        text: bbn._('Copy'),\n        action: node => {\n          this.copy(node);\n        }\n      }];\n      if (n.data.dir) {\n        objContext.push({\n          icon: 'nf nf-fa-paste',\n          text: bbn._('Create new folder'),\n          action: node => {\n            this.newFolder(node);\n          }\n        });\n        if (this.copied !== false) {\n          objContext.push({\n            icon: 'nf nf-fa-paste',\n            text: bbn._('Paste'),\n            action: node => {\n              this.paste(node);\n            }\n          });\n        }\n      } else {\n        objContext.push({\n          icon: 'nf nf-fa-download',\n          text: bbn._('Download'),\n          action: node => {\n            this.download(node);\n          }\n        });\n      }\n      if (this.closest('appui-ide-explorer').source.type === 'nextcloud') {\n        objContext.push({\n          icon: 'nf nf-fa-edit',\n          text: bbn._('Rename'),\n          action: node => {\n            this.edit(node);\n          }\n        }, {\n          icon: 'nf nf-fa-trash_alt',\n          text: bbn._('Delete'),\n          action: node => {\n            this.delete(node);\n          }\n        });\n      }\n      return objContext;\n    },\n    /**\n     *\n     * @method uploadFile\n     * @param {String} path\n     */\n    uploadFile(path) {\n      this.uploading = this.currentContextPath;\n    },\n    /**\n     * @method uploadSuccess\n     * @param a\n     * @param b\n     * @param {Object} d data\n     * @fires getRef\n     */\n    uploadSuccess(a, b, d) {\n      bbn.fn.happy('now');\n      bbn.fn.log(\"FINDER\", d.data, arguments, 'args');\n      if (d.data.success) {\n        if (d.data.name) {\n          appui.success(bbn._(d.data.name + ' ' + 'successfully uploaded'));\n          if (this.getRef('upload').filesSuccess.length && this.getRef('upload').filesSuccess.length === this.uploaded.length) {\n            setTimeout(() => {\n              this.uploading = false;\n              this.uploaded = [];\n            }, 500);\n          }\n        }\n      } else {\n        appui.error(bbn._('Something went wrong while uploading the file'));\n      }\n    },\n    /**\n     * @method newFolder\n     *\n     * @param {Object} node\n     */\n    newFolder(node) {\n      if (node) {\n        let tmp = node.tree.data.path,\n          path = '';\n        if (tmp.indexOf('/') === 0) {\n          path = bbn.fn.substr(tmp, 1, tmp.length);\n        } else {\n          path = tmp + '/';\n        }\n        node.getPopup({\n          label: bbn._('New Directory'),\n          height: '150px',\n          width: '350px',\n          source: {\n            treeUid: node.closest('bbn-tree')._uid,\n            idx: node.idx,\n            node: node.data,\n            uid: node._uid,\n            origin: this.origin,\n            path: path,\n            root: this.root,\n            new: true,\n            newDir: ''\n          },\n          component: this.$options.components.form\n        });\n      } else {\n        if (this.currentContextPath.length) {\n          let idx = bbn.fn.search(this.findAll('bbn-tree'), 'data.path', this.currentContextPath),\n            treeUid,\n            tree;\n          if (idx > -1) {\n            tree = this.findAll('bbn-tree')[idx];\n            treeUid = tree._uid;\n            tree.getPopup({\n              label: bbn._('New Directory'),\n              height: '150px',\n              width: '350px',\n              source: {\n                treeUid: treeUid,\n                node: {\n                  //just because in the case of new folder from node the value is expected in the controller\n                  value: ''\n                },\n                origin: this.origin,\n                path: this.currentContextPath,\n                root: this.root,\n                new: true,\n                newDir: '',\n                isFromTree: true\n              },\n              component: this.$options.components.form\n            });\n          }\n          bbn.fn.happy(this.currentContextPath);\n        }\n      }\n    },\n    /**\n     * paste the node previously copied in the property this.copied in the current selected dir\n     *\n     * @method paste\n     * @param {Object} n the node\n     */\n    paste(n) {\n      n.isSelected = true;\n      bbn.fn.log('PASTE', n, typeof n);\n      //case of paste called from context menu and not from nodes of the tree\n      let value = '';\n      if (typeof n === 'string') {\n        value = bbn._('the current folder');\n      } else {\n        value = n.data.value;\n      }\n      if ((typeof n === 'string' || n.data.dir) && this.copied) {\n        let st = bbn._('Do you want to paste') + ' ' + this.copied.data.value + ' ' + bbn._('into') + ' ' + value + '?';\n        let trees = this.findAll('bbn-tree'),\n          path = '';\n        this.confirm(bbn._(st), () => {\n          this.post(this.root + 'actions/finder/paste', {\n            node: this.copied.data,\n            origin: this.origin,\n            old_dir: this.oldDir,\n            new_dir: this.currentPath\n          }, d => {\n            if (d.success) {\n              bbn.fn.happy('pasted');\n              //bbn.fn.log(n.tree.items)\n              bbn.fn.each(trees, (v, i) => {\n                //bbn.fn.log(n,( v.data.name === n.data.value ), v.data.name ,n.data.value )\n                if (v.data.name === n.data.value) {\n                  //bbn.fn.log(v.source)\n                  v.reload();\n                }\n              });\n              appui.success(this.copied.data.value + ' ' + bbn._('successfully pasted into ' + n.data.value));\n            } else {\n              appui.error(bbn._('Something went wrong'));\n            }\n            this.copied = false;\n            this.oldDir = '';\n          });\n        });\n      } else if (!this.copied) {\n        this.alert(bbn._('The clipboard is empty!'));\n      }\n    },\n    //download the file\n    /**\n     * @method download\n     * @param {Object} n\n     */\n    download(n) {\n      bbn.fn.postOut(this.root + 'actions/finder/download/' + n.data.value, {\n        value: n.data.value,\n        file: n.data.file,\n        path: this.currentPath !== n.data.value + '/' ? this.currentPath : '',\n        origin: this.origin,\n        destination: this.origin + 'download/' + dayjs().format('x') + '/'\n      });\n    },\n    /**\n     * Edits the name of the current selected node.\n     *\n     * @method edit\n     * @param {Object} node\n     */\n    edit(node) {\n      this.editingNode = false;\n      let oldValue = node.data.value,\n        tmp = node.closest('bbn-tree').data.path,\n        path = '';\n      if (tmp.indexOf('/') === 0) {\n        path = bbn.fn.substr(tmp, 1, tmp.length);\n      } else {\n        path = tmp + '/';\n      }\n      let currentPath = path;\n      this.editingNode = node;\n      node.getPopup({\n        label: bbn._('Rename'),\n        height: '150px',\n        width: '350px',\n        source: {\n          treeUid: node.closest('bbn-tree')._uid,\n          idx: node.idx,\n          node: node.data,\n          origin: this.origin,\n          path: currentPath,\n          oldValue: oldValue,\n          root: this.root\n        },\n        component: this.$options.components.form\n      });\n    },\n    /**\n     * Deletes the current selected node.\n     *\n     * @method delete\n     * @param {Object} node\n     */\n    delete(node) {\n      this.confirm(bbn._('Do you want to delete') + ' ' + node.data.value + '?', () => {\n        let st = node.tree.data.path,\n          //st = ( (this.mode === 'ftp') || (this.mode === 'ssh')) ? this.origin + this.currentPath : this.currentPath,\n          name = node.data.value;\n        /*if ( node.data.dir && ( this.currentPath === '' ) ){\n          st += node.data.value;\n        }\n        if ( node.data.file ){\n          st += node.data.value;\n        }\n        */\n\n        this.post(this.root + 'actions/finder/delete', {\n          path: st,\n          name: name,\n          origin: this.origin\n        }, d => {\n          if (d.success) {\n            let items = node.tree.items;\n            if (items.length) {\n              items.splice(node.idx, 1);\n            }\n            if (node.data.dir && this.dirs.length) {\n              let idx = bbn.fn.search(this.dirs, 'path', node.tree.data.path + '/' + node.data.value);\n              if (idx > -1) {\n                this.dirs.splice(idx);\n              }\n            }\n            //destroy the next tree in the case of elimination of a folder\n            if (node.data.dir && this.dirs.length > 1) {\n              this.dirs.pop();\n            }\n            appui.success(name + ' ' + bbn._('successfully deleted'));\n            this.currentFile = false;\n          } else {\n            appui.error(bbn._('Something went wrong while deleting' + node.data.value));\n          }\n        });\n      });\n    },\n    /**\n     * @method dragStart\n     */\n    dragStart() {\n      bbn.fn.log('START', arguments);\n    },\n    /**\n     * @method dragEnd\n     */\n    dragEnd() {\n      bbn.fn.log('END', arguments);\n    },\n    /**\n     * Insert the current selected node in the property this.copied.\n     * @method copy\n     * @param {Object} n the node\n     * @fires confirm\n     */\n    copy(n) {\n      bbn.fn.happy('copy');\n      bbn.fn.log(\"ON COPY\", arguments);\n      this.copied = false;\n      this.confirm(bbn._('Do you want to copy') + ' ' + n.data.value + '?', () => {\n        this.copied = n;\n        /*if ( n.data.dir && this.dirs.length > 2){\n          let st = this.currentPath.slice(0,-1),\n          idx = st.lastIndexOf('/');\n          if ( idx > -1 ){\n            st = st.substring(0, idx);\n          }\n          this.oldDir = st + '/';\n        }\n        else if ( n.data.dir && this.dirs.length <= 2 ){\n          this.oldDir = '';\n        }\n        else {\n          this.oldDir = this.currentPath;\n        }*/\n        this.oldDir = n.tree.data.path;\n        let st = n.data.file ? bbn._('File') : bbn._('Folder');\n        st += ' ' + bbn._('successfully copied');\n        appui.success(st);\n      });\n    },\n    /**\n     * @method updateScroll\n     * @fires $nextTick\n     * @fires getRef\n     */\n    updateScroll() {\n      this.$nextTick(() => {\n        let sc = this.getRef('scroll');\n        if (sc) {\n          //sc.onResize().then(() => {\n          //setTimeout(() => {\n          //bbn.fn.log(\"IT SHOULD GO TO THE END OF THE SCROLL\")\n          sc.scrollEndX(true);\n          //}, 250);\n          //});\n        }\n      });\n    }\n  },\n  /**\n   * @event mounted\n   * @fires add\n   */\n  mounted() {\n    if (this.path) {\n      bbn.fn.each(this.path.split('/'), a => {\n        if (a) {\n          this.add(a);\n        }\n      });\n    }\n  },\n  watch: {\n    /**\n     * @watch isLoading\n     * @param val\n     */\n    isLoading(val) {\n      //bbn.fn.log('isloading->>>>', val, new Date())\n    },\n    /**\n     * @watch host\n     * @param newVal\n     * @param oldVal\n     * @fires checkDisconnect\n     */\n    host(newVal, oldVal) {\n      if (this.hasConnection) {\n        this.checkDisconnect(this.getRef('host'), oldVal);\n      }\n    },\n    /**\n     * @watch user\n     * @param newVal\n     * @param oldVal\n     * @fires checkDisconnect\n     */\n    user(newVal, oldVal) {\n      if (this.hasConnection) {\n        this.checkDisconnect(this.getRef('user'), oldVal);\n      }\n    },\n    /**\n     * @watch pass\n     * @param newVal\n     * @param oldVal\n     * @fires checkDisconnect\n     */\n    pass(newVal, oldVal) {\n      if (this.hasConnection) {\n        this.checkDisconnect(this.getRef('pass'), oldVal);\n      }\n    },\n    /**\n     * @watch hasConnection\n     * @fires removeCurrentDir\n     * @fires add\n     */\n    hasConnection() {\n      while (this.numCols) {\n        this.removeCurrentDir();\n      }\n      setTimeout(() => {\n        this.add('');\n      }, 250);\n    },\n    /**\n     * @watch dirs\n     * @fires updateScroll\n     */\n    dirs() {\n      this.updateScroll();\n    },\n    /**\n     * @watch currentFile\n     * @fires updateScroll\n     */\n    currentFile() {\n      this.updateScroll();\n    },\n    /**\n     * @watch currentPath\n     * @param v\n     * @emits change\n     */\n    currentPath(v) {\n      this.$emit('change', v);\n    }\n  },\n  components: {\n    form: {\n      name: 'form',\n      template: `\n        <bbn-form class=\"bbn-flex-height\"\n                  :source=\"source\" \n                  @success=\"success\" \n                  :action=\"source.root + 'actions/finder/' + (!source.new ? 'rename' : 'new_dir')\"\n                  >\n          <div class=\"bbn-grid-fields bbn-l bbn-padding\">\n            <label>` + bbn._('Name') + `</label>\n            <div>\n              <bbn-input bbn-if=\"!source.new\" \n                         class=\"bbn-w-100\" \n                         bbn-model=\"source.node.value\"\n                         \n              ></bbn-input>\n              <bbn-input bbn-else \n                         class=\"bbn-w-100\" \n                         bbn-model=\"source.newDir\"\n              >\n              </bbn-input>\n            </div>\n          </div>\n        </bbn-form>`,\n      props: ['source', 'data'],\n      data() {\n        return {\n          dirIdx: false\n        };\n      },\n      computed: {\n        dirs() {\n          return this.closest('bbn-container').getComponent().dirs;\n        },\n        finder() {\n          return this.closest('bbn-finder');\n        }\n      },\n      methods: {\n        success(d) {\n          if (d.success) {\n            let trees = this.closest('bbn-container').getComponent().findAll('bbn-tree');\n\n            //creating a new folder\n            if (d.data && d.data.new_dir) {\n              bbn.fn.happy('mpod');\n              let treeIdx = bbn.fn.search(trees, '_uid', this.source.treeUid);\n              bbn.fn.happy(treeIdx);\n              if (treeIdx > -1 && trees[treeIdx + 1]) {\n                trees[treeIdx + 1].reload();\n                bbn.fn.happy(treeIdx);\n              } else if (this.source.isFromTree) {\n                //case of folder created from the context of the tree and not node\n                trees[treeIdx].reload();\n              }\n              appui.success(d.data.new_dir + ' ' + bbn._('successfully created'));\n            }\n            //editing an existing folder\n            else {\n              bbn.fn.each(trees, (v, i) => {\n                if (v._uid === this.source.treeUid) {\n                  v.items[this.source.idx].value = this.source.node.value;\n                  v.items[this.source.idx].text = this.source.node.value;\n                }\n              });\n              appui.success((this.source.node.dir ? bbn._('Folder') : bbn._('File')) + ' ' + bbn._('successfully modified'));\n            }\n          } else {\n            appui.error(bbn._('Something went wrong'));\n          }\n        }\n      }\n    }\n  }\n};\n\n\nlet cpLang = {};\nif (bbn.env.lang) {\n  try {\n    const lang = bbn.env.lang || 'en';\n    cpLang = await __webpack_require__(\"./src/components/finder/_i18n lazy recursive ^\\\\.\\\\/finder\\\\..*\\\\.lang$\")(`./finder.${lang}.lang`);\n    if (cpLang.default) {\n      cpLang = cpLang.default;\n    }\n  } catch (err) {}\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'bbn-finder',\n  definition: cpDef,\n  template: _finder_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  style: _finder_less__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  lang: cpLang\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/finder/finder.js?");

/***/ }),

/***/ "./src/components/finder/finder.less":
/*!*******************************************!*\
  !*** ./src/components/finder/finder.less ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_finder_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js!./finder.less */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/finder/finder.less\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_finder_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_finder_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_finder_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_finder_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/finder/finder.less?");

/***/ })

}]);