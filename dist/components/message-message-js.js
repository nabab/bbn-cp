"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/message-message-js"],{

/***/ "./src/components/message/message.html":
/*!*********************************************!*\
  !*** ./src/components/message/message.html ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<span :class=\\\"componentClass\\\"></span>\";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/message/message.html?");

/***/ }),

/***/ "./src/components/message/message.js":
/*!*******************************************!*\
  !*** ./src/components/message/message.js ***!
  \*******************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _message_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./message.html */ \"./src/components/message/message.html\");\n/**\r\n * @file bbn-message component\r\n *\r\n * @description \r\n *\r\n * @copyright BBN Solutions\r\n *\r\n * @author BBN Solutions\r\n *\r\n * @created 10/01/2017\r\n */\nconst cpDef = {\n  /**\r\n   * @mixin bbn.cp.mixins.basic\r\n   */\n  mixins: [bbn.cp.mixins.basic],\n  props: {\n    position: {},\n    cfg: {\n      type: Object,\n      default() {\n        return {\n          position: \"tr\"\n        };\n      }\n    }\n  },\n  data() {\n    return {\n      todo: {},\n      isShown: false,\n      num: 0\n    };\n  },\n  methods: {\n    _getCfg(obj, type, timeout) {\n      var group = type ? type : 'info',\n        cfg = {\n          time: new Date(),\n          type: group,\n          widget: {\n            cssClass: group\n          }\n        };\n      if (typeof obj !== 'object') {\n        obj = {\n          text: obj.toString()\n        };\n      } else if (obj.widget) {\n        return obj;\n      }\n      if (timeout === false) {\n        cfg.close = true;\n      } else if (timeout) {\n        cfg.timeout = timeout;\n      }\n      if (obj.html) {\n        cfg.html = obj.html;\n      } else if (obj.text) {\n        cfg.html = '<div>' + obj.text + '</div>';\n      }\n      cfg.title = obj.title ? obj.title : 'misc';\n      cfg.cat = bbn.fn.md5(cfg.title);\n      cfg.data = obj.data ? obj.data : false;\n      cfg.url = obj.url ? obj.url : false;\n      return cfg;\n    },\n    _getClass(cfg) {\n      return 'bbn-notification-section-' + cfg.cat;\n    },\n    _getTitleHTML(cfg) {\n      return '<h5 class=\"ui dividing header\">' + cfg.title + '</h5>';\n    },\n    _getItemHTML(cfg) {\n      if (cfg.time && cfg.html) {\n        var m = dayjs(cfg.time);\n        return '<div class=\"bbn-form-label\" style=\"width: 130px\">' + '<div class=\"metadata\"><span class=\"date\">' + m.calendar() + '</span></div>' + '</div><div class=\"ui reset bbn-form-field\">' + cfg.html + '</div>';\n      }\n      return '';\n    },\n    _getHTML(cfg) {\n      return '<div class=\"bbn-form-full ' + this._getClass(cfg) + '\">' + this._getTitleHTML(cfg) + this._getItemHTML(cfg) + '</div>';\n    },\n    _addHTML(cfg) {\n      var $cont = $(\".bbn-notification:visible\"),\n        $ele = $(\".\" + this._getClass(cfg), $cont[0]);\n      if (!$cont.length) {\n        return;\n      }\n      if (!$ele.length) {\n        $cont.prepend(this._getHTML(cfg));\n      } else {\n        $ele.prependTo($cont).find(\".ui.header:first\").after(this._getItemHTML(cfg));\n      }\n      if (cfg.data) {\n        var d = $cont.data(\"bbn-data\");\n        if (d) {\n          d.push(cfg.data);\n          $cont.data(\"bbn-data\", d);\n        } else {\n          $cont.data(\"bbn-data\", [cfg.data]);\n        }\n      }\n      $cont.bbn(\"analyzeContent\", true);\n    },\n    _callWidget(cfg) {\n      const vm = this;\n      var uncertain = {};\n      vm.isShown = cfg.type;\n      if (cfg.close) {\n        uncertain.close = cfg.close;\n      }\n      if (cfg.timeout) {\n        uncertain.delay = cfg.timeout;\n      }\n      $.notifyBar(bbn.fn.extend({\n        html: '<div class=\"bbn-notification\">' + vm._getHTML(cfg) + '</div>',\n        cssClass: cfg.type,\n        closeOnClick: false,\n        onBeforeHide() {\n          vm.isShown = false;\n          //bbn.fn.log($(\".bbn-notification:visible\").length, $(\".bbn-notification:visible\").data(\"bbn-data\"));\n          if (cfg.onClose) {\n            cfg.onClose(cfg.data ? cfg.data : []);\n          }\n        },\n        onShow() {\n          var $n = $(\".bbn-notification:visible\").redraw();\n          if (cfg.data) {\n            $n.data(\"bbn-data\", [cfg.data]);\n          }\n        }\n      }, uncertain));\n    },\n    success(obj, timeout) {\n      return this.show(obj, \"success\", timeout);\n    },\n    info(obj, timeout) {\n      return this.show(obj, \"info\", timeout ? timeout : false);\n    },\n    warning(obj, timeout) {\n      return this.show(obj, \"warning\", timeout ? timeout : false);\n    },\n    error(obj, timeout) {\n      return this.show(obj, \"error\", timeout === undefined ? 2000 : timeout);\n    },\n    show(obj, type, timeout) {\n      const vm = this;\n      if (!$.notifyBar) {\n        alert(\"The library notifyBar is needed for bbn.app.messages\");\n        return false;\n      }\n      var cfg = vm._getCfg(obj, type, timeout);\n      if (vm.isShown) {\n        if (vm.isShown === cfg.type) {\n          if (cfg.close) {\n            addHTML(cfg);\n          }\n        } else {\n          if (!todo[cfg.type]) {\n            todo[cfg.type] = {\n              items: []\n            };\n            todo._num++;\n          }\n          todo[cfg.type].last = cfg.time.getTime();\n          todo[cfg.type].items.push(cfg);\n        }\n      } else {\n        callWidget(cfg);\n      }\n    },\n    setID(id) {\n      if (!id) {\n        id = new Date().getMilliseconds();\n      }\n      widget.getNotifications().last().data(\"bbn-id\", id);\n      return id;\n    },\n    getFromID(id) {\n      return widget.getNotifications().filter(function () {\n        return $(this).data(\"bbn-id\") === id;\n      }).first();\n    },\n    deleteFromID(id) {\n      var ele = this.getFromID(id),\n        close = ele.find(\".bbn-notification-close\");\n      if (close.length) {\n        close.click();\n      } else {\n        ele.parent().fadeOut(\"fast\", function () {\n          $(this).remove();\n        });\n      }\n    },\n    deleteAll() {\n      widget.hide();\n    }\n  },\n  mounted() {\n    const vm = this;\n    /*\r\n    setInterval(function(){\r\n      if ( vm.num && !vm.isShown ){\r\n        for ( var n in vm.todo ){\r\n          if ( vm.todo[n].items.length ){\r\n            bbn.fn.each(vm.todo[n].items, function(v, i){\r\n              vm.show(v, v.type);\r\n            });\r\n            delete vm.todo[n];\r\n            vm.num--;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n    */\n    return this;\n  }\n};\n\nlet cpLang = {};\nif (bbn.env.lang) {\n  try {\n    const lang = bbn.env.lang || 'en';\n    cpLang = await Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n    if (cpLang.default) {\n      cpLang = cpLang.default;\n    }\n  } catch (err) {}\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'bbn-message',\n  definition: cpDef,\n  template: _message_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  lang: cpLang\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/message/message.js?");

/***/ })

}]);