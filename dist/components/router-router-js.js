"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/router-router-js"],{

/***/ "./src/components/router/_2move.js":
/*!*****************************************!*\
  !*** ./src/components/router/_2move.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkLoaded: () => (/* binding */ checkLoaded),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   realInit: () => (/* binding */ realInit),\n/* harmony export */   reload: () => (/* binding */ reload)\n/* harmony export */ });\n/**\n * @method load\n * @param {String} url\n * @param {Boolean} force\n * @fires search\n * @fires add\n * @fires parseURL\n * @fires callRouter\n * @fires navigate\n * @fires activate\n * @emit update\n*/\nasync function load(url, force, index) {\n  if (url) {\n    bbn.fn.log(\"LOAD URL \" + url);\n    this.isLoading = true;\n    let finalURL = this.fullBaseURL + url;\n    let idx = this.search(url);\n    let toAdd = false;\n    let view;\n    if (idx !== false) {\n      bbn.fn.log(\"INDEX RETRIEVED BEFORE LOAD: \" + idx.toString(), JSON.stringify(this.views[idx], null, 2));\n      if (this.views[idx].loading || !force && !this.views[idx].load) {\n        return;\n      }\n      view = this.views[idx];\n      //bbn.fn.log(finalURL, idx, JSON.stringify(view, null, 2), force, index);\n      //alert(\"STOP\");\n      if (force) {\n        let kept = {\n          loading: true,\n          loaded: false,\n          load: true,\n          url: view.url,\n          current: url,\n          selected: true,\n          cached: view.cached !== undefined ? view.cached : this.single || !this.nav ? false : true,\n          pane: view.pane,\n          title: view.title,\n          fixed: view.fixed,\n          pinned: view.pinned,\n          index: idx,\n          real: view.real || false,\n          last: bbn.fn.timestamp()\n        };\n        if (view.icon) {\n          kept.icon = view.icon;\n        }\n        if (view.bcolor) {\n          kept.bcolor = view.bcolor;\n        }\n        if (view.fcolor) {\n          kept.fcolor = view.fcolor;\n        }\n        bbn.fn.iterate(bbn.fn.extend(this.getDefaultView(), kept), (a, n) => {\n          if (view[n] !== a) {\n            this.$set(view, n, a);\n          }\n        });\n        if (this.urls[url]) {\n          this.urls[url].isLoaded = false;\n          this.urls[url].dirty = false;\n        }\n      }\n      if (index !== undefined && idx !== index) {\n        this.move(idx, index);\n        idx = index;\n      }\n    } else {\n      toAdd = true;\n      idx = index === undefined ? this.views.length : index;\n    }\n    if (this.single) {\n      idx = 0;\n    }\n    if (toAdd) {\n      bbn.fn.log(\"ADDING ON LOAD \" + url);\n      await this.add({\n        url: url,\n        title: view?.title ? view.title : bbn._('Loading'),\n        load: true,\n        loading: true,\n        real: view?.real || false,\n        pane: false,\n        scrollable: !this.single,\n        current: url,\n        error: false,\n        loaded: false,\n        hidden: false,\n        last: bbn.fn.timestamp()\n      }, idx);\n      view = this.views[this.search(url)];\n    } else if (!this.views[idx].loading) {\n      this.views[idx].loading = true;\n    }\n    if (!this.views[idx].pane) {\n      this.currentURL = this.parseURL(url);\n    }\n    let portal = this.getRef('portal-' + url);\n    if (portal) {\n      await portal.$forceUpdate();\n    }\n    this.$emit('update', this.views);\n    this.$emit(\"load\", finalURL);\n    let dataObj = this.postBaseUrl ? {\n      _bbn_baseURL: this.fullBaseURL\n    } : {};\n    let response;\n    try {\n      response = await this.post(finalURL, dataObj);\n    }\n    // Abort\n    catch (e) {\n      bbn.fn.warning(\"ABORTED\");\n      this.isLoading = false;\n      let idx = this.search(this.parseURL(finalURL));\n      if (idx !== false) {\n        let url = this.views[idx].url;\n        if (this.urls[url]) {\n          this.callRouter(finalURL, url);\n          this.$nextTick(() => {\n            this.close(idx);\n          });\n          return;\n        }\n      }\n    }\n    if (response?.status === 200) {\n      const d = response.data;\n      let callRealInit = true;\n      this.isLoading = false;\n      //this.remove(url);\n      if (d.url) {\n        d.url = this.parseURL(d.url);\n      }\n      if (!d.url) {\n        d.url = url;\n      }\n      //bbn.fn.warning(\"URLS\", url, d.url);\n      if (url.indexOf(d.url) === 0) {\n        d.current = url;\n        //bbn.fn.warning(\"CURRENT DEFINED AS \" + d.current);\n      } else {\n        bbn.fn.warning(url + ' != ' + d.url);\n        let searchIdx = this.search(url);\n        if (searchIdx !== false) {\n          idx = searchIdx;\n          bbn.fn.log(\"REMOVED\");\n          this.remove(searchIdx, true);\n        }\n      }\n      if (d.data && bbn.fn.numProperties(d.data)) {\n        d.source = d.data;\n        delete d.data;\n      }\n      if (!d.title || d.title === bbn._('Loading')) {\n        if (view && view.title) {\n          d.title = view.title;\n        } else {\n          let title = bbn._('Untitled');\n          let num = 0;\n          while (bbn.fn.search(this.views, {\n            title: title\n          }) > -1) {\n            num++;\n            title = bbn._('Untitled') + ' ' + num;\n          }\n          d.title = title;\n        }\n      }\n      if (!d.current && d.url) {\n        d.current = d.url;\n      }\n      if (d.url !== d.current && this.urls[d.current]) {\n        let currentIndex = this.urls[d.current].currentIndex;\n        //bbn.fn.warning(\"DELETING VIEW CASE.... \" + d.url + ' / ' + d.current + ' ' + currentIndex);\n        //bbn.fn.log([d.url, this.urls[d.current], this.urls[d.url], Object.keys(this.urls), bbn.fn.search(this.views, {idx: this.urls[d.current].idx})]);\n        this.remove(currentIndex, true).then(() => {\n          const onRegister = url => {\n            //bbn.fn.log([\"REGISTERED\", url]);\n            if (url === d.url) {\n              this.$off('registered', onRegister);\n              let view = bbn.fn.getRow(this.views, {\n                url: url\n              });\n              if (this.selected === view.idx || view.pane) {\n                this.realInit(url);\n              }\n            }\n          };\n          this.$on('registered', onRegister);\n          let o = bbn.fn.extend(view || bbn.fn.createObject(), d, {\n            loading: false,\n            load: true,\n            real: view?.real || false,\n            loaded: true\n          });\n          //bbn.fn.log([\"BEFORE\", this.views.length, Object.keys(this.urls)]);\n          this.add(o, currentIndex).then(() => {\n            //bbn.fn.log(this.search(o.url), o);\n            let searchIndex = this.search(o.url);\n            //bbn.fn.log(\"Looking for \" + o.url);\n            if (searchIndex !== false) {\n              //this.activateIndex(searchIndex);\n              this.selected = searchIndex;\n            }\n          });\n        });\n        //callRealInit = false;\n        /*\n        */\n      } else {\n        this.$forceUpdate().then(() => {\n          let o = bbn.fn.extend(view || bbn.fn.createObject(), d, {\n            loading: false,\n            load: true,\n            real: view?.real || false,\n            loaded: true\n          });\n          let searchIndex = this.search(o.url);\n          //bbn.fn.log(\"Looking for \" + o.url);\n          if (searchIndex !== false && this.urls[this.views[searchIndex].url]) {\n            //this.remove(searchIndex);\n            bbn.fn.warning(\"FOUND AND NOT REMOVED \" + searchIndex);\n            idx = searchIndex;\n            this.urls[this.views[idx].url].isLoaded = true;\n            this.urls[this.views[idx].url].dirty = false;\n            this.urls[this.views[idx].url].ready = false;\n            this.urls[this.views[idx].url].init();\n          } else {\n            //bbn.fn.warning(\"ADDEDD \" + idx);\n            //bbn.fn.log(\"ADDING AFTER LOAD\");\n            this.add(o, idx);\n          }\n          if (o.title && !o.pane) {\n            this.currentTitle = o.title;\n          }\n          //this.$forceUpdate();\n          this.$nextTick(() => {\n            if (callRealInit) {\n              this.realInit(d.url);\n            }\n          });\n        });\n      }\n    } else {\n      this.isLoading = false;\n      let idx = this.search(this.parseURL(finalURL));\n      if (idx !== false) {\n        let url = this.views[idx].url;\n        if (this.urls[url]) {\n          this.urls[url].errorStatus = response?.status || 500;\n          this.urls[url].setTitle(bbn._(\"Error\"));\n          this.urls[url].setIcon(\"nf nf-fa-warning\");\n          if (this.selected === idx) {\n            await this.callRouter(finalURL, url);\n          }\n        }\n      }\n    }\n  }\n}\nfunction realInit(url) {\n  //bbn.fn.log(\"REAL INIT\", url, this.urls, this.views)\n  if (this.urls[url]) {\n    this.urls[url].setLoaded(true);\n    // Otherwise the changes we just did on the props wont be taken into account at container level\n    this.urls[url].init();\n    //bbn.fn.log(\"callRouter\", this.urls[url], this.urls[url].currentView);\n    this.callRouter(this.urls[url].currentURL || url, url);\n    this.$emit('update', this.views);\n  } else {\n    //bbn.fn.log(url, this.views[0].loading, this.views[0].url, JSON.stringify(Object.keys(this.urls), null, 2));\n    //throw new Error(bbn._(\"Impossible to find the container for URL\") + ' ' + url);\n  }\n}\nfunction checkLoaded(idx) {\n  return this.views[idx] &&\n  //!this.views[idx].real &&\n  this.views[idx].load && this.urls[this.views[idx].url] && this.urls[this.views[idx].url].isLoaded;\n}\n\n/**\n * @method reload\n * @param {Number} idx\n * @fires route\n */\nasync function reload(idx, force) {\n  if (this.checkLoaded(idx)) {\n    let url = this.views[idx].current;\n    if (!force && !this.ignoreDirty && this.isDirty && this.views[idx].dirty) {\n      this.confirm(this.confirmLeave, () => {\n        if (this.checkLoaded(idx)) {\n          // Looking for dirty ones in registered forms of each container\n          let forms = this.urls[this.views[idx].url].forms;\n          if (Array.isArray(forms) && forms.length) {\n            bbn.fn.each(forms, (f, k) => {\n              f.reset();\n            });\n          }\n          if (this.urls[this.views[idx].url] && this.urls[this.views[idx].url].popups && this.urls[this.views[idx].url].popups.length) {\n            this.urls[this.views[idx].url].popups.splice(0);\n          }\n          this.load(url, true, idx);\n        }\n      });\n    } else {\n      this.load(url, true, idx);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_2move.js?");

/***/ }),

/***/ "./src/components/router/_breadcrumb.js":
/*!**********************************************!*\
  !*** ./src/components/router/_breadcrumb.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBreadcrumbs: () => (/* binding */ getBreadcrumbs),\n/* harmony export */   registerBreadcrumb: () => (/* binding */ registerBreadcrumb),\n/* harmony export */   unregisterBreadcrumb: () => (/* binding */ unregisterBreadcrumb)\n/* harmony export */ });\n//Breadcrumb\n/**\n * @method registerBreadcrumb\n * @param {bbnCp} bc\n * @param {String} url\n */\nfunction registerBreadcrumb(bc) {\n  let url = bbn.fn.substr(bc.baseURL, 0, bc.baseURL.length - 1);\n  this.breadcrumbsList.push(bc);\n  if (this.itsMaster && !this.master) {\n    this.itsMaster.breadcrumbsList.push(bc);\n  }\n}\n\n/**\n * @method unregisterBreadcrumb\n * @param {bbnCp} bc\n * @param {String} url\n */\nfunction unregisterBreadcrumb(bc) {\n  if (this.breadcrumbsList) {\n    let idx = bbn.fn.search(this.breadcrumbsList, {\n      baseURL: bc.baseURL\n    });\n    if (idx !== -1) {\n      this.breadcrumbsList.splice(idx, 1);\n    }\n    if (this.itsMaster && !this.master) {\n      idx = bbn.fn.search(this.itsMaster.breadcrumbsList, {\n        baseURL: bc.baseURL\n      });\n      if (idx !== -1) {\n        this.itsMaster.breadcrumbsList.splice(idx, 1);\n      }\n    }\n  }\n}\nfunction getBreadcrumbs(idx) {\n  let ret = [];\n  if (bbn.fn.isNumber(idx) && this.views[idx]) {\n    let url = this.views[idx].url,\n      bc = bbn.fn.getRow(this.breadcrumbsList, {\n        baseURL: url + '/'\n      });\n    if (this.urls[url] && bc) {\n      ret.push(...bc.breadcrumbs);\n    }\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_breadcrumb.js?");

/***/ }),

/***/ "./src/components/router/_config.js":
/*!******************************************!*\
  !*** ./src/components/router/_config.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConfig: () => (/* binding */ getConfig),\n/* harmony export */   setConfig: () => (/* binding */ setConfig),\n/* harmony export */   unsetConfig: () => (/* binding */ unsetConfig)\n/* harmony export */ });\n/**\n * @method setconfig\n * @fires setStorage\n * @fires getConfig\n */\nfunction setConfig() {\n  if (this.autoload && this.isInit) {\n    this.setStorage(this.getConfig(), this.parentContainer ? this.parentContainer.getFullURL() : this.storageName);\n    //this.$forceUpdate();\n  }\n}\n/**\n * @method getConfig\n * @return {Object}\n */\nfunction getConfig() {\n  let cfg = {\n    baseURL: this.parentContainer ? this.parentContainer.getFullURL() : this.storageName,\n    views: [],\n    breadcrumb: this.isBreadcrumb,\n    visual: this.isVisual,\n    orientation: this.lockedOrientation ? this.visualOrientation : null,\n    panes: this.currentPanes.map(a => {\n      return {\n        id: a.id,\n        tabs: a.tabs.map(b => b.url),\n        selected: a.selected\n      };\n    })\n  };\n  bbn.fn.each(this.views, (obj, i) => {\n    if (obj.url && obj.load) {\n      let res = {\n        url: obj.url,\n        icon: obj.icon || false,\n        notext: obj.notext || false,\n        load: true,\n        loaded: false,\n        title: obj.title ? obj.title : bbn._('Untitled'),\n        fixed: !!obj.fixed,\n        pinned: !!obj.pinned,\n        pane: obj.pane || false,\n        current: obj.current ? obj.current : obj.url,\n        cfg: {},\n        real: obj.real,\n        last: obj.last\n      };\n      if (obj.bcolor) {\n        res.bcolor = obj.bcolor;\n      }\n      if (obj.fcolor) {\n        res.fcolor = obj.fcolor;\n      }\n      cfg.views.push(res);\n    }\n  });\n  return cfg;\n}\n/**\n * @method unsetConfig\n * @fires unsetStorage\n */\nfunction unsetConfig() {\n  if (this.autoload) {\n    this.unsetStorage(this.parentContainer ? this.parentContainer.getFullURL() : this.storageName);\n  }\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_config.js?");

/***/ }),

/***/ "./src/components/router/_elements.js":
/*!********************************************!*\
  !*** ./src/components/router/_elements.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getContainer: () => (/* binding */ getContainer),\n/* harmony export */   getDOMContainer: () => (/* binding */ getDOMContainer),\n/* harmony export */   getFinalContainer: () => (/* binding */ getFinalContainer),\n/* harmony export */   getRealVue: () => (/* binding */ getRealVue),\n/* harmony export */   getSubRouter: () => (/* binding */ getSubRouter),\n/* harmony export */   getVue: () => (/* binding */ getVue)\n/* harmony export */ });\n/**\n * @method getVue\n * @fires isValidIndex\n * @return {Vue|Boolean}\n */\nfunction getVue(idx) {\n  return this.getContainer(idx);\n}\n/**\n * Returns the corresponding container's component's DOM element.\n * @method getContainer\n * @param {Number} idx\n * @return {bbnCp}\n */\nfunction getContainer(idx) {\n  if (idx === undefined) {\n    idx = this.selected;\n  }\n  return this.urls[this.views[idx]?.url];\n}\n/**\n * Returns the corresponding container's component's DOM element.\n * @method getDOMContainer\n * @param {Number} idx\n * @fires getContainer\n * @return {HTMLElement|Boolean}\n */\nfunction getDOMContainer(idx) {\n  if (idx === undefined) {\n    idx = this.selected;\n  }\n  let c = this.getContainer(idx);\n  return c ? c.$el : false;\n}\n/**\n * Returns the next router in the corresponding container if there's any.\n * @method getSubRouter\n * @param misc\n * @fires getIndex\n * @fires getvue\n * @return {Vue|null}\n */\nfunction getSubRouter(misc) {\n  let idx = this.getIndex(misc);\n  if (idx === undefined) {\n    idx = this.selected;\n  }\n  let container = this.getContainer(idx);\n  if (container) {\n    return container.find('bbn-router') || null;\n  }\n  return null;\n}\n/**\n * @method getFinalContainer\n * @param misc\n * @fires getIndex\n * @fires getSubRouter\n * @fires getContainer\n * @return {bbnCp}\n */\nfunction getFinalContainer(misc) {\n  let idx = this.getIndex(misc);\n  if (idx === undefined) {\n    idx = this.selected;\n  }\n  let router = this.getSubRouter(idx);\n  if (router) {\n    return router.getFinalContainer();\n  }\n  return this.getContainer(idx);\n}\n/**\n * @method getRealVue\n * @param misc\n * @fires getFinalContainer\n * @return {bbnCp}\n */\nfunction getRealVue(misc) {\n  return this.getFinalContainer(misc);\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_elements.js?");

/***/ }),

/***/ "./src/components/router/_getters.js":
/*!*******************************************!*\
  !*** ./src/components/router/_getters.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBackgroundColor: () => (/* binding */ getBackgroundColor),\n/* harmony export */   getDefaultURL: () => (/* binding */ getDefaultURL),\n/* harmony export */   getFontColor: () => (/* binding */ getFontColor),\n/* harmony export */   getFullTitle: () => (/* binding */ getFullTitle),\n/* harmony export */   getList: () => (/* binding */ getList),\n/* harmony export */   getParents: () => (/* binding */ getParents),\n/* harmony export */   getTab: () => (/* binding */ getTab),\n/* harmony export */   getTitle: () => (/* binding */ getTitle),\n/* harmony export */   getView: () => (/* binding */ getView)\n/* harmony export */ });\n/**\n * @method getDefaultURL\n * @fires parseURL\n * @return {String}\n */\nfunction getDefaultURL() {\n  let url = this.parseURL(bbn.env.path);\n  if (!url && this.url) {\n    url = this.url;\n  }\n\n  // If there is a parent router we automatically give the proper baseURL\n  if (!url && this.parentContainer && this.parentContainer.currentURL !== this.parentContainer.url) {\n    url = bbn.fn.substr(this.parentContainer.currentURL, this.parentContainer.url.length + 1);\n  }\n  if (!url && this.def) {\n    url = this.def;\n  }\n  return url;\n}\n\n/**\n * @method getTitle\n * @param {Number} idx\n * @return {String}\n */\nfunction getTitle(idx) {\n  let cp = this,\n    res = '';\n  if (idx === undefined) {\n    idx = this.selected;\n  }\n  if (cp.views[idx]) {\n    res += cp.views[idx].title || bbn._('Untitled');\n    if (cp.parentTab) {\n      idx = cp.parentTab.currentIndex;\n      cp = cp.parentTab.router;\n      while (cp) {\n        res += ' < ' + (cp.views[idx].title || bbn._('Untitled'));\n        if (cp.parentTab) {\n          idx = cp.parentTab.currentIndex;\n          cp = cp.parentTab.router;\n        } else {\n          cp = false;\n        }\n      }\n    }\n    res += ' - ';\n  }\n  res += bbn.env.siteTitle || bbn._(\"Untitled site\");\n  return res;\n}\n/**\n * Returns the full title (combination of title and ftitle if any)\n * \n * @method getFullTitle\n * @param {Object} obj\n * @return {String|null}\n */\nfunction getFullTitle(obj) {\n  let t = '';\n  if (obj.title) {\n    t += obj.title;\n  }\n  if (obj.ftitle) {\n    t += (t.length ? ' - ' : '') + obj.ftitle;\n  }\n  return t;\n}\n/**\n * @method getFontColor\n * @param {Number} idx\n * @fires getRef\n * @return {String}\n */\nfunction getFontColor(idx) {\n  return this.views[idx]?.fcolor || '';\n  //this.views[idx].fcolor = window.getComputedStyle(el.$el ? el.$el : el).color;\n}\n\n/**s\n * @method getBackgroundColor\n * @param {Number} idx\n * @fires getRef\n * @return {String}\n */\nfunction getBackgroundColor(idx) {\n  return this.views[idx]?.bcolor || '';\n  /*\n  if (this.$isMounted && this.views[idx]) {\n    if (!this.views[idx].bcolor) {\n      let el = this.getRef('title-' + idx);\n      if (el) {\n        this.views[idx].bcolor = window.getComputedStyle(el.$el ? el.$el : el).backgroundColor;\n        bbn.fn.log([\"GETTING BCOLOR\", idx, this.views[idx].bcolor]);\n      }\n    }\n     return this.views[idx].bcolor;\n  }\n   return '';\n  */\n}\n\n/**\n * @method getTab\n * @param {Number} idx\n * @fires getRef\n * @return {HTMLElement}\n */\nfunction getTab(idx) {\n  if (idx === undefined) {\n    idx = this.selected;\n  }\n  return this.getRef('tabs').getRef('tab-' + idx);\n}\n\n/**\n * Returns the breadcrumb's source list.\n * @method getList\n * @param {bbnCp} bc\n * @fires close\n * @return {Array}\n */\nfunction getList(idx) {\n  let list = [],\n    parents = bbn.fn.map(idx && this.itsMaster && this.baseURL !== this.itsMaster.baseURL ? this.getParents() : [], p => {\n      return {\n        view: p.views[p.selected],\n        maxTitleLength: p.maxTitleLength\n      };\n    });\n  if (parents.length > idx) {\n    parents.splice(0, parents.length - idx);\n  }\n  bbn.fn.each(this.views, (t, i) => {\n    if (!t.hidden && t.idx !== this.selected && !t.pane) {\n      list.push({\n        view: t,\n        key: t.url,\n        parents: parents,\n        children: bbn.fn.map(this.getBreadcrumbs(i), c => {\n          return {\n            view: c.views[c.selected],\n            maxTitleLength: c.maxTitleLength\n          };\n        }),\n        maxTitleLength: this.maxTitleLength,\n        action: () => {\n          this.activateIndex(t.idx);\n        },\n        closeAction: () => {\n          return this.close(t.idx);\n        }\n      });\n    }\n  });\n  return list;\n}\n\n/**\n * @method getParents\n * @return {Array}\n */\nfunction getParents() {\n  return this.parent ? [...this.parent.getParents(), this.parent] : [];\n}\n\n/**\n * @method getView\n * @return {Object|null}\n */\nfunction getView(url) {\n  return bbn.fn.getRow(this.views, {\n    url: url\n  });\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_getters.js?");

/***/ }),

/***/ "./src/components/router/_manipulate.js":
/*!**********************************************!*\
  !*** ./src/components/router/_manipulate.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   closeAll: () => (/* binding */ closeAll),\n/* harmony export */   closeAllBut: () => (/* binding */ closeAllBut),\n/* harmony export */   closeTab: () => (/* binding */ closeTab),\n/* harmony export */   move: () => (/* binding */ move),\n/* harmony export */   pin: () => (/* binding */ pin),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   unpin: () => (/* binding */ unpin)\n/* harmony export */ });\n/**\n * Removes an element from the views\n * \n * @method remove\n * @param {*} misc Index, URL or element\n * @param {Boolean} noCfg If set to true will not trigger the storage saving\n * @fires getIndex\n * @fires remove\n * @emit close\n * @return {Boolean}\n */\nasync function remove(misc, force) {\n  let idx = this.getIndex(misc);\n  if (idx > -1) {\n    /** @var {Event} onBeforeClose beforeClose event, cancelable only if not force */\n    let onBeforeClose = new Event('beforeClose', {\n      cancelable: !force\n    });\n    /** @var {Event} onClose close event, cancelable only if not force */\n    let onClose = new Event('close');\n    this.$emit('beforeClose', idx, onBeforeClose);\n    //bbn.fn.log(\"REMOVING \" + this.views[idx].url)\n    if (force || !onBeforeClose.defaultPrevented) {\n      if (!force && !this.ignoreDirty && this.isDirty && this.views[idx].dirty) {\n        this.confirm(this.confirmLeave, () => {\n          // Looking for dirty ones in registered forms of each container\n          let forms = this.urls[this.views[idx].url].forms;\n          if (Array.isArray(forms) && forms.length) {\n            bbn.fn.each(forms, (f, k) => {\n              f.reset();\n            });\n          }\n          return this.close(idx, true);\n        });\n      } else if (this.views[idx] && !this.views[idx].real) {\n        bbn.fn.log([\"ERMOVE FROM ROUTER \" + idx, force]);\n        this.$emit('close', idx, onClose);\n        this.views.splice(idx, 1);\n        bbn.fn.log([\"ERMOVE FROM ROUTER \" + idx, bbn.fn.numProperties(this.urls), this.views.length]);\n        this.fixIndexes();\n        await this.$forceUpdate();\n        await this.$nextTick();\n        return true;\n      }\n    }\n  }\n  return false;\n}\n/**\n * Adds an object with a valid url to the views.\n * @method add\n * @param {Object} obj\n * @param {Number} idx\n * @fires getFullBaseURL\n * @fires search\n * @fires isValidIndex\n * @fires getDefaultView\n */\nasync function add(obj, idx) {\n  let index;\n  //obj must be an object with property url\n  if (bbn.fn.isObject(obj) && bbn.fn.isString(obj.url)) {\n    obj.url = bbn.fn.replaceAll('//', '/', obj.url);\n    // This is a component\n    if (obj.$options) {\n      if (!obj.current && !obj.currentURL) {\n        if (bbn.env.path.indexOf(this.getFullBaseURL() + (obj.url ? obj.url + '/' : '')) === 0) {\n          obj.currentURL = bbn.fn.substr(bbn.env.path, this.getFullBaseURL().length);\n        } else {\n          obj.currentURL = obj.url;\n        }\n      }\n      /*\n      else {\n        if (obj.currentURL) {\n          obj.currentURL = bbn.fn.replaceAll(obj.currentURL);\n        }\n      }\n      */\n      let obj2 = bbn.fn.extend(true, {}, obj.$options.propsData),\n        props = obj.$options.props;\n      bbn.fn.iterate(props, (v, i) => {\n        if (!(i in obj2) && 'default' in v) {\n          obj2[i] = v.default;\n        }\n      });\n      bbn.fn.iterate(this.getDefaultView(), (a, n) => {\n        if (obj2[n] === undefined) {\n          obj2[n] = a;\n        }\n      });\n      obj2.real = true;\n\n      // ---- ADDED 16/12/20 (Mirko) ----\n      if (!obj2.current) {\n        if (bbn.env.path.indexOf(this.getFullBaseURL() + (obj2.url ? obj2.url + '/' : '')) === 0) {\n          obj2.current = bbn.fn.substr(bbn.env.path, this.getFullBaseURL().length);\n        } else {\n          obj2.current = obj2.url;\n        }\n      } else if (obj2.current !== obj2.url && obj2.current.indexOf(obj2.url + '/') !== 0) {\n        obj2.current = obj2.url;\n      }\n      if (!obj2.current) {\n        obj2.current = obj2.url;\n      }\n      if (obj2.content) {\n        obj2.loaded = true;\n      }\n      // ---- END ----\n\n      if (obj2.real && !this.hasRealContainers) {\n        this.hasRealContainers = true;\n      }\n      if (obj2.url === '') {\n        this.hasEmptyURL = true;\n      }\n      if (this.search(obj2.url) === false) {\n        if (this.isValidIndex(idx)) {\n          this.views.splice(idx, 0, obj2);\n        } else if (this.hasRealContainers && this.first !== 'real' && !obj2.real) {\n          idx = bbn.fn.search(this.views, {\n            real: true\n          });\n          this.views.splice(idx, 0, obj2);\n        } else {\n          this.views.push(obj2);\n        }\n      }\n    } else {\n      if (!obj.current) {\n        if (bbn.env.path.indexOf(this.getFullBaseURL() + (obj.url ? obj.url + '/' : '')) === 0) {\n          obj.current = bbn.fn.substr(bbn.env.path, this.getFullBaseURL().length);\n        } else {\n          obj.current = obj.url;\n        }\n      } else if (obj.current !== obj.url && obj.current.indexOf(obj.url + '/') !== 0) {\n        obj.current = obj.url;\n      }\n      if (!obj.current) {\n        obj.current = obj.url;\n      }\n      if (obj.content) {\n        obj.loaded = true;\n      }\n      obj.events = {};\n      if (obj.menu === undefined) {\n        obj.menu = [];\n      }\n      index = this.search(obj.url);\n      if (index !== false) {\n        let o = this.views[index],\n          cn = this.urls[this.views[index].url];\n        if (idx === undefined) {\n          idx = index;\n        }\n        if (cn && this.isValidIndex(idx)) {\n          cn.currentIndex = idx;\n        }\n        if (obj.real) {\n          return;\n        }\n        bbn.fn.iterate(obj, (a, n) => {\n          if (o[n] !== a) {\n            // Each new property must be set with $set\n            this.$set(o, n, a);\n          }\n        });\n      } else {\n        let isValid = this.isValidIndex(idx);\n        obj.selected = false;\n        obj.idx = isValid ? idx : this.views.length;\n        bbn.fn.iterate(this.getDefaultView(), (a, n) => {\n          if (obj[n] === undefined) {\n            // Each new property must be set with $set\n            this.$set(obj, n, a);\n          }\n        });\n        obj.uid = obj.url + '-' + bbn.fn.randomString();\n        if (this.single && this.views.length) {\n          await this.remove(0, true);\n          obj.idx = 0;\n          isValid = false;\n        }\n        if (isValid) {\n          this.views.splice(obj.idx, 0, obj);\n        } else if (this.hasRealContainers && this.first !== 'real' && !obj.real) {\n          idx = bbn.fn.search(this.views, {\n            real: true\n          });\n          this.views.splice(idx, 0, obj);\n        } else {\n          this.views.push(obj);\n        }\n      }\n    }\n    this.fixIndexes();\n  }\n}\n/**\n * Moves a container within the router, changes its idx.\n * \n * @method move\n * @param {Number} from The index of the container to move\n * @param {Number} to   The index to which the container must go\n * @returns \n */\nfunction move(from, to) {\n  if (!bbn.fn.isNumber(from, to) || from === to || !this.views[from] || !this.views[to]) {\n    return;\n  }\n  bbn.fn.move(this.views, from, to);\n  let selectedOk = false;\n  if (from === this.selected) {\n    this.selected = to;\n    selectedOk = true;\n  }\n  for (let i = Math.min(from, to); i <= Math.max(from, to); i++) {\n    if (this.views[i].idx !== i) {\n      if (!selectedOk && this.selected === this.views[i].idx) {\n        this.selected = i;\n      }\n      this.views[i].idx = i;\n    }\n  }\n  this.setConfig();\n}\n/**\n * @method close\n * @param {Number}  idx   The index of the container to close\n * @param {Boolean} force Will close the container without prevention\n * @param {Boolean} noCfg If set to true will not trigger the storage saving\n * @fires remove\n * @fires getIndex\n * @fires activateIndex\n * @fires setConfig\n * @return {Boolean}\n */\nfunction close(idx, force, noCfg) {\n  bbn.fn.log(\"CLOSING CT\");\n  let res = this.remove(idx, force);\n  if (res) {\n    if (this.selected > idx) {\n      this.selected--;\n    } else if (idx === this.selected) {\n      this.selectClosest(idx);\n    }\n    if (!noCfg) {\n      this.setConfig();\n    }\n  }\n  return res;\n}\n/**\n * @method closeAll\n * @fires close\n */\nfunction closeAll(force) {\n  for (let i = this.views.length - 1; i >= 0; i--) {\n    if (!this.views[i].fixed && !this.views[i].pinned) {\n      this.close(i, force, true);\n    }\n  }\n  this.setConfig();\n}\n/**\n * @method closeallBut\n * @param {Number} idx\n * @fires close\n */\nfunction closeAllBut(idx, force) {\n  for (let i = this.views.length - 1; i >= 0; i--) {\n    if (!this.views[i].fixed && !this.views[i].pinned && i !== idx) {\n      this.close(i, force, true);\n    }\n  }\n  this.setConfig();\n}\nfunction closeTab(idx) {\n  this.close(this.tabsList[idx].idx);\n}\n\n/**\n * @method pin\n * @param {Number} idx\n * @fires isValidIndex\n * @fires setConfig\n * @emit beforePin\n * @emit pin\n */\nfunction pin(idx) {\n  if (this.isValidIndex(idx)) {\n    let ev = new CustomEvent('beforePin', {\n      cancelable: true\n    });\n    this.$emit('beforePin', idx, ev);\n    if (!ev.defaultPrevented) {\n      this.views[idx].pinned = true;\n      this.setConfig();\n      this.$emit('pin', idx);\n    }\n  }\n}\n\n/**\n * @method unpin\n * @param {Number} idx\n * @fires isValidIndex\n * @fires setConfig\n * @emit beforeUnpin\n * @emit unpin\n */\nfunction unpin(idx) {\n  if (this.isValidIndex(idx)) {\n    let ev = new CustomEvent('beforeUnpin', {\n      cancelable: true\n    });\n    this.$emit('beforeUnpin', idx, ev);\n    if (!ev.defaultPrevented) {\n      this.views[idx].pinned = false;\n      this.setConfig();\n      this.$emit('unpin', idx);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_manipulate.js?");

/***/ }),

/***/ "./src/components/router/_misc.js":
/*!****************************************!*\
  !*** ./src/components/router/_misc.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cutTitle: () => (/* binding */ cutTitle),\n/* harmony export */   enter: () => (/* binding */ enter),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   onEscape: () => (/* binding */ onEscape),\n/* harmony export */   onResize: () => (/* binding */ onResize),\n/* harmony export */   retrieveDirtyContainers: () => (/* binding */ retrieveDirtyContainers),\n/* harmony export */   slashToHyphen: () => (/* binding */ slashToHyphen),\n/* harmony export */   updateVisualStyleContainer: () => (/* binding */ updateVisualStyleContainer)\n/* harmony export */ });\n/**\n * @method updateVisualStyleContainer\n * @return {Object}\n */\nfunction updateVisualStyleContainer() {\n  if (!this.visualStyleContainer) {\n    this.visualStyleContainer = bbn.fn.createObject();\n  } else if (!this.isVisual) {\n    this.visualStyleContainer = bbn.fn.createObject();\n  }\n  if (!this.isVisual) {\n    return;\n  }\n\n  //bbn.fn.warning(\"updateVisualStyleContainer\");\n  bbn.fn.iterate(this.views, view => {\n    if (view.view) {\n      view = view.view;\n    }\n    if (!this.visualStyleContainer[view.url]) {\n      this.visualStyleContainer[view.url] = {};\n    }\n    if (!this.urls[view.url]) {\n      return;\n    }\n    const ct = this.urls[view.url];\n    if (!ct?.isVisible || this.visualShowAll) {\n      if (this.visualStyleContainer[view.url].zoom != 0.5) {\n        this.visualStyleContainer[view.url] = {\n          zoom: 0.1\n        };\n      }\n      return;\n    }\n    let num = this.numVisuals + 1;\n    let coord = [1, num, 1, num];\n    switch (this.visualOrientation) {\n      case 'up':\n        coord[2] = 2;\n        break;\n      case 'down':\n        coord[3] = num - 1;\n        break;\n      case 'left':\n        coord[0] = 2;\n        break;\n      case 'right':\n        coord[1] = num - 1;\n        break;\n    }\n    if (this.visualStyleContainer[view.url].zoom != 1 || this.visualStyleContainer[view.url].gridColumnStart != coord[0] || this.visualStyleContainer[view.url].gridColumnEnd != coord[1] || this.visualStyleContainer[view.url].gridRowStart != coord[2] || this.visualStyleContainer[view.url].gridRowEnd != coord[3]) {\n      this.visualStyleContainer[view.url] = {\n        gridColumnStart: coord[0],\n        gridColumnEnd: coord[1],\n        gridRowStart: coord[2],\n        gridRowEnd: coord[3],\n        zoom: 1\n      };\n    }\n  });\n  return this.visualStyleContainer;\n}\nasync function init(url) {\n  if (!this.isInit) {\n    if (this.numRegistered) {\n      this.isInit = true;\n    }\n    await this.$forceUpdate();\n    if (this.auto) {\n      await this.route(url, true);\n    }\n  }\n}\n\n/**\n * Sets the 'dirtyContainers' property with the list of unsaved views\n * @method retrieveDirtyContainers\n */\nfunction retrieveDirtyContainers() {\n  this.dirtyContainers.splice(0, this.dirtyContainers.length);\n  bbn.fn.iterate(this.urls, v => {\n    if (v.dirty) {\n      this.dirtyContainers.push({\n        idx: v.currentIndex,\n        url: v.url\n      });\n    }\n  });\n}\n\n/**\n * @method onEscape\n * @param {Event} e\n */\nfunction onEscape(e) {\n  if (this.isVisual && this.visualShowAll) {\n    this.visualShowAll = false;\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n/**\n * Function triggered every time a container is shown (at the start of the animation) to change the URL if needed.\n * @method enter\n * @param container\n */\nfunction enter(container) {\n  //bbn.fn.log(\"THE CONTAINER WILL BE SHOWN: \", container);\n}\n\n//Tabs\n/**\n * Cuts the given string by 'maxTitleLength' property value\n * @method cutTitle\n * @param {String} title\n * @return {String}\n */\nfunction cutTitle(title) {\n  return bbn.fn.shorten(title, this.maxTitleLength);\n}\n\n/**\n * @method onResize\n * @return {Promise}\n */\nfunction onResize() {\n  this.keepCool(() => {\n    let m = this.setResizeMeasures();\n    let c = this.setContainerMeasures();\n    if (m || c) {\n      this.$emit('resize');\n    }\n    if (this.isVisual && this.orientation === 'auto' && !this.lockedOrientation) {\n      this.visualOrientation = this.lastKnownWidth > this.lastKnownHeight ? 'left' : 'top';\n    }\n  }, 'resize', 50);\n}\nfunction slashToHyphen(str) {\n  return bbn.fn.replaceAll('/', '-', str);\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_misc.js?");

/***/ }),

/***/ "./src/components/router/_observers.js":
/*!*********************************************!*\
  !*** ./src/components/router/_observers.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   observerClear: () => (/* binding */ observerClear),\n/* harmony export */   observerEmit: () => (/* binding */ observerEmit)\n/* harmony export */ });\n/*\nobserverEmit(newVal, obs){\n  bbn.fn.log(\"OBS EMIT\", newVal, obs);\n  let ele = $(\".bbn-observer-\" + obs.element, this.$el);\n  if ( ele.length ){\n    let idx = this.getIndex(ele);\n    if ( idx !== false ){\n      let i = bbn.fn.search(this.observers, {id: obs.id, element: obs.element});\n      if ( (i > -1) && (this.observers[i].value !== newVal) ){\n        if ( idx === this.selected ){\n          this.$emit('bbnObs' + obs.element + obs.id, newVal);\n          this.observers[i].value = newVal;\n        }\n        else{\n          this.observers[i].value = newVal;\n          this.$set(this.views[idx].events, 'bbnObs' + obs.element + obs.id, newVal);\n        }\n      }\n    }\n  }\n},\n*/\n\n/**\n * @method observerEmit\n * @param newVal\n * @param obs\n * @fires getIndex\n */\nfunction observerEmit(newVal, obs) {\n  if (bbn.cp.mixins.observer.methods.observerEmit.apply(this, [newVal, obs])) {\n    let ele = this.$el.querySelector(\".bbn-observer-\" + obs.element);\n    if (ele) {\n      let idx = this.getIndex(ele);\n      if (idx !== false) {\n        this.$set(this.views[idx].events, 'bbnObs' + obs.element + obs.id, newVal);\n        this.$nextTick(() => {\n          //this.$forceUpdate();\n        });\n      }\n    }\n  }\n}\n\n/**\n * The called method on the switching to false of the \"observer Dirty\" property value\n * @method observerClear\n * @param {Object} obs\n * @fires getIndex\n * @fires $delete\n * @fires $nextTick\n * @fires $forceUpdate\n * @fires observationTower.observerClear\n */\nfunction observerClear(obs) {\n  let ele = this.$el.querySelector(\".bbn-observer-\" + obs.element);\n  if (ele) {\n    let idx = this.getIndex(ele);\n    if (idx !== false && this.views[idx].events['bbnObs' + obs.element + obs.id] !== undefined) {\n      this.$delete(this.views[idx].events, 'bbnObs' + obs.element + obs.id);\n      this.$nextTick(() => {\n        //this.$forceUpdate();\n      });\n    }\n  } else if (this.observationTower) {\n    this.observationTower.observerClear(obs);\n  }\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_observers.js?");

/***/ }),

/***/ "./src/components/router/_panes.js":
/*!*****************************************!*\
  !*** ./src/components/router/_panes.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPane: () => (/* binding */ addPane),\n/* harmony export */   addToPane: () => (/* binding */ addToPane),\n/* harmony export */   getPane: () => (/* binding */ getPane),\n/* harmony export */   removeFromPane: () => (/* binding */ removeFromPane),\n/* harmony export */   removePane: () => (/* binding */ removePane),\n/* harmony export */   selectPaneTab: () => (/* binding */ selectPaneTab)\n/* harmony export */ });\nfunction getPane(obj) {\n  if (!obj) {\n    return false;\n  }\n  if (this.isVisual) {\n    return obj.view.pane || false;\n  }\n  return obj.pane || false;\n}\nfunction addPane(paneId) {\n  if (this.splittable) {\n    if (!paneId) {\n      paneId = bbn.fn.randomString().toLowerCase();\n    }\n    if (!bbn.fn.getRow(this.currentPanes, {\n      id: paneId\n    })) {\n      this.currentPanes.push({\n        id: paneId,\n        tabs: [],\n        selected: -1\n      });\n    }\n  }\n  return paneId;\n}\nfunction selectPaneTab(pane) {\n  let view = pane.tabs[pane.selected];\n  if (view) {\n    view.last = bbn.fn.timestamp();\n  }\n}\nfunction removePane(paneId) {\n  if (this.splittable && this.currentPanes) {\n    let paneIndex = bbn.fn.search(this.currentPanes, {\n      id: paneId\n    });\n    let pane = this.currentPanes[paneIndex];\n    if (!pane) {\n      throw new Error(bbn._(\"Impossible to find the pane with ID %s\", paneId));\n    }\n    if (pane.tabs.length) {\n      throw new Error(bbn._(\"Impossible to remove the pane with ID %s as it has still containers inside\", paneId));\n    }\n    this.currentPanes.splice(paneIndex, 1);\n    if (this.routed) {\n      this.$nextTick(() => {\n        this.currentPanes.length ? this.getRef('splitter').init() : this.getRef('topSplitter').init();\n      });\n    }\n  }\n}\nfunction addToPane(containerIdx, paneId) {\n  let view = this.views[containerIdx];\n  if (!view) {\n    throw new Error(bbn._(\"Impossible to find the view with index\") + ' ' + containerIdx);\n  }\n  if (view.dirty) {\n    this.alert(bbn._(\"Save your changes or discard them before moving the container\"));\n    return;\n  }\n  let pane = bbn.fn.getRow(this.currentPanes, {\n    id: paneId\n  });\n  if (!pane) {\n    paneId = this.addPane(paneId);\n    pane = bbn.fn.getRow(this.currentPanes, {\n      id: paneId\n    });\n  }\n  this.$set(this.views[containerIdx], \"pane\", paneId);\n  pane.tabs.push(view);\n  //this.$forceUpdate();\n  if (containerIdx === this.selected) {\n    this.selectClosest(containerIdx);\n  }\n  pane.selected = pane.tabs.length - 1;\n}\nfunction removeFromPane(containerIdx) {\n  let view = this.views[containerIdx];\n  if (view) {\n    if (view.dirty) {\n      this.alert(bbn._(\"Save your changes or discard them before moving the container\"));\n      return;\n    }\n    let paneId = view.pane;\n    if (paneId) {\n      let pane = bbn.fn.getRow(this.currentPanes, {\n        id: paneId\n      });\n      if (pane && pane.tabs) {\n        let idx = bbn.fn.search(pane.tabs, {\n          idx: containerIdx\n        });\n        if (idx > -1) {\n          this.selected = containerIdx;\n          view.pane = false;\n          this.$nextTick(() => {\n            pane.tabs.splice(idx, 1);\n            if (!pane.tabs.length) {\n              this.removePane(paneId);\n            } else if (pane.selected >= idx) {\n              pane.selected--;\n              this.getRef('pane' + pane.id).onResize(true);\n            }\n          });\n        }\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_panes.js?");

/***/ }),

/***/ "./src/components/router/_registration.js":
/*!************************************************!*\
  !*** ./src/components/router/_registration.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   register: () => (/* binding */ register),\n/* harmony export */   registerRouter: () => (/* binding */ registerRouter),\n/* harmony export */   unregister: () => (/* binding */ unregister),\n/* harmony export */   unregisterRouter: () => (/* binding */ unregisterRouter)\n/* harmony export */ });\n/**\n * Function used by container to make themselves known when they are mounted.\n * @method register\n * @param {bbnCp} cp\n * @param {Boolean} fake\n * @fires add\n * @fires search\n * @fires route\n * @fires getDefaultURL\n */\nfunction register(cp, fake) {\n  if (fake) {\n    bbn.fn.log(\"ADDING FAKE\", cp);\n    this.add(cp);\n    return;\n  }\n  if (!bbn.fn.isString(cp.url)) {\n    bbn.fn.log(cp);\n    throw Error(bbn._('The component bbn-container must have a URL defined'));\n  }\n  //bbn.fn.log(\"REGISRTE\", cp.$el.bbnId, cp.url, this.urls[cp.url] ? this.urls[cp.url].$el.bbnId : \"NO\")\n  if (this.urls[cp.url]) {\n    bbn.fn.log([\"It exists\", this.urls[cp.url].$numBuild, this.numRegistered, this.views[0].real]);\n    if (cp !== this.urls[cp.url]) {\n      this.urls[cp.url].$el.parentNode.removeChild(this.urls[cp.url].$el);\n      ///throw Error(bbn._('Two containers cannot have the same URL defined (' + cp.url + ')'));\n    }\n\n    //return;\n  }\n  bbn.fn.log(\"REGISTERING \" + cp.url);\n  this.numRegistered++;\n  this.urls[cp.url] = cp;\n  if (this.isVisual) {\n    //bbn.fn.log(\"VIEW ON VISUAL\")\n    cp.$on('view', () => {\n      this.visualShowAll = false;\n    });\n  }\n  let idx = this.search(cp.url);\n  if (idx === false) {\n    bbn.fn.log(\"ADDING BECAUSE CAN'T FIND\", cp.url, this.views.map(a => a.url));\n    this.add(cp);\n  } else {\n    cp.currentIndex = idx;\n  }\n\n  //bbn.fn.log(this.numRegistered + \" OUT OF \" + this.numOutOfPane, cp.currentView.pane)\n  if (this.numRegistered === this.numOutOfPane) {\n    this.init(this.getDefaultURL());\n  }\n  this.$emit('registered', cp.url);\n}\n\n/**\n * Function used by container to make themselves known when they are destroyed\n * @method unregister\n * @fires search\n * @fires remove\n * @param {bbnCp} cp\n */\nfunction unregister(cp) {\n  bbn.fn.log(\"UNREGISTERING \" + cp.url);\n  if (!bbn.fn.isString(cp.url)) {\n    throw Error(bbn._('The component bbn-container must have a URL defined'));\n  }\n  this.numRegistered--;\n  let idx = this.search(cp.url),\n    dataObj = this.postBaseUrl ? {\n      _bbn_baseURL: this.fullBaseURL\n    } : {},\n    requestID = bbn.fn.getRequestId(cp.url, dataObj);\n  if (bbn.fn.getLoader(requestID)) {\n    bbn.fn.abort(requestID);\n  }\n  if (this.urls[cp.url] !== undefined) {\n    delete this.urls[cp.url];\n  }\n  if (idx !== false) {\n    //this.remove(idx);\n  }\n}\n\n/**\n * @method registerRouter\n * @param {bbnCp} bc\n * @param {String} url\n */\nfunction registerRouter(router) {\n  this.routers[bbn.fn.substr(router.getBaseURL(), 0, -1)] = router;\n}\n\n/**\n * @method unregisterRouter\n * @param {bbnCp} bc\n * @param {String} url\n */\nfunction unregisterRouter(router) {\n  delete this.routers[bbn.fn.substr(router.getBaseURL(), 0, -1)];\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_registration.js?");

/***/ }),

/***/ "./src/components/router/_search.js":
/*!******************************************!*\
  !*** ./src/components/router/_search.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fixIndexes: () => (/* binding */ fixIndexes),\n/* harmony export */   getIndex: () => (/* binding */ getIndex),\n/* harmony export */   getPortalSelector: () => (/* binding */ getPortalSelector),\n/* harmony export */   search: () => (/* binding */ search),\n/* harmony export */   searchContainer: () => (/* binding */ searchContainer),\n/* harmony export */   searchForString: () => (/* binding */ searchForString),\n/* harmony export */   selectClosest: () => (/* binding */ selectClosest)\n/* harmony export */ });\nfunction getPortalSelector(view) {\n  if (!this.disabled && this.panes.length) {\n    let pane = this.getPane(view);\n    if (pane) {\n      return '#' + pane + slashToHyphen(this.isVisual ? view.view.url : view.url);\n    }\n  }\n  return undefined;\n}\nfunction selectClosest(idx) {\n  if (idx === this.selected && this.views[idx] && !this.views[idx].pane) {\n    return;\n  }\n  if (this.selected === idx) {\n    if (this.views.length) {\n      let newIdx = false;\n      bbn.fn.each(this.history, a => {\n        let tmp = this.getIndex(a);\n        if (tmp !== false && !this.views[tmp].pane) {\n          newIdx = tmp;\n          return false;\n        }\n      });\n      if (newIdx === false) {\n        let tmp = idx;\n        while (tmp >= 0) {\n          if (this.views[tmp] && !this.views[tmp].pane) {\n            newIdx = tmp;\n            break;\n          }\n          tmp--;\n        }\n        if (newIdx === false) {\n          tmp = idx;\n          while (tmp < this.views.length) {\n            if (this.views[tmp] && !this.views[tmp].pane) {\n              newIdx = tmp;\n              break;\n            }\n            tmp++;\n          }\n        }\n      }\n      if (this.views[newIdx]) {\n        this.activateIndex(newIdx);\n      }\n    } else {\n      this.selected = false;\n    }\n  }\n}\n\n/**\n * @method getIndex\n * @fires isValidIndex\n * @fires search\n * @return {Number|Boolean}\n */\nfunction getIndex(misc) {\n  if (!this.views.length) {\n    return false;\n  }\n  if ([undefined, null].includes(misc)) {\n    return this.selected;\n  }\n  if (!this.isValidIndex(misc)) {\n    if (typeof misc === 'string') {\n      misc = this.search(misc);\n    } else if (typeof misc === 'object') {\n      // Vue\n      if (misc.$el) {\n        misc = misc.$el;\n      }\n      if (misc.tagName) {\n        bbn.fn.each(this.$children, ct => {\n          if (ct.$vnode && ct.$vnode.componentOptions && ct.$vnode.componentOptions.tag === 'bbn-container' && (ct.$el === misc || ct.$el.contains(misc))) {\n            misc = ct.currentIndex;\n            return false;\n          }\n        });\n      }\n    }\n  }\n  return this.isValidIndex(misc) ? misc : false;\n}\nfunction fixIndexes() {\n  bbn.fn.each(this.views, (v, i) => {\n    if (v.idx !== i) {\n      v.idx = i;\n      if (this.urls[v.url]) {\n        this.urls[v.url].currentIndex = i;\n      }\n    }\n  });\n}\n\n/**\n * @method search\n * @param {String} url\n * @return {Number|Boolean}\n */\nfunction search(url) {\n  if (!bbn.fn.isString(url)) {\n    throw Error(bbn._('The component bbn-container must have a valid URL defined (Search)'));\n  }\n  let r = bbn.fn.search(this.views, \"url\", url);\n  if (r === -1) {\n    bbn.fn.each(this.views, (tab, index) => {\n      if (url.indexOf(tab.url + '/') === 0) {\n        r = index;\n        return false;\n      }\n    });\n  }\n  return r > -1 ? r : false;\n}\nfunction searchForString(needle) {\n  let res = [];\n  let st = needle.toLowerCase().trim();\n  bbn.fn.each(this.views, a => {\n    let found = false;\n    bbn.fn.iterate(this.routers, router => {\n      let tmp = router.searchForString(needle);\n      if (tmp.length) {\n        bbn.fn.each(tmp, t => {\n          t.url = this.getBaseURL() + t.url;\n          if (!bbn.fn.getRow(res, {\n            url: t.url\n          })) {\n            found = true;\n            res.push(t);\n          }\n        });\n      }\n    });\n    if (!found) {\n      let match = false;\n      let idx = -1;\n      let obj = {\n        url: a.current || a.url,\n        title: this.getFullTitle(a)\n      };\n      if ((idx = obj.url.toLowerCase().indexOf(st)) > -1) {\n        match = \"url\";\n      } else if ((idx = obj.title.toLowerCase().indexOf(st)) > -1) {\n        match = \"title\";\n      }\n      if (match) {\n        let url = this.getBaseURL() + obj.url;\n        res.push({\n          url: url,\n          title: obj.title,\n          score: match === 'url' ? 10 : 20,\n          icon: a.icon || null,\n          hash: url,\n          bcolor: a.bcolor || null,\n          fcolor: a.fcolor || null,\n          component: this.$options.components.searchResult,\n          match: bbn.fn.substr(obj[match], 0, idx) + '<strong><em>' + bbn.fn.substr(obj[match], idx, st.length) + '</em></strong>' + bbn.fn.substr(obj[match], idx + st.length)\n        });\n      }\n    }\n  });\n  return res;\n}\n\n/**\n * @method searchContainer\n * @param {String} url\n * @param {Boolean} deep\n * @fires search\n * @fires getContainer\n * @return {Vue|Boolean}\n */\nfunction searchContainer(url, deep) {\n  let container = false,\n    idx = this.search(url);\n  if (idx !== false) {\n    container = this.getContainer(idx);\n    if (deep && container) {\n      let router = container.find('bbn-router');\n      if (router) {\n        let real = router.searchContainer(bbn.fn.substr(url, router.baseURL.length), true);\n        if (real) {\n          return real;\n        }\n      }\n    }\n  }\n  return container;\n}\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_search.js?");

/***/ }),

/***/ "./src/components/router/router.js":
/*!*****************************************!*\
  !*** ./src/components/router/router.js ***!
  \*****************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _elements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_elements.js */ \"./src/components/router/_elements.js\");\n/* harmony import */ var _navigation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_navigation.js */ \"./src/components/router/_navigation.js\");\n/* harmony import */ var _registration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_registration.js */ \"./src/components/router/_registration.js\");\n/* harmony import */ var _panes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_panes.js */ \"./src/components/router/_panes.js\");\n/* harmony import */ var _manipulate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_manipulate.js */ \"./src/components/router/_manipulate.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_config.js */ \"./src/components/router/_config.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_search.js */ \"./src/components/router/_search.js\");\n/* harmony import */ var _menu_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_menu.js */ \"./src/components/router/_menu.js\");\n/* harmony import */ var _getters_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./_getters.js */ \"./src/components/router/_getters.js\");\n/* harmony import */ var _breadcrumb_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./_breadcrumb.js */ \"./src/components/router/_breadcrumb.js\");\n/* harmony import */ var _observers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./_observers.js */ \"./src/components/router/_observers.js\");\n/* harmony import */ var _2move_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./_2move.js */ \"./src/components/router/_2move.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_misc.js */ \"./src/components/router/_misc.js\");\n/* harmony import */ var _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @bbn/bbn */ \"./node_modules/@bbn/bbn/dist/index.js\");\n/* harmony import */ var _router_html__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./router.html */ \"./src/components/router/router.html\");\n/* harmony import */ var _router_less__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./router.less */ \"./src/components/router/router.less\");\n/**\r\n * @file bbn-router component\r\n * @description bbn-router is a component that allows and manages the navigation (url) between the various containers of an application\r\n * @copyright BBN Solutions\r\n * @author BBN Solutions\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst cpDef = {\n  name: 'bbn-router',\n  statics() {\n    // IndexedDb access for storing thumbnails in visual mode\n    let db = false;\n    if (_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].db && _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].db.ok && window.html2canvas) {\n      db = true;\n      if (!_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].db._structures.bbn || !_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].db._structures.bbn.containers) {\n        _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].db.add('bbn', 'containers', {\n          keys: {\n            PRIMARY: {\n              columns: ['url'],\n              unique: true\n            }\n          },\n          fields: {\n            url: {},\n            image: {}\n          }\n        });\n      }\n    }\n    return {\n      db,\n      possibleOrientations: [{\n        name: 'auto',\n        text: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"Position automatically\")\n      }, {\n        name: 'left',\n        text: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"Position on the left side\")\n      }, {\n        name: 'top',\n        text: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"Position on the top side\")\n      }, {\n        name: 'bottom',\n        text: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"Position on the bottom side\")\n      }, {\n        name: 'right',\n        text: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"Position on the right side\")\n      }]\n    };\n  },\n  /**\r\n   * @mixin bbn.cp.mixins.basic\r\n   * @mixin bbn.cp.mixins.localStorage\r\n   * @mixin bbn.cp.mixins.close\r\n   * @mixin bbn.cp.mixins.observer\r\n   * @mixin bbn.cp.mixins.resizer\r\n   */\n  mixins: [_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.mixins.basic, _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.mixins.localStorage, _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.mixins.close, _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.mixins.observer, _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.mixins.resizer, _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.mixins.keepCool],\n  props: {\n    /**\r\n     * Routes automatically after mount.\r\n     * @prop {Boolean} [true] auto\r\n     */\n    auto: {\n      type: Boolean,\n      default: true\n    },\n    /**\r\n     * The URL on which the router will be initialized.\r\n     * @prop {String} ['] url\r\n     */\n    url: {\n      type: String,\n      default: ''\n    },\n    /**\r\n     * Defines if the container will be automatically loaded based on URLs.\r\n     * @prop {Boolean} [true] autoload\r\n     */\n    autoload: {\n      type: Boolean,\n      default: true\n    },\n    /**\r\n     * The root URL of the router, will be only taken into account for the top parents' router, will be automatically calculated for the children.\r\n     * @prop {String} ['] root\r\n     */\n    root: {\n      type: String,\n      default: ''\n    },\n    /**\r\n     * @prop {String} def\r\n     */\n    def: {\n      type: String\n    },\n    /**\r\n     * The views shown at init.\r\n     * @prop {Array} [[]] source\r\n     */\n    source: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    /**\r\n     * @prop {Boolean} [false] single\r\n     */\n    single: {\n      type: Boolean,\n      default: false\n    },\n    maxTotal: {\n      type: Number,\n      default: 25\n    },\n    /**\r\n     * Set it to true if you want to see the navigation bar (tabs or breadcrumb).\r\n     * @prop {Boolean} [false] nav\r\n     */\n    nav: {\n      type: Boolean,\n      default: false\n    },\n    /**\r\n     * Set it to true if you want to see the visual navigation bar\r\n     * @prop {Boolean} [false] visual\r\n     */\n    visual: {\n      type: Boolean,\n      default: false\n    },\n    /**\r\n     * Sets if the views' titles will be scrollable in case they have a greater width than the page (true), or if they will be shown multilines (false, default).\r\n     * @prop {Boolean} [false] scrollable\r\n     */\n    scrollable: {\n      type: Boolean,\n      default: false\n    },\n    /**\r\n     * Sets if the router and the ocntainers inside it should be themselves scrollable or part of the global scroll.\r\n     * @prop {Boolean} [false] scrollContent\r\n     */\n    scrollContent: {\n      type: Boolean,\n      default: true\n    },\n    /**\r\n     * The name used for the storage.\r\n     * @prop {String} ['__ROOT__'] storageName\r\n     */\n    storageName: {\n      type: String,\n      default: '__ROOT__'\n    },\n    /**\r\n     * The confirm message when you close an unsaved container.\r\n     * @prop {(Boolean|String|Function)} ['Are you sure you want to discard the changes you made in this tab?'] confirmLeave\r\n     */\n    confirmLeave: {\n      type: [Boolean, String, Function],\n      default: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"Are you sure you want to discard the changes you made in this page?\")\n    },\n    /**\r\n     * The max length of the history.\r\n     * @prop {Number} [10] historyMaxLength\r\n     */\n    historyMaxLength: {\n      type: Number,\n      default: 10\n    },\n    /**\r\n     * @todo Integrates Boolean to have a default with no menu\r\n     * @prop {Array|Function} [[]] menu\r\n     */\n    menu: {\n      type: [Array, Function],\n      default: function () {\n        return [];\n      }\n    },\n    /**\r\n     * Set it to true if you want to show the breadcrumb instead of the tabs.\r\n     * @prop {Boolean} [false] breadcrumb\r\n     */\n    breadcrumb: {\n      type: Boolean,\n      default: false\n    },\n    /**\r\n     * Set it to true if you want to set this nav as a master.\r\n     * @prop {Boolean} [false] master\r\n     */\n    master: {\n      type: Boolean,\n      default: false\n    },\n    /**\r\n     * Set it to true if you want to send the variable _baseUrl.\r\n     * @prop {Boolean} [true] postBaseUrl\r\n     */\n    postBaseUrl: {\n      type: Boolean,\n      default: true\n    },\n    /**\r\n     * If this is set, along with componentSource and componentUrl a single container with this component will be created.\r\n     * @prop {(String|Object)} component\r\n     */\n    component: {\n      type: [String, Object]\n    },\n    /**\r\n     * The source for the component.\r\n     * @prop {Object} componentSource\r\n     */\n    componentSource: {\n      type: Object\n    },\n    /**\r\n     * The property to get from the componentSource to use for setting the URL.\r\n     * @prop {String} componentUrl\r\n     */\n    componentUrl: {\n      type: String\n    },\n    /**\r\n     * The max length for the titles\r\n     * @prop {Number} [20] maxTitleLength\r\n     */\n    maxTitleLength: {\n      type: Number,\n      default: 20\n    },\n    /**\r\n     * @prop {Boolean} [true] urlNavigation\r\n     */\n    urlNavigation: {\n      type: Boolean,\n      default: true\n    },\n    /**\r\n     * Will be passed to router in order to ignore the dirty parameter.\r\n     * @prop {Boolean} ignoreDirty\r\n     */\n    ignoreDirty: {\n      type: Boolean,\n      default: false\n    },\n    /**\r\n     * The size of every grid cell on which is based the visual view\r\n     * @prop {Number} [180] visualSize\r\n     */\n    visualSize: {\n      type: Number,\n      default() {\n        return Math.max(60, Math.min(120, Math.round(Math.min(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].env.width, _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].env.height) / 7)));\n      }\n    },\n    /**\r\n     * The position of the visual mini containers\r\n     * @prop {Number} [180] visualSize\r\n     */\n    orientation: {\n      type: String,\n      default() {\n        return 'auto';\n      },\n      validator(v) {\n        return !!_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.getRow(bbnRouterCp.possibleOrientations, {\n          name: v\n        });\n      }\n    },\n    /**\r\n     * The default background color for the title bar\r\n     * @prop {String} [#666] bcolor\r\n     */\n    bcolor: {\n      type: String,\n      default: '#666'\n    },\n    /**\r\n     * The default text color for the title bar\r\n     * @prop {String} [#EEE] fcolor\r\n     */\n    fcolor: {\n      type: String,\n      default: '#EEE'\n    },\n    /**\r\n     * A list of panes used by default if splittable is true\r\n     * @prop {Array} [[]] panes\r\n     */\n    panes: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    /**\r\n     * Decides if real bbn-container are shown before or after the ones in the config or fake container 9bbns-container)\r\n     * @prop {String} ['real] first\r\n     */\n    first: {\n      type: String,\n      default: 'real'\n    },\n    /**\r\n     * If true another tab can be opened aside\r\n     * @prop {Boolean} [false] splittable\r\n     */\n    splittable: {\n      type: Boolean,\n      default: false\n    },\n    /**\r\n     * If true when splittable the extra panes can be collapsed\r\n     * @prop {Boolean} [false] collapsible\r\n     */\n    collapsible: {\n      type: Boolean,\n      default: true\n    },\n    /**\r\n     * If true when splittable the extra panes can be resized\r\n     * @prop {Boolean} [false] resizable\r\n     */\n    resizable: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      /**\r\n       * IndexedDb connection\r\n       * @return {Object} \r\n       */\n      db: null,\n      /**\r\n      * Number of conatainers registered - as they say it.\r\n      * @data {Number} [0] numRegistered\r\n      */\n      numRegistered: 0,\n      /**\r\n       * Real containers are the bbn-container in the slot.\r\n       * @data {Boolean} [false] hasRealContainers\r\n       */\n      hasRealContainers: false,\n      /**\r\n       * Fake containers are the bbns-container in the slot.\r\n       * @data {Boolean} [false] hasFakeContainers\r\n       */\n      hasFakeContainers: false,\n      /**\r\n       * True if one of the initial containers' URL is an empty string.\r\n       * @data {Boolean} [false] hasEmptyURL\r\n       */\n      hasEmptyURL: false,\n      /**\r\n       * The array of containers defined in the source.\r\n       * @data {Array} cfgViews\r\n       */\n      cfgViews: [].concat(this.source),\n      /**\r\n       * The views from the slot.\r\n       * @data {Array} [[]] slotViews\r\n       */\n      slotViews: [],\n      /**\r\n       * All the views.\r\n       * @data {Array} [[]] views\r\n      */\n      views: [],\n      /**\r\n       * All the URLS of the views.\r\n       * @data {Object} [{}] urls\r\n       */\n      urls: {},\n      /**\r\n       * Current URL of the router.\r\n       * @data {String} currentURL\r\n       */\n      currentTitle: '',\n      /**\r\n       * Current URL of the router.\r\n       * @data {String} currentURL\r\n       */\n      currentURL: this.url || '',\n      /**\r\n       * Relative root of the router (set by user or by parent router).\r\n       * @data {String} baseURL\r\n       */\n      baseURL: this.formatBaseURL(this.root),\n      /**\r\n      * An array of the parents router.\r\n      * @data {Array} [[]] parents\r\n      */\n      parents: [],\n      /**\r\n      * An object with each mounted children router.\r\n      * @data {Object} [{}] routers\r\n      */\n      routers: {},\n      /**\r\n      * The direct parent router if there is one.\r\n      * @data {bbnCp} [null] parent\r\n      */\n      parent: null,\n      /**\r\n       * The root router or the current one it's the same.\r\n       * @data {bbnCp} [null] router\r\n       */\n      router: null,\n      /**\r\n       * The container having the router in if there is one.\r\n       * @data {bbnCp} [null] parentContainer\r\n       */\n      parentContainer: null,\n      /**\r\n       * ????\r\n       * @data {Boolean} [ture] visible\r\n       */\n      visible: true,\n      /**\r\n       * The currently visible container.\r\n       * @data {bbnCp} [null] activeContainer\r\n       */\n      activeContainer: null,\n      /**\r\n       * Set to true each time the router is loading (can only load once at a time).\r\n       * @data {Boolean} [false] isLoading\r\n       */\n      isLoading: false,\n      /**\r\n       * This will remain false until the first routing.\r\n       * @data {Boolean} [false] routed\r\n       */\n      routed: false,\n      /**\r\n       * True while the component is in the action of routing.\r\n       * @data {Boolean} [false] isRouting\r\n       */\n      isRouting: false,\n      /**\r\n       * False until the first routing.\r\n       * @data {Boolean} [false] isInit\r\n       */\n      isInit: false,\n      /**\r\n       * The index of the currently selected view.\r\n       * @data {Number} [null] selected\r\n       */\n      selected: null,\n      /**\r\n       * The list of the dirty containers.\r\n       * @data {Array} [[]] dirtyContainers\r\n       */\n      dirtyContainers: [],\n      /**\r\n       * The navigation history.\r\n       * @data {Array} [[]] history\r\n       */\n      history: [],\n      /**\r\n       * @data {Boolean} [false] iconsReady\r\n       */\n      iconsReady: false,\n      /**\r\n       * Shows if the navigation mode is set to breacrumb.\r\n       * @data {Boolean} isBreadcrumb\r\n       */\n      isBreadcrumb: !!this.breadcrumb,\n      /**\r\n       * itsMaster.isBreadcrumb watcher.\r\n       * @data {Boolean} breadcrumbWatcher\r\n       */\n      breadcrumbWatcher: false,\n      /**\r\n       * List of breadcrumbs\r\n       * @data {Array} breadcrumbsList\r\n       */\n      breadcrumbsList: [],\n      /**\r\n       * If true and visual will show all the containers as icons.\r\n       * Starts at true for better updating when displays changes\r\n       * @data {Boolean} visualShowAll\r\n       */\n      visualShowAll: false,\n      /**\r\n       * In visual mode the side on which the thumbnails are shown.\r\n       * If auto (default) the bar will be top if H > W, left otherwise\r\n       * @data {String} ['auto'] visualOrientation\r\n       */\n      visualOrientation: this.orientation !== 'auto' ? this.orientation : null,\n      /**\r\n       * If true the auto orientation won't be taken into account.\r\n       * @data {Boolean} lockedOrientation\r\n       */\n      lockedOrientation: false,\n      /**\r\n       * If true visual mode is used for nav (instead of tabs or breadcrumbs)\r\n       * @data {Boolean} visual\r\n       */\n      isVisual: this.visual,\n      /**\r\n       * The panes for when splittable is true\r\n       * @data {Array} currentPanes\r\n       */\n      currentPanes: this.panes.slice(),\n      /**\r\n       * If true the configuration will be shown\r\n       * @data {Boolean} visual\r\n       */\n      showRouterCfg: false,\n      /**\r\n       * Becomes true once the pane splitter is mounted\r\n       * @data {Boolean} visual\r\n       */\n      splitterMounted: false,\n      visualStyleContainer: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.createObject()\n    };\n  },\n  computed: {\n    selectedTab: {\n      get() {\n        return _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.search(this.tabsList, {\n          idx: this.selected\n        });\n      },\n      set(v) {\n        //bbn.fn.log(\"SETING SELECTED TAB\");\n        let done = false;\n        let i = v;\n        while (i > -1) {\n          if (this.tabsList[i]) {\n            this.selected = this.tabsList[i].idx;\n            done = true;\n            break;\n          }\n          i--;\n        }\n        if (!done) {\n          i = v;\n          while (i < this.tabsList.length) {\n            if (this.tabsList[i]) {\n              this.selected = this.tabsList[i].idx;\n              done = true;\n              break;\n            }\n            i++;\n          }\n        }\n        if (!done) {\n          this.selected = null;\n        }\n      }\n    },\n    isSplittable() {\n      return this.splittable && !this.single;\n    },\n    visualContainerStyle() {\n      if (!this.isVisual) {\n        return {};\n      }\n      let coord = [1, this.numVisualCols + 1, 1, this.numVisualRows + 1];\n      if (this.views.length > 1) {\n        switch (this.visualOrientation) {\n          case 'top':\n            coord[2] = 2;\n            break;\n          case 'bottom':\n            coord[3] = coord[3] - 1;\n            break;\n          case 'left':\n            coord[0] = 2;\n            break;\n          case 'right':\n            coord[1] = coord[1] - 1;\n            break;\n        }\n      }\n      return {\n        position: 'relative',\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        gridColumnStart: coord[0],\n        gridColumnEnd: coord[1],\n        gridRowStart: coord[2],\n        gridRowEnd: coord[3],\n        zoom: 1\n      };\n    },\n    /**\r\n     * Not only the baseURL but a combination of all the parent's baseURLs.\r\n     * @computed fullBaseURL\r\n     * @return {String}\r\n     */\n    fullBaseURL() {\n      let vm = this,\n        base = '',\n        tmp;\n      while (tmp = vm.baseURL) {\n        base = tmp + base;\n        if (!vm.parents.length) {\n          break;\n        }\n        vm = vm.parents[0];\n      }\n      return base;\n    },\n    /**\r\n     * Returns true if there are any unsaved views.\r\n     * @computed isDirty\r\n     * @return {Boolean}\r\n     */\n    isDirty() {\n      return !!this.dirtyContainers.length;\n    },\n    /**\r\n     * The master bbn-router of this one.\r\n     * @computed itsMaster\r\n     * @return {bbnCp}\r\n     */\n    itsMaster() {\n      let r = this;\n      if (this.master) {\n        return r;\n      }\n      if (this.parents.length) {\n        let i = 0;\n        while (this.parents[i] && this.parents[i].isBreadcrumb) {\n          r = this.parents[i];\n          i++;\n          if (r.master) {\n            break;\n          }\n        }\n      }\n      return r;\n    },\n    isBreadcrumbMaster() {\n      if (this.isBreadcrumb) {\n        return this.itsMaster === this;\n      }\n      return false;\n    },\n    /**\r\n     * Returns the bbn-tabs component of this router.\r\n     * @todo Kill this function, there is no anymore tabs component\r\n     * @computed itsTabs\r\n     * @fires getRef\r\n     * @return {Vue|Boolean}\r\n     */\n    itsTabs() {\n      if (!this.isBreadcrumb) {\n        return this.getRef('tabs');\n      }\n      return false;\n    },\n    /**\r\n     * The final Vue object for the active container (if it has sub-router).\r\n     * @computed activeRealContainer\r\n     * @fires getFinalContainer\r\n     * @return {Vue|Boolean}\r\n     */\n    activeRealContainer() {\n      return this.getFinalContainer();\n    },\n    /**\r\n     * The last router i.e. the deepest in the current active container - or this one if none\r\n     * @computed activeRouter\r\n     * @fires getSubRouter\r\n     * @return {bbnCp}\r\n     */\n    activeRouter() {\n      if (this.activeContainer) {\n        let sub = this.getSubRouter(this.selected);\n        if (_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.isComponent(sub)) {\n          return sub.activeRouter;\n        }\n      }\n      return this;\n    },\n    /**\r\n     * Returns the breadcrumbs array\r\n     * @computed breadcrumbs\r\n     * @return {Array}\r\n     */\n    breadcrumbs() {\n      let res = [];\n      if (this.isBreadcrumb) {\n        res.push(this);\n      }\n      if (this.breadcrumbsList.length) {\n        res.push(...this.getBreadcrumbs(this.selected));\n      }\n      return res;\n    },\n    /**\r\n     * The grid style for showing the router in visual mode\r\n     * @computed visualStyle\r\n     * @return {Object} \r\n     */\n    visualStyle() {\n      if (!this.isVisual) {\n        return {};\n      }\n      return {\n        minHeight: '100%',\n        display: 'grid',\n        gridColumnGap: '0.5rem',\n        gridRowGap: '0.5rem',\n        gridTemplateRows: 'repeat(' + this.numVisualRows + ', 1fr)',\n        gridTemplateColumns: 'repeat(' + this.numVisualCols + ', 1fr)'\n      };\n    },\n    /**\r\n     * Returns true if the visual blocks are on top or bottom of the selected container\r\n     * @computed visualIsOnHeight\r\n     * @return {Boolean} \r\n     */\n    visualIsOnHeight() {\n      if (this.isVisual) {\n        return ['top', 'bottom'].includes(this.visualOrientation);\n      }\n      return false;\n    },\n    /**\r\n     * The ratio between height and width for each block\r\n     * @computed visualRatio\r\n     * @return {Object} \r\n     */\n    visualRatio() {\n      if (!this.isVisual) {\n        return 1;\n      }\n      let diffW = this.visualIsOnHeight ? 0 : this.visualSize;\n      let diffH = this.visualIsOnHeight ? this.visualSize : 0;\n      let ratio = (this.lastKnownWidth - diffW) / (this.lastKnownHeight - diffH);\n      if (ratio > 2) {\n        return 2;\n      }\n      return Math.max(0.5, ratio);\n    },\n    /**\r\n     * The number of columns (width) for the visual mode\r\n     * @computed numVisualCols\r\n     * @return {Number} \r\n     */\n    numVisualCols() {\n      if (this.isVisual && this.ready) {\n        // Width greater or equal to height\n        let w = this.lastKnownWidth - (this.visualIsOnHeight ? 0 : this.visualSize);\n        if (this.splitterMounted) {\n          let splitter = this.getRef('splitter');\n          if (splitter.$el.clientWidth < w) {\n            w -= splitter.$el.clientWidth;\n          }\n        }\n        if (this.visualRatio >= 1) {\n          return Math.floor(w / this.visualSize);\n        } else {\n          return Math.floor(w / (this.visualSize * 1));\n        }\n      }\n      return 1;\n    },\n    /**\r\n     * The number of rows (height) for the visual mode\r\n     * @computed numVisualRows\r\n     * @return {Number} \r\n     */\n    numVisualRows() {\n      if (this.isVisual && this.ready) {\n        let h = this.lastKnownHeight - (this.visualIsOnHeight ? this.visualSize : 0);\n        if (this.splitterMounted) {\n          let splitter = this.getRef('splitter');\n          if (splitter.$el.clientHeight < h) {\n            h -= splitter.$el.clientHeight;\n          }\n        }\n        if (this.visualRatio > 1) {\n          return Math.floor(h / this.visualSize * 1);\n        } else {\n          return Math.floor(h / this.visualSize);\n        }\n      }\n      return 1;\n    },\n    /**\r\n     * The number of cells on the side where the thumbnails are shown in the visual mode\r\n     * @computed numVisuals\r\n     * @return {Number} \r\n     */\n    numVisuals() {\n      if (this.isVisual) {\n        if (['left', 'right'].includes(this.visualOrientation)) {\n          return this.numVisualRows;\n        } else {\n          return this.numVisualCols;\n        }\n      }\n      return 0;\n    },\n    /**\r\n     * The number of cells on the side where the thumbnails are shown in the visual mode\r\n     * @computed numVisualReals\r\n     * @return {Number} \r\n     */\n    numVisualReals() {\n      if (this.isVisual) {\n        return _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.filter(this.visualList, a => a.view.idx !== this.selected && !a.view.pane).length;\n      }\n      return 0;\n    },\n    /**\r\n     * The views to show, in a specific different order, for the visual mode\r\n     * @computed visualList\r\n     * @return {Array} \r\n     */\n    visualList() {\n      if (!this.isVisual) {\n        return [];\n      }\n      let moreViewsThanSlots = this.numVisuals < _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.filter(this.views, {\n        pane: false\n      }).length;\n      let numAvailableSlots = this.numVisuals - (moreViewsThanSlots ? 1 : 0);\n      let order = this.visualShowAll ? {\n        selected: 'asc',\n        fixed: 'desc',\n        pinned: 'desc',\n        last: 'desc',\n        idx: 'asc'\n      } : {\n        selected: 'desc',\n        last: 'desc',\n        fixed: 'desc',\n        pinned: 'desc',\n        idx: 'asc'\n      };\n      let idx = 0;\n      return _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.map(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.multiorder(this.views, order), a => {\n        let visible = false;\n        if (this.visualShowAll || idx <= numAvailableSlots || this.selected === a.idx) {\n          visible = true;\n          if (!a.pane) {\n            idx++;\n          }\n        } else if (a.pane) {\n          visible = true;\n        }\n        return {\n          view: a,\n          visible: visible\n        };\n      });\n    },\n    /**\r\n     * The number of tabs which are not in a pane\r\n     * \r\n     * @returns {Number}\r\n     */\n    numOutOfPane() {\n      return _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.filter(this.views, {\n        pane: false\n      }).length;\n    },\n    /**\r\n     * The number of panes displayed\r\n     * @computed numPanes\r\n     * @return {Number} \r\n     */\n    numPanes() {\n      return this.currentPanes.length;\n    },\n    /**\r\n     * The views to show in the tabs, without the ones in the pane if splittable\r\n     * @computed tabsList\r\n     * @return {Array} \r\n     */\n    tabsList() {\n      return _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.multiorder(this.splittable ? _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.filter(this.views, a => !a.pane) : this.views, {\n        fixed: 'desc',\n        pinned: 'desc',\n        idx: 'asc'\n      });\n    },\n    hasVerticalTabs() {\n      return !this.isVisual && !this.isBreadcrumb && (this.orientation === 'left' || this.orientation === 'right');\n    }\n  },\n  methods: {\n    getVue: _elements_js__WEBPACK_IMPORTED_MODULE_0__.getVue,\n    getContainer: _elements_js__WEBPACK_IMPORTED_MODULE_0__.getContainer,\n    getDOMContainer: _elements_js__WEBPACK_IMPORTED_MODULE_0__.getDOMContainer,\n    getSubRouter: _elements_js__WEBPACK_IMPORTED_MODULE_0__.getSubRouter,\n    getFinalContainer: _elements_js__WEBPACK_IMPORTED_MODULE_0__.getFinalContainer,\n    getRealVue: _elements_js__WEBPACK_IMPORTED_MODULE_0__.getRealVue,\n    getRoute: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.getRoute,\n    formatBaseURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.formatBaseURL,\n    getDefaultView: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultView,\n    route: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.route,\n    realRoute: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.realRoute,\n    next: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.next,\n    prev: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.prev,\n    activate: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.activate,\n    changeURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.changeURL,\n    getBaseURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.getBaseURL,\n    getFullBaseURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.getFullBaseURL,\n    getFullURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.getFullURL,\n    getCurrentURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentURL,\n    getFullCurrentURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.getFullCurrentURL,\n    parseURL: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.parseURL,\n    isValidIndex: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.isValidIndex,\n    activateDefault: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.activateDefault,\n    activateIndex: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.activateIndex,\n    callRouter: _navigation_js__WEBPACK_IMPORTED_MODULE_1__.callRouter,\n    register: _registration_js__WEBPACK_IMPORTED_MODULE_2__.register,\n    unregister: _registration_js__WEBPACK_IMPORTED_MODULE_2__.unregister,\n    registerRouter: _registration_js__WEBPACK_IMPORTED_MODULE_2__.registerRouter,\n    unregisterRouter: _registration_js__WEBPACK_IMPORTED_MODULE_2__.unregisterRouter,\n    getPane: _panes_js__WEBPACK_IMPORTED_MODULE_3__.getPane,\n    addPane: _panes_js__WEBPACK_IMPORTED_MODULE_3__.addPane,\n    selectPaneTab: _panes_js__WEBPACK_IMPORTED_MODULE_3__.selectPaneTab,\n    removePane: _panes_js__WEBPACK_IMPORTED_MODULE_3__.removePane,\n    addToPane: _panes_js__WEBPACK_IMPORTED_MODULE_3__.addToPane,\n    removeFromPane: _panes_js__WEBPACK_IMPORTED_MODULE_3__.removeFromPane,\n    remove: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.remove,\n    add: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.add,\n    move: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.move,\n    close: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.close,\n    closeAll: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.closeAll,\n    closeAllBut: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.closeAllBut,\n    closeTab: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.closeTab,\n    pin: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.pin,\n    unpin: _manipulate_js__WEBPACK_IMPORTED_MODULE_4__.unpin,\n    setConfig: _config_js__WEBPACK_IMPORTED_MODULE_5__.setConfig,\n    getConfig: _config_js__WEBPACK_IMPORTED_MODULE_5__.getConfig,\n    unsetConfig: _config_js__WEBPACK_IMPORTED_MODULE_5__.unsetConfig,\n    getPortalSelector: _search_js__WEBPACK_IMPORTED_MODULE_6__.getPortalSelector,\n    selectClosest: _search_js__WEBPACK_IMPORTED_MODULE_6__.selectClosest,\n    getIndex: _search_js__WEBPACK_IMPORTED_MODULE_6__.getIndex,\n    fixIndexes: _search_js__WEBPACK_IMPORTED_MODULE_6__.fixIndexes,\n    search: _search_js__WEBPACK_IMPORTED_MODULE_6__.search,\n    searchForString: _search_js__WEBPACK_IMPORTED_MODULE_6__.searchForString,\n    searchContainer: _search_js__WEBPACK_IMPORTED_MODULE_6__.searchContainer,\n    getMenuFn: _menu_js__WEBPACK_IMPORTED_MODULE_7__.getMenuFn,\n    getDefaultURL: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getDefaultURL,\n    getTitle: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getTitle,\n    getFullTitle: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getFullTitle,\n    getFontColor: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getFontColor,\n    getBackgroundColor: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getBackgroundColor,\n    getTab: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getTab,\n    getList: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getList,\n    getParents: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getParents,\n    getView: _getters_js__WEBPACK_IMPORTED_MODULE_8__.getView,\n    registerBreadcrumb: _breadcrumb_js__WEBPACK_IMPORTED_MODULE_9__.registerBreadcrumb,\n    unregisterBreadcrumb: _breadcrumb_js__WEBPACK_IMPORTED_MODULE_9__.unregisterBreadcrumb,\n    getBreadcrumbs: _breadcrumb_js__WEBPACK_IMPORTED_MODULE_9__.getBreadcrumbs,\n    observerEmit: _observers_js__WEBPACK_IMPORTED_MODULE_10__.observerEmit,\n    observerClear: _observers_js__WEBPACK_IMPORTED_MODULE_10__.observerClear,\n    load: _2move_js__WEBPACK_IMPORTED_MODULE_11__.load,\n    realInit: _2move_js__WEBPACK_IMPORTED_MODULE_11__.realInit,\n    checkLoaded: _2move_js__WEBPACK_IMPORTED_MODULE_11__.checkLoaded,\n    reload: _2move_js__WEBPACK_IMPORTED_MODULE_11__.reload,\n    updateVisualStyleContainer: _misc_js__WEBPACK_IMPORTED_MODULE_12__.updateVisualStyleContainer,\n    init: _misc_js__WEBPACK_IMPORTED_MODULE_12__.init,\n    retrieveDirtyContainers: _misc_js__WEBPACK_IMPORTED_MODULE_12__.retrieveDirtyContainers,\n    onEscape: _misc_js__WEBPACK_IMPORTED_MODULE_12__.onEscape,\n    enter: _misc_js__WEBPACK_IMPORTED_MODULE_12__.enter,\n    cutTitle: _misc_js__WEBPACK_IMPORTED_MODULE_12__.cutTitle,\n    onResize: _misc_js__WEBPACK_IMPORTED_MODULE_12__.onResize,\n    slashToHyphen: _misc_js__WEBPACK_IMPORTED_MODULE_12__.slashToHyphen,\n    /**\r\n     * Alias of bbn.fn.isNumber\r\n     * @method isNumber\r\n     * @return {Boolean}\r\n     */\n    isNumber: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.isNumber,\n    /**\r\n     * Alias of bbn.fn.numProperties\r\n     * @method numProperties\r\n     * @return {Number|Boolean}\r\n     */\n    numProperties: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.numProperties\n  },\n  /**\r\n   * @event created\r\n   */\n  created() {\n    this.componentClass.push('bbn-resize-emitter');\n    /**\r\n    * @event route\r\n    * @fires setconfig\r\n    */\n    this.$on('route', url => {\n      if (this.nav) {\n        this.setConfig();\n        let i = this.history.indexOf(url);\n        if (i > -1) {\n          this.history.splice(i, 1);\n        }\n        this.history.unshift(url);\n        while (this.history.length > this.historyMaxLength) {\n          this.history.pop();\n        }\n      }\n    });\n    let storage = !this.single && this.getStorage(this.parentContainer ? this.parentContainer.getFullURL() : this.storageName);\n    if (storage && storage.panes) {\n      _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(storage.panes, a => {\n        this.addPane(a.id);\n      });\n    }\n  },\n  /**\r\n   * @event mounted\r\n   * @fires getStorage\r\n   * @fires getDefaultURL\r\n   * @fires add\r\n   */\n  beforeMount() {\n    // All routers above (which constitute the fullBaseURL)\n    this.parents = this.ancestors('bbn-router');\n    // The closest\n    this.parent = this.parents.length ? this.parents[0] : false;\n    // The root\n    this.router = this.parents.length ? this.parents[this.parents.length - 1] : this;\n    // Case where the rooter is not at the root level\n\n    if (this.parent) {\n      this.parentContainer = this.closest('bbn-container');\n      let uri = this.parentContainer.url;\n      if (this.root && uri !== this.root && this.root.indexOf(uri) === 0) {\n        uri = this.root;\n      }\n      this.baseURL = this.formatBaseURL(uri);\n    }\n    // Case where the rooter is at root level\n    else {\n      // Opening the database for the visual mode multiview\n      if (!this.single && bbnRouterCp.db) {\n        _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].db.open('bbn').then(r => {\n          this.db = r;\n        }, err => {\n          _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.log(\"Connection error in router\", err);\n        });\n      }\n      window.addEventListener(\"beforeunload\", e => {\n        e = e || window.event;\n        //if ( $(\".bbn-tabnabbn-unsaved\").length ){\n        if (this.isDirty) {\n          // doesn't use that string but a default string...\n          let st = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._('You have unsaved data, are you sure you want to leave?');\n          // For IE and Firefox prior to version 4\n          if (e) {\n            e.returnValue = st;\n          }\n          // For Safari\n          return st;\n        }\n      });\n    }\n    let tmp = [];\n\n    //bbn.fn.warning(\"BEFORE MOUNT ROUTER\")\n\n    //Get config from the storage\n    let storage = !this.single && this.getStorage(this.parentContainer ? this.parentContainer.getFullURL() : this.storageName);\n    if (storage) {\n      if (storage.breadcrumb !== undefined) {\n        this.isBreadcrumb = storage.breadcrumb;\n      }\n      if (storage.visual !== undefined) {\n        this.isVisual = storage.visual;\n      }\n      if (storage.orientation) {\n        this.visualOrientation = storage.orientation;\n        this.lockedOrientation = true;\n      }\n    }\n\n    // ---- ADDED 16/12/20 (Mirko) ----\n    // Adding bbns-container from the slot\n    if (this.$slots.default) {\n      for (let item of this.$slots.default) {\n        let node = item.bbnSchema;\n        //bbn.fn.log(\"ROUTER SLOT\", node, '-------------');\n\n        if (!node.comment && ['bbn-container', 'bbns-container'].includes(node?.tag)) {\n          if (node.props.url === undefined) {\n            throw new Error(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"You cannot use containers in router without defining a URL property\"));\n          }\n          if (!this.hasRealContainers) {\n            this.hasRealContainers = true;\n          }\n          if (node.props.url === '') {\n            this.hasEmptyURL = true;\n          }\n          const obj = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.createObject(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.extend(true, {}, node.props));\n          _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.iterate(this.getDefaultView(), (a, n) => {\n            if (obj[n] === undefined) {\n              obj[n] = a;\n            }\n          });\n          if (node.tag === 'bbn-container') {\n            obj.real = true;\n          }\n          //let o = {real: true, load: false, loaded: true};\n          //tmp.push(bbn.fn.extend({}, node.componentOptions.propsData, o));\n          tmp.push(obj);\n        }\n      }\n    }\n    // ---- END ----\n\n    _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(this.source, (a, i) => {\n      if (a.url === '') {\n        if (a.load) {\n          throw new Error(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"You cannot use containers with empty URL for loading\"));\n        }\n        this.hasEmptyURL = true;\n      }\n      tmp.push(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.extendOut(a, {\n        real: false\n      }));\n    });\n\n    //Get config from the storage\n    if (storage && storage.views && tmp) {\n      _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(storage.views, a => {\n        let idx = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.search(tmp, {\n          url: a.url\n        });\n        if (idx > -1) {\n          // Static comes only from configuration\n          let isFixed = tmp[idx].fixed;\n          _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.extend(tmp[idx], a, {\n            fixed: isFixed\n          });\n        } else {\n          tmp.push(a);\n        }\n      });\n    }\n\n    // Getting the default URL\n    let url = this.getDefaultURL();\n    if (this.first !== 'real') {\n      tmp = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.multiorder(tmp, {\n        real: 'desc'\n      });\n    }\n\n    // Adding to the views\n    //bbn.fn.warning(\"ROUTER BEFORE MOUNT\");\n    _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(tmp, a => {\n      if (!_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.isString(a.url)) {\n        throw new Error(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"The container must have a valid URL\"));\n      }\n\n      // Setting current if URL starts with default URL\n      if (url && url.indexOf(a.url) === 0) {\n        a.current = url;\n      }\n\n      //bbn.fn.warning(\"ADDING BEFORE MOUNT\");\n      //bbn.fn.log(a);\n      this.add(a);\n    });\n    if (this.splittable) {\n      if (storage && storage.panes) {\n        _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(storage.panes, pane => {\n          _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(pane.tabs, tab => {\n            let view = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.getRow(this.views, {\n              url: tab\n            });\n            let realPane = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.getRow(this.currentPanes, {\n              id: pane.id\n            });\n            if (view && realPane) {\n              if (!view.pane) {\n                view.pane = pane.id;\n              }\n              realPane.tabs.push(view);\n            }\n          });\n        });\n      }\n      _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(this.views, a => {\n        if (a.pane) {\n          let pane = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.getRow(this.currentPanes, {\n            id: a.pane\n          });\n          if (pane && !_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.getRow(pane.tabs, {\n            url: a.url\n          })) {\n            pane.tabs.push(a);\n          }\n        }\n      });\n      _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(this.currentPanes, pane => {\n        let done = false;\n        if (storage && storage.panes) {\n          let p = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.getRow(storage.panes, {\n            id: pane.id\n          });\n          if (p && pane.tabs[p.selected]) {\n            pane.selected = p.selected;\n            done = true;\n          }\n        }\n        if (!done) {\n          pane.selected = pane.tabs.length ? 0 : -1;\n        }\n      });\n    }\n\n    //Breadcrumb\n    if (!this.master && this.parent && this.parentContainer) {\n      this.parent.registerBreadcrumb(this);\n      _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.log(\"VIEW ON BREADCUMB\");\n      this.parentContainer.$on('view', () => {\n        this.parent.registerBreadcrumb(this);\n      }, true);\n      this.parentContainer.$on('unview', () => {\n        this.parent.unregisterBreadcrumb(this);\n      }, true);\n      if (this.parentContainer.isVisible) {\n        this.parent.registerBreadcrumb(this);\n      }\n    }\n    if (this.parentContainer) {\n      this.parentContainer.registerRouter(this);\n    }\n    this.updateVisualStyleContainer();\n    this.ready = true;\n    this.$forceUpdate();\n    this.$nextTick(() => {\n      if (this.$slots.default) {\n        for (let item of this.$slots.default) {\n          if (item.bbnSchema?.tag === 'bbn-container') {\n            let el = this.$refsElements['ct-' + item.bbnSchema.props.url];\n            if (el) {\n              el.parentNode.replaceChild(item, el);\n            }\n          }\n        }\n      }\n      if (!this.views.length) {\n        this.init(url);\n      }\n    });\n  },\n  /**\r\n   * @event beforeDestroy\r\n   */\n  beforeDestroy() {\n    if (!this.master && this.parent) {\n      this.parent.unregisterBreadcrumb(this);\n    }\n    if (this.parentContainer) {\n      this.parentContainer.unregisterRouter(this);\n    }\n  },\n  watch: {\n    numVisuals() {\n      this.onResize();\n    },\n    numPanes() {\n      this.onResize();\n    },\n    visualShowAll(v) {\n      if (v && this.isVisual) {\n        this.getRef('visualRouter').focus();\n      }\n    },\n    selected(idx) {\n      if (this.views[idx]) {\n        //bbn.fn.log(\"In selected watcher \" + idx, bbn.fn.filter(this.views, {selected: true}));\n        _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.map(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.filter(this.views, {\n          selected: true\n        }), a => {\n          if (a.idx !== idx) {\n            a.selected = false;\n            if (this.urls[a.url]) {\n              this.urls[a.url].$tick();\n            }\n          }\n        });\n        if (!this.views[idx].selected && !this.views[idx].pane) {\n          this.views[idx].selected = true;\n        }\n        this.views[idx].last = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.timestamp();\n        if (this.currentURL !== this.views[idx].current) {\n          //bbn.fn.log(\"CHANGING URL \" + this.currentURL + \" TO \" + this.views[idx].current);\n          this.route(this.views[idx].current);\n        }\n      } else {\n        throw new Error(\"The view with index \" + idx + \" doesn't exist\");\n      }\n    },\n    currentTitle(v) {\n      if (!this.parent) {\n        document.title = v + ' - ' + _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].env.siteTitle;\n      }\n    },\n    /**\r\n     * @watch currentURL\r\n     * @fires changeURL\r\n     * @fires search\r\n     * @emit change\r\n     * @emit route\r\n     */\n    currentURL(newVal, oldVal) {\n      if (this.ready) {\n        let idx = this.search(newVal);\n        if (idx !== false) {\n          let v = this.views[idx];\n          let ct = this.urls[v.url];\n          if (!v.pane) {\n            this.selected = idx;\n            if (ct) {\n              this.changeURL(newVal, ct.title);\n            } else if (this.isLoading) {\n              this.changeURL(newVal, _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"Loading\"));\n            }\n          }\n        }\n        this.$emit('change', newVal);\n        this.$emit('route', newVal);\n      }\n    },\n    /**\r\n     * @watch url\r\n     * @fires route\r\n     */\n    url(newVal) {\n      if (this.ready && newVal && newVal !== this.currentURL) {\n        //bbn.fn.log(\"URL CHANGED FROM WATCHER TO \" + newVal);\n        this.route(newVal);\n      }\n    },\n    /**\r\n     * @watch dirty\r\n     */\n    isDirty(v) {\n      if (this.parentContainer) {\n        this.parentContainer.dirty = v;\n      }\n    },\n    /**\r\n     * @watch itsMaster\r\n     * @fires breadcrumbWatcher\r\n     */\n    itsMaster(newVal, oldVal) {\n      if (this.nav && newVal !== oldVal) {\n        this.isBreadcrumb = newVal ? newVal.isBreadcrumb : this.breadcrumb;\n        if (this.breadcrumbWatcher) {\n          this.breadcrumbWatcher();\n        }\n        if (newVal) {\n          /**\r\n           * @watch itsMaster.isBreadcrumb\r\n           */\n          this.breadcrumbWatcher = this.$watch('itsMaster.isBreadcrumb', isB => {\n            this.isBreadcrumb = isB;\n          });\n        }\n      }\n    },\n    currentPanes: {\n      deep: true,\n      handler() {\n        if (this.ready) {\n          this.setConfig();\n        }\n      }\n    },\n    breadcrumb(v) {\n      this.isBreadcrumb = v;\n    },\n    /**\r\n     * @watch isBreadcrumb\r\n     * @fires setConfig\r\n     */\n    isBreadcrumb(newVal) {\n      this.$nextTick(() => {\n        if (this.ready) {\n          this.setConfig();\n          this.onResize();\n        }\n      });\n    },\n    /**\r\n     * @watch isVisual\r\n     * @fires setConfig\r\n     */\n    isVisual(v) {\n      this.$nextTick(() => {\n        if (this.ready) {\n          this.setConfig();\n          this.onResize();\n        }\n      });\n    },\n    source(v, ov) {\n      _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.each(v, a => {\n        if (!_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.isString(a.url)) {\n          throw new Error(_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._(\"The container must have a valid URL\"));\n        }\n\n        // Setting current if URL starts with default URL\n        if (this.currentURL && this.currentURL.indexOf(a.url) === 0) {\n          a.current = this.currentURL;\n        }\n\n        //bbn.fn.warning(bbn._(\"ADDING %s ON WATCH\", a.url));\n        this.add(a);\n      });\n    },\n    views() {\n      this.updateVisualStyleContainer();\n    }\n  },\n  components: {\n    /**\r\n     * @component listItem\r\n     */\n    listItem: {\n      template: `\n<div class=\"bbn-w-100 bbn-vmiddle bbn-bordered-bottom\"\n     style=\"height: 2.5rem\"\n     @mouseenter=\"isHover = true\"\n     @mouseleave=\"isHover = false\">\n  <div class=\"bbn-flex-width bbn-vmiddle bbn-h-100\">\n    <div class=\"bbn-vmiddle bbn-h-100\">\n      <div bbn-for=\"(p, i) in source.parents\"\n           class=\"bbn-vmiddle bbn-h-100\">\n        <div class=\"bbn-vmiddle bbn-h-100\"\n            :style=\"{\n              backgroundColor: !isHover && p.view.bcolor ? p.view.bcolor : null,\n              color: !isHover && p.view.fcolor ? p.view.fcolor : null\n            }\">\n          <div class=\"bbn-router-breadcrumb-badge-container bbn-middle\"\n              bbn-if=\"numProperties(p.view.events)\">\n            <span class=\"bbn-badge bbn-small bbn-bg-red\"\n                  bbn-text=\"numProperties(p.view.events)\"/>\n          </div>\n          <div class=\"bbn-router-breadcrumb-loader bbn-border-text\"\n              :style=\"{borderColor: p.view.fcolor || null}\"\n              bbn-show=\"p.view.loading\"/>\n          <div :class=\"['bbn-router-breadcrumb-element', 'bbn-h-100', 'bbn-vmiddle', {'bbn-router-breadcrumb-dirty': p.view.dirty}]\">\n            <span bbn-if=\"p.view.icon\"\n                  :title=\"p.view.title\"\n                  :class=\"'bbn-router-breadcrumb-element-icon bbn-h-100 bbn-vmiddle bbn-right-xsspace' + (p.view.notext ? ' bbn-lg' : ' bbn-m')\">\n              <i :class=\"p.view.icon\"/>\n            </span>\n            <span bbn-if=\"!p.view.notext\"\n                  class=\"bbn-router-breadcrumb-element-text\"\n                  :title=\"p.view.title && (p.view.title.length > p.maxTitleLength) ? p.view.title : ''\"\n                  bbn-html=\"p.view.title ? shortTitle(p) : '` + _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._('Untitled') + `'\"/>\n          </div>\n        </div>\n        <div>\n          <i class=\"nf nf-fa-angle_right bbn-hsmargin bbn-router-breadcrumb-arrow\"/>\n        </div>\n      </div>\n\n      <div class=\"bbn-vmiddle bbn-h-100\"\n          :style=\"{\n            backgroundColor: !isHover && source.view.bcolor ? source.view.bcolor : null,\n            color: !isHover && source.view.fcolor ? source.view.fcolor : null\n          }\">\n        <div class=\"bbn-router-breadcrumb-badge-container bbn-middle\"\n             bbn-if=\"numProperties(source.view.events)\">\n          <span class=\"bbn-badge bbn-small bbn-bg-red\"\n                bbn-text=\"numProperties(source.view.events)\"/>\n        </div>\n        <div class=\"bbn-router-breadcrumb-loader bbn-border-text\"\n             :style=\"{borderColor: source.view.fcolor || null}\"\n             bbn-show=\"source.view.loading\"/>\n        <div :class=\"['bbn-router-breadcrumb-element', 'bbn-h-100', 'bbn-vmiddle', {'bbn-router-breadcrumb-dirty': source.view.dirty}]\">\n          <span bbn-if=\"source.view.icon\"\n                :title=\"source.view.title\"\n                :class=\"'bbn-router-breadcrumb-element-icon bbn-h-100 bbn-vmiddle bbn-right-xsspace' + (source.view.notext ? ' bbn-lg' : ' bbn-m')\">\n            <i :class=\"source.view.icon\"/>\n          </span>\n          <span bbn-if=\"!source.view.notext\"\n                class=\"bbn-router-breadcrumb-element-text\"\n                :title=\"source.view.title && (source.view.title.length > source.maxTitleLength) ? source.view.title : ''\"\n                bbn-html=\"source.view.title ? (source.parents.length? shortTitle(source): source.view.title) : '` + _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._('Untitled') + `'\"/>\n        </div>\n      </div>\n\n      <div bbn-for=\"(p, i) in source.children\"\n           class=\"bbn-vmiddle bbn-h-100\">\n        <div>\n          <i class=\"nf nf-fa-angle_right bbn-hsmargin bbn-large bbn-router-breadcrumb-arrow\"/>\n        </div>\n        <div class=\"bbn-vmiddle bbn-h-100\"\n             :style=\"{\n               backgroundColor: !isHover && p.view.bcolor ? p.view.bcolor : null,\n               color: !isHover && p.view.fcolor ? p.view.fcolor : null\n             }\">\n          <div class=\"bbn-router-breadcrumb-badge-container bbn-middle\"\n              bbn-if=\"numProperties(p.view.events)\">\n            <span class=\"bbn-badge bbn-small bbn-bg-red\"\n                  bbn-text=\"numProperties(p.view.events)\"/>\n          </div>\n          <div class=\"bbn-router-breadcrumb-loader bbn-border-text\"\n              :style=\"{borderColor: p.view.fcolor || null}\"\n              bbn-show=\"p.view.loading\"/>\n          <div :class=\"['bbn-router-breadcrumb-element', 'bbn-h-100', 'bbn-vmiddle', {'bbn-router-breadcrumb-dirty': p.view.dirty}]\">\n            <span bbn-if=\"p.view.icon\"\n                  :title=\"p.view.title\"\n                  :class=\"'bbn-router-breadcrumb-element-icon bbn-h-100 bbn-vmiddle bbn-right-xsspace' + (p.view.notext ? ' bbn-lg' : ' bbn-m')\">\n              <i :class=\"p.view.icon\"/>\n            </span>\n            <span bbn-if=\"!p.view.notext\"\n                  class=\"bbn-router-breadcrumb-element-text\"\n                  :title=\"p.view.title && (p.view.title.length > p.maxTitleLength) ? p.view.title : ''\"\n                  bbn-html=\"p.view.title ? shortTitle(p) : '` + _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"]._('Untitled') + `'\"/>\n             </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"bbn-flex-fill bbn-h-100\"\n         :style=\"!isHover ? lastColors : {}\">\n      &nbsp;\n    </div>\n    <div bbn-if=\"!source.view.fixed\"\n          class=\"bbn-vmiddle bbn-h-100 bbn-hpadded\"\n          @mousedown.prevent.stop=\"close\"\n          @mouseup.prevent.stop\n          :style=\"!isHover ? lastColors : {}\">\n      <i class=\"nf nf-fa-times_rectangle\"/>\n    </div>\n  </div>\n</div>\n        `,\n      props: {\n        /**\r\n         * @prop {Object} source\r\n         * @memberof listItem\r\n         */\n        source: {\n          type: Object,\n          required: true\n        }\n      },\n      data() {\n        return {\n          isHover: false\n        };\n      },\n      computed: {\n        lastColors() {\n          let e = this.source.children.length ? this.source.children[this.source.children.length - 1].view : this.source.view;\n          let r = {};\n          if (e.bcolor) {\n            r.backgroundColor = e.bcolor;\n          }\n          if (e.fcolor) {\n            r.color = e.fcolor;\n          }\n          return r;\n        }\n      },\n      methods: {\n        numProperties: _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.numProperties,\n        /**\r\n         * @method close\r\n         * @memberof listItem\r\n         */\n        close() {\n          let k = this.source.key;\n          if (this.source.closeAction()) {\n            let list = this.closest('bbn-list');\n            if (_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].cp.isComponent(list) && list.source) {\n              let idx = _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.search(list.source, {\n                'data.key': k\n              });\n              if (idx > -1) {\n                list.source.splice(idx, 1);\n                if (list.source.length) {\n                  list.updateData();\n                  this.$nextTick(() => {\n                    list.closest('bbn-floater').onResize(true);\n                  });\n                } else {\n                  this.closest('bbn-floater').close();\n                }\n              }\n            }\n          }\n        },\n        shortTitle(src) {\n          return src.view.title.length > src.maxTitleLength ? _bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].fn.shorten(src.view.title, src.maxTitleLength) : src.view.title;\n        }\n      }\n    },\n    searchResult: {\n      template: `\n<div class=\"bbn-router-search-result bbn-w-100 bbn-spadded bbn-default-alt-background bbn-p bbn-hover-effect-element\"\n     :style=\"{backgroundColor: source.bcolor, color: source.fcolor}\">\n  <div class=\"bbn-flex-width\">\n    <div class=\"bbn-flex-fill bbn-nowrap bbn-ellipsis\">\n      <span class=\"bbn-s bbn-badge bbn-bg-blue\"\n            bbn-text=\"source.score\"/>\n      <span bbn-text=\"_('Opened container')\"/>\n      <em bbn-text=\"'URL: ' + source.url\"></em><br>\n      <span class=\"bbn-lg\" bbn-text=\"source.title\"></span>\n    </div>\n    <div class=\"bbn-hlpadded bbn-h-100 bbn-r\"\n          style=\"vertical-align: middle\"\n          bbn-html=\"source.match\">\n    </div>\n  </div>\n</div>\n`,\n      props: {\n        source: {\n          type: Object,\n          required: true\n        }\n      }\n    }\n  }\n};\n\n\n\nlet cpLang = {};\nif (_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].env.lang) {\n  try {\n    cpLang = await __webpack_require__(\"./src/components/router lazy recursive ^\\\\.\\\\/router\\\\..*\\\\.lang$\")(`./router.${_bbn_bbn__WEBPACK_IMPORTED_MODULE_13__[\"default\"].env.lang}.lang`);\n    if (cpLang.default) {\n      cpLang = cpLang.default;\n    }\n  } catch (err) {}\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'bbn-router',\n  definition: cpDef,\n  template: _router_html__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  style: _router_less__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n  lang: cpLang\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/router.js?");

/***/ })

}]);