"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/table-_mixins-filter-js"],{

/***/ "./src/components/table/_mixins/filter.js":
/*!************************************************!*\
  !*** ./src/components/table/_mixins/filter.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data() {\n    return {\n      /**\n       * @data {Boolean} [false] editedFilter\n       */\n      editedFilter: false,\n      /**\n       * @data {Number} [0] floatingFilterX\n       */\n      floatingFilterX: 0,\n      /**\n       * @data {Number} [0] floatingFilterY\n       */\n      floatingFilterY: 0,\n      /**\n       * @data {Number} [0] floatingFilterTimeOut\n       */\n      floatingFilterTimeOut: 0,\n      /**\n       * @data [null] filterElement\n       */\n      filterElement: null\n    };\n  },\n  methods: {\n    /**\n     * Returns true if the table has currentFilters defined for the given column.\n     * @method hasFilter\n     * @param {Object} col The column\n     * @returns {Boolean}\n     */\n    hasFilter(col) {\n      if (col.field) {\n        for (let i = 0; i < this.currentFilters.conditions.length; i++) {\n          if (this.currentFilters.conditions[i].field === col.field) {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n    /**\n     * Handles the floatingFilterTimeOut.\n     * @method checkFilterWindow\n     * @param {Event} e\n     */\n    checkFilterWindow(e) {\n      if (this.currentFilter) {\n        if (this.floatingFilterTimeOut) {\n          clearTimeout(this.floatingFilterTimeOut);\n        }\n        if (e.clientX < this.floatingFilterX || e.clientX > this.floatingFilterX + 600 || e.clientY < this.floatingFilterY || e.clientY > this.floatingFilterY + 200) {\n          if (!this.floatingFilterTimeOut) {\n            this.floatingFilterTimeOut = setTimeout(() => {\n              this.currentFilter = false;\n              this.editedFilter = false;\n            }, 500);\n          }\n        } else {\n          this.floatingFilterTimeOut = 0;\n        }\n      }\n    },\n    /**\n     * Returns the options for the bind of the table filter.\n     *\n     * @method getFilterOptions\n     * @fires getColFilters\n     * @returns {Object}\n     */\n    getFilterOptions() {\n      if (this.currentFilter) {\n        let o = this.editorGetComponentOptions(this.currentFilter);\n        if (o.field) {\n          o.conditions = this.getColFilters(this.currentFilter);\n        }\n        if (o.conditions.length) {\n          o.value = o.conditions[0].value;\n          o.operator = o.conditions[0].operator;\n          this.editedFilter = o.conditions[0];\n        }\n        o.multi = false;\n        return o;\n      }\n    },\n    /**\n     * Opens the popup containing the multifilter.\n     * @method openMultiFilter\n     */\n    openMultiFilter() {\n      this.currentFilter = false;\n      let table = this;\n      this.getPopup({\n        label: bbn._('Multiple filters'),\n        component: {\n          template: `<bbn-scroll><bbn-filter bbn-bind=\"source\" @change=\"changeConditions\" :multi=\"true\"></bbn-filter></bbn-scroll>`,\n          props: ['source'],\n          methods: {\n            changeConditions(o) {\n              table.currentFilters.logic = o.logic;\n              table.currentFilters.conditions = o.conditions;\n            }\n          }\n        },\n        width: '90%',\n        height: '90%',\n        source: {\n          fields: bbn.fn.filter(this.cols, a => {\n            return a.filterable !== false && !a.buttons;\n          }),\n          conditions: this.currentFilters.conditions,\n          logic: this.currentFilters.logic\n        }\n      });\n    },\n    /**\n     * Returns the filter of the given column.\n     * @method getColFilters\n     * @param {Object} col\n     * @returns {Object}\n     */\n    getColFilters(col) {\n      let r = [];\n      if (col.field) {\n        bbn.fn.each(this.currentFilters.conditions, a => {\n          if (a.field === col.field) {\n            r.push(a);\n          }\n        });\n      }\n      return r;\n    },\n    /**\n     * Shows the filter of the column.\n     * @method showFilter\n     * @param {Object} col\n     * @param {Event} ev\n     */\n    showFilter(col, ev) {\n      //bbn.fn.log(ev);\n      this.filterElement = ev.target;\n      this.floatingFilterX = ev.pageX - 10 < 0 ? 0 : ev.pageX - 10 + 600 > this.$el.clientWidth ? this.$el.clientWidth - 600 : ev.pageX - 10;\n      this.floatingFilterY = ev.pageY - 10 < 0 ? 0 : ev.pageY - 10 + 200 > this.$el.clientHeight ? this.$el.clientHeight - 200 : ev.pageY - 10;\n      this.currentFilter = col;\n    },\n    /**\n     * Returns true if the filter should be shown on the given column.\n     * @method showFilterOnColumn\n     * @param {Object} col\n     * @returns {Boolean}\n     */\n    showFilterOnColumn(col) {\n      if (!this.filterable || col.filterable === false || col.hideFilter) {\n        return false;\n      }\n      if (col.filterable === true) {\n        return true;\n      }\n      return !col.buttons && col.field;\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/filter.js?");

/***/ })

}]);