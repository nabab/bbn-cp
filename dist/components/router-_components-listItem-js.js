"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/router-_components-listItem-js"],{

/***/ "./src/components/router/_components/listItem.js":
/*!*******************************************************!*\
  !*** ./src/components/router/_components/listItem.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  template: `\n  <div class=\"bbn-w-100 bbn-vmiddle bbn-border-bottom\"\n       style=\"height: 2.5rem\"\n       @mouseenter=\"isHover = true\"\n       @mouseleave=\"isHover = false\">\n    <div class=\"bbn-flex-width bbn-vmiddle bbn-h-100\">\n      <div class=\"bbn-vmiddle bbn-h-100\">\n        <div bbn-for=\"(p, i) in source.parents\"\n             class=\"bbn-vmiddle bbn-h-100\">\n          <div class=\"bbn-vmiddle bbn-h-100\"\n              :style=\"{\n                backgroundColor: !isHover && p.view.bcolor ? p.view.bcolor : null,\n                color: !isHover && p.view.fcolor ? p.view.fcolor : null\n              }\">\n            <div class=\"bbn-router-breadcrumb-badge-container bbn-middle\"\n                bbn-if=\"numProperties(p.view.events)\">\n              <span class=\"bbn-badge bbn-small bbn-bg-red\"\n                    bbn-text=\"numProperties(p.view.events)\"/>\n            </div>\n            <div class=\"bbn-router-breadcrumb-loader bbn-border-text\"\n                :style=\"{borderColor: p.view.fcolor || null}\"\n                bbn-show=\"p.view.loading\"/>\n            <div :class=\"['bbn-router-breadcrumb-element', 'bbn-h-100', 'bbn-vmiddle', {'bbn-router-breadcrumb-dirty': p.view.dirty}]\">\n              <span bbn-if=\"p.view.icon\"\n                    :title=\"p.view.label\"\n                    :class=\"'bbn-router-breadcrumb-element-icon bbn-h-100 bbn-vmiddle bbn-right-xsspace' + (p.view.notext ? ' bbn-lg' : ' bbn-m')\">\n                <i :class=\"p.view.icon\"/>\n              </span>\n              <span bbn-if=\"!p.view.notext\"\n                    class=\"bbn-router-breadcrumb-element-text\"\n                    :title=\"p.view.label && (p.view.label.length > p.maxTitleLength) ? p.view.label : ''\"\n                    bbn-html=\"p.view.label ? shortTitle(p) : '` + bbn._('Untitled') + `'\"/>\n            </div>\n          </div>\n          <div>\n            <i class=\"nf nf-fa-angle_right bbn-hsmargin bbn-router-breadcrumb-arrow\"/>\n          </div>\n        </div>\n  \n        <div class=\"bbn-vmiddle bbn-h-100\"\n            :style=\"{\n              backgroundColor: !isHover && source.view.bcolor ? source.view.bcolor : null,\n              color: !isHover && source.view.fcolor ? source.view.fcolor : null\n            }\">\n          <div class=\"bbn-router-breadcrumb-badge-container bbn-middle\"\n               bbn-if=\"numProperties(source.view.events)\">\n            <span class=\"bbn-badge bbn-small bbn-bg-red\"\n                  bbn-text=\"numProperties(source.view.events)\"/>\n          </div>\n          <div class=\"bbn-router-breadcrumb-loader bbn-border-text\"\n               :style=\"{borderColor: source.view.fcolor || null}\"\n               bbn-show=\"source.view.loading\"/>\n          <div :class=\"['bbn-router-breadcrumb-element', 'bbn-h-100', 'bbn-vmiddle', {'bbn-router-breadcrumb-dirty': source.view.dirty}]\">\n            <span bbn-if=\"source.view.icon\"\n                  :title=\"source.view.label\"\n                  :class=\"'bbn-router-breadcrumb-element-icon bbn-h-100 bbn-vmiddle bbn-right-xsspace' + (source.view.notext ? ' bbn-lg' : ' bbn-m')\">\n              <i :class=\"source.view.icon\"/>\n            </span>\n            <span bbn-if=\"!source.view.notext\"\n                  class=\"bbn-router-breadcrumb-element-text\"\n                  :title=\"source.view.label && (source.view.label.length > source.maxTitleLength) ? source.view.label : ''\"\n                  bbn-html=\"source.view.label ? (source.parents.length? shortTitle(source): source.view.label) : '` + bbn._('Untitled') + `'\"/>\n          </div>\n        </div>\n  \n        <div bbn-for=\"(p, i) in source.children\"\n             class=\"bbn-vmiddle bbn-h-100\">\n          <div>\n            <i class=\"nf nf-fa-angle_right bbn-hsmargin bbn-large bbn-router-breadcrumb-arrow\"/>\n          </div>\n          <div class=\"bbn-vmiddle bbn-h-100\"\n               :style=\"{\n                 backgroundColor: !isHover && p.view.bcolor ? p.view.bcolor : null,\n                 color: !isHover && p.view.fcolor ? p.view.fcolor : null\n               }\">\n            <div class=\"bbn-router-breadcrumb-badge-container bbn-middle\"\n                bbn-if=\"numProperties(p.view.events)\">\n              <span class=\"bbn-badge bbn-small bbn-bg-red\"\n                    bbn-text=\"numProperties(p.view.events)\"/>\n            </div>\n            <div class=\"bbn-router-breadcrumb-loader bbn-border-text\"\n                :style=\"{borderColor: p.view.fcolor || null}\"\n                bbn-show=\"p.view.loading\"/>\n            <div :class=\"['bbn-router-breadcrumb-element', 'bbn-h-100', 'bbn-vmiddle', {'bbn-router-breadcrumb-dirty': p.view.dirty}]\">\n              <span bbn-if=\"p.view.icon\"\n                    :title=\"p.view.label\"\n                    :class=\"'bbn-router-breadcrumb-element-icon bbn-h-100 bbn-vmiddle bbn-right-xsspace' + (p.view.notext ? ' bbn-lg' : ' bbn-m')\">\n                <i :class=\"p.view.icon\"/>\n              </span>\n              <span bbn-if=\"!p.view.notext\"\n                    class=\"bbn-router-breadcrumb-element-text\"\n                    :title=\"p.view.label && (p.view.label.length > p.maxTitleLength) ? p.view.label : ''\"\n                    bbn-html=\"p.view.label ? shortTitle(p) : '` + bbn._('Untitled') + `'\"/>\n               </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"bbn-flex-fill bbn-h-100\"\n           :style=\"!isHover ? lastColors : {}\">\n        &nbsp;\n      </div>\n      <div bbn-if=\"!source.view.fixed\"\n            class=\"bbn-vmiddle bbn-h-100 bbn-hpadding\"\n            @mousedown.prevent.stop=\"close\"\n            @mouseup.prevent.stop\n            :style=\"!isHover ? lastColors : {}\">\n        <i class=\"nf nf-fa-times_rectangle\"/>\n      </div>\n    </div>\n  </div>\n    `,\n  props: {\n    /**\n     * @prop {Object} source\n     * @memberof listItem\n     */\n    source: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isHover: false\n    };\n  },\n  computed: {\n    lastColors() {\n      let e = this.source.children.length ? this.source.children[this.source.children.length - 1].view : this.source.view;\n      let r = {};\n      if (e.bcolor) {\n        r.backgroundColor = e.bcolor;\n      }\n      if (e.fcolor) {\n        r.color = e.fcolor;\n      }\n      return r;\n    }\n  },\n  methods: {\n    numProperties: bbn.fn.numProperties,\n    /**\n     * @method close\n     * @memberof listItem\n     */\n    close() {\n      let k = this.source.key;\n      if (this.source.closeAction()) {\n        let list = this.closest('bbn-list');\n        if (bbn.cp.isComponent(list) && list.source) {\n          let idx = bbn.fn.search(list.source, {\n            'data.key': k\n          });\n          if (idx > -1) {\n            list.source.splice(idx, 1);\n            if (list.source.length) {\n              list.updateData();\n              this.$nextTick(() => {\n                list.closest('bbn-floater').onResize(true);\n              });\n            } else {\n              this.closest('bbn-floater').close();\n            }\n          }\n        }\n      }\n    },\n    shortTitle(src) {\n      return src.view.label.length > src.maxTitleLength ? bbn.fn.shorten(src.view.label, src.maxTitleLength) : src.view.label;\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/router/_components/listItem.js?");

/***/ })

}]);