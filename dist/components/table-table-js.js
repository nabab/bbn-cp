/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_bbn_bbn_cp"] = self["webpackChunk_bbn_bbn_cp"] || []).push([["components/table-table-js"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/table/table.less":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/table/table.less ***!
  \**********************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.bbn-table table:first-of-type {\n  border-collapse: separate;\n  outline: 0;\n  width: auto;\n  table-layout: fixed;\n  border-spacing: 0px;\n  padding: 0px;\n}\n.bbn-table table:first-of-type > thead > tr {\n  height: 2rem;\n}\n.bbn-table table:first-of-type > thead > tr.bbn-table-tr-titles > th,\n.bbn-table table:first-of-type > thead > tr.bbn-table-tr-groups-titles > th {\n  position: sticky;\n  top: 0px;\n  z-index: 3;\n}\n.bbn-table table:first-of-type > thead > tr.bbn-table-tr-titles > th.bbn-table-fixed-cell-left,\n.bbn-table table:first-of-type > thead > tr.bbn-table-tr-groups-titles > th.bbn-table-fixed-cell-left,\n.bbn-table table:first-of-type > thead > tr.bbn-table-tr-titles > th.bbn-table-fixed-cell-right,\n.bbn-table table:first-of-type > thead > tr.bbn-table-tr-groups-titles > th.bbn-table-fixed-cell-right {\n  z-index: 4;\n}\n.bbn-table table:first-of-type > thead > tr.bbn-table-tr-groups-titles + tr.bbn-table-tr-titles th {\n  top: 2rem;\n}\n.bbn-table table:first-of-type > thead > tr > th {\n  border-top: 0px;\n  position: relative;\n  padding: 0.5rem;\n  font-weight: bold;\n}\n.bbn-table table:first-of-type > thead > tr > th:not(.bbn-table-fixed-cell-left-last) {\n  border-right: 0px;\n}\n.bbn-table table:first-of-type > thead > tr > th > span {\n  vertical-align: super;\n}\n.bbn-table table:first-of-type > thead > tr > th,\n.bbn-table table:first-of-type > tbody > tr > td {\n  border-color: var(--default-border);\n  border-width: var(--default-border-width);\n  border-style: var(--default-border-style);\n  border-collapse: collapse;\n}\n.bbn-table table:first-of-type > thead > tr > th.bbn-table-fixed-cell,\n.bbn-table table:first-of-type > tbody > tr > td.bbn-table-fixed-cell {\n  position: sticky;\n  position: -webkit-sticky;\n  z-index: 1;\n}\n.bbn-table table:first-of-type > thead > tr > th.bbn-table-fixed-cell.bbn-table-fixed-cell-left:not(.bbn-table-fixed-cell-left-last),\n.bbn-table table:first-of-type > tbody > tr > td.bbn-table-fixed-cell.bbn-table-fixed-cell-left:not(.bbn-table-fixed-cell-left-last),\n.bbn-table table:first-of-type > thead > tr > th.bbn-table-fixed-cell.bbn-table-fixed-cell-right,\n.bbn-table table:first-of-type > tbody > tr > td.bbn-table-fixed-cell.bbn-table-fixed-cell-right {\n  border-right: 0px;\n}\n.bbn-table table:first-of-type > thead > tr > th:not(.bbn-table-fixed-cell):not(:last-child),\n.bbn-table table:first-of-type > tbody > tr > td:not(.bbn-table-fixed-cell):not(:last-child) {\n  border-right: 0px;\n}\n.bbn-table table:first-of-type > thead > tr > th.bbn-table-cell-first,\n.bbn-table table:first-of-type > tbody > tr > td.bbn-table-cell-first {\n  border-left: 0px;\n}\n.bbn-table table:first-of-type > thead > tr > th:last-of-type,\n.bbn-table table:first-of-type > tbody > tr > td:last-of-type {\n  border-right: 0px;\n}\n.bbn-table table:first-of-type > thead > tr > th:first-of-type,\n.bbn-table table:first-of-type > tbody > tr > td:first-of-type {\n  border-left: 0px;\n}\n.bbn-table table:first-of-type > tbody > tr > td {\n  background-color: var(--default-background);\n}\n.bbn-table table:first-of-type > tbody > tr {\n  min-height: 1.5rem;\n  border: 0;\n}\n.bbn-table table:first-of-type > tbody > tr:hover > td {\n  background: none, linear-gradient(to bottom, var(--effect) 0%, rgba(255, 255, 255, 0) 100%) 50% 50% repeat var(--default-background);\n}\n.bbn-table table:first-of-type > tbody > tr.bbn-alt > td {\n  background-color: var(--alt-background);\n}\n.bbn-table table:first-of-type > tbody > tr.bbn-alt:hover td {\n  background: none, linear-gradient(to bottom, var(--effect) 0%, rgba(255, 255, 255, 0) 100%) 50% 50% repeat var(--alt-background);\n}\n.bbn-table table:first-of-type > tbody > tr.bbn-widget {\n  box-sizing: border-box;\n  border-left-width: 0;\n  border-right-width: 0;\n}\n.bbn-table table:first-of-type > tbody > tr:last-child > td {\n  border-bottom: 0px;\n}\n.bbn-table table:first-of-type > tbody > tr > td {\n  overflow: hidden;\n  box-sizing: border-box;\n  border-top: 0px;\n}\n.bbn-table table:first-of-type > tbody > tr > td.bbn-table-fixed-cell {\n  z-index: 3;\n}\n.bbn-table table:first-of-type > tbody > tr > td > div {\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n  word-break: break-word;\n  box-sizing: border-box;\n}\n.bbn-table table:first-of-type > tbody > tr > td > div > .bbn-table-expander {\n  line-height: 1rem;\n}\n.bbn-table table:first-of-type > tbody > tr > td > div > .bbn-table-expander i:focus {\n  color: red;\n  outline: 0;\n}\n.bbn-table table:first-of-type > tbody > tr > td > div .bbn-table-dirty {\n  width: 0px;\n  height: 0px;\n  border-style: solid;\n  border-width: 3px;\n  border-color: red transparent transparent red;\n  padding: 0;\n}\n.bbn-table table:first-of-type > tbody > tr > td > div .bbn-table-dirty:before {\n  content: \"\\\\a0\";\n  display: inline-block;\n  width: 0;\n  float: left;\n}\n.bbn-table table:first-of-type > tbody > tr > td.bbn-buttons-flex .bbn-block div {\n  display: flex!important;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n.bbn-table table:first-of-type > tbody > tr > td.bbn-buttons-flex .bbn-block div .bbn-button.bbn-button-icon-only {\n  margin: 0.1rem 0.1rem !important;\n  height: 2rem;\n  width: 2rem;\n}\n.bbn-table table:first-of-type > tbody > tr > td.bbn-buttons-flex.bbn-c .bbn-block div {\n  justify-content: center;\n}\n.bbn-table table:first-of-type > tbody > tr > td.bbn-buttons-flex.bbn-r .bbn-block div {\n  justify-content: flex-end;\n}\n.bbn-table .bbn-table-toolbar .bbn-header {\n  border-top: 0;\n  border-right: 0;\n  border-left: 0;\n}\n.bbn-table .bbn-table-container {\n  z-index: 0;\n  overflow: hidden;\n}\n.bbn-table .bbn-table-container .bbn-scrollbar {\n  z-index: 2;\n}\n.bbn-table > div.bbn-table-footer {\n  clear: both;\n  overflow: hidden;\n  position: relative;\n  border-style: solid;\n  border-width: 0.0833rem;\n  line-height: 2rem;\n  padding: 0.333rem 0.25rem;\n}\n.bbn-table .toolbar-buttons {\n  padding: 0.3rem 0;\n}\n.bbn-table .toolbar-buttons button {\n  margin: 0 0.3rem;\n}\n.bbn-table-column-picker ul {\n  list-style: none;\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/table.less?./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/components/table/_i18n lazy recursive ^\\.\\/table\\..*\\.lang$":
/*!****************************************************************************************!*\
  !*** ./src/components/table/_i18n/ lazy ^\.\/table\..*\.lang$ strict namespace object ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./table.fr.lang\": [\n\t\t\"./src/components/table/_i18n/table.fr.lang\",\n\t\t\"src_components_table__i18n_table_fr_lang\"\n\t],\n\t\"./table.it.lang\": [\n\t\t\"./src/components/table/_i18n/table.it.lang\",\n\t\t\"src_components_table__i18n_table_it_lang\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src/components/table/_i18n lazy recursive ^\\\\.\\\\/table\\\\..*\\\\.lang$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_i18n/_lazy_^\\.\\/table\\..*\\.lang$_strict_namespace_object?");

/***/ }),

/***/ "./src/components/table/_mixins/aggregation.js":
/*!*****************************************************!*\
  !*** ./src/components/table/_mixins/aggregation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bbn/bbn */ \"./node_modules/@bbn/bbn/dist/index.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * @todo desc\n     * @prop {Object} [{tot: 'Total',med: 'Average',num: 'Count',max: 'Maximum',min: 'Minimum'}] aggregateExp\n     */\n    aggregateExp: {\n      type: Object,\n      default() {\n        return {\n          tot: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('Total'),\n          med: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('Average'),\n          num: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('Count'),\n          max: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('Maximum'),\n          min: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('Minimum')\n        };\n      }\n    },\n    /**\n     * @prop {String|Array} aggregate\n     */\n    aggregate: {\n      type: [String, Array]\n    }\n  },\n  data() {\n    return {\n      /**\n       * @data {Boolean} [false] isAggregated\n       */\n      isAggregated: false,\n      /**\n       * @data {Array} [[]] aggregatedColumns\n       */\n      aggregatedColumns: [],\n      aggregationResult: null\n    };\n  },\n  methods: {\n    /**\n     * Return true if the cell is before aggregated cells.\n     * @method isBeforeAggregated\n     * @param {Number} groupIndex\n     * @param {Number} idx\n     * @returns {Boolean}\n     */\n    isBeforeAggregated(groupIndex, idx) {\n      return this.isAggregated && (this.groupCols[groupIndex].cols[idx + 1] && this.groupCols[groupIndex].cols[idx + 1].field === this.isAggregated || !this.groupCols[groupIndex].cols[idx + 1] && this.groupCols[groupIndex + 1] && this.groupCols[groupIndex + 1].cols[0] && this.groupCols[groupIndex + 1].cols[0].field === this.isAggregated);\n    },\n    updateAggregation() {\n      // Aggregated\n      if (this.isAggregated) {\n        const aggregates = {};\n        const aggregateModes = [];\n        let aggIndex = 0;\n        let i = 0;\n        const data = this.filteredData;\n        aggregateModes = _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.isArray(this.aggregate) ? this.aggregate : [this.aggregate];\n        _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.each(this.aggregatedColumns, a => {\n          aggregates[a.field] = {\n            tot: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.sum(data, a.field),\n            num: data.length,\n            min: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.min(data, a.field),\n            max: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.max(data, a.field),\n            groups: []\n          };\n          const uniqueValues = _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.unique(data.map(d => d.data[a.field]));\n          _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.each(uniqueValues, uv => {\n            const filteredData = data.filter(d => d.data[a.field] === uv);\n            aggregates[a.field].groups.push({\n              value: uv,\n              tot: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.sum(filteredData, a.field),\n              num: filteredData.length,\n              min: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.min(filteredData, a.field),\n              max: _bbn_bbn__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fn.max(filteredData, a.field)\n            });\n          });\n        });\n        this.aggregationResult = aggregates;\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/aggregation.js?");

/***/ }),

/***/ "./src/components/table/_mixins/buttons.js":
/*!*************************************************!*\
  !*** ./src/components/table/_mixins/buttons.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * Shows the footer's arrows as buttons\n     * @prop {Boolean} [true] footerButtons\n     */\n    footerButtons: {\n      type: Boolean,\n      default() {\n        return !bbn.fn.isMobile() || bbn.fn.isTabletDevice();\n      }\n    },\n    /**\n     * The way `buttons` should be displayed, either as buttons, dropdown or as a menu.\n     * @prop {String} ['buttons'] buttonMode\n     */\n    buttonMode: {\n      type: String,\n      default: 'buttons',\n      validator(v) {\n        return ['buttons', 'dropdown', 'menu'].includes(v);\n      }\n    },\n    /**\n     * The name of the `record` word as used in the pager interface.\n     * @prop {String} ['nf nf-md-dots_vertical'] buttonIcon\n     */\n    buttonIcon: {\n      type: String,\n      default: 'nf nf-md-dots_vertical'\n    }\n  },\n  data() {\n    return {\n      /**\n       * @data {Boolean} [false] colButtons\n       */\n      colButtons: false\n    };\n  },\n  computed: {\n    realButtons() {\n      if (this.cols.length && this.cols[this.colButtons] && this.cols[this.colButtons].buttons) {\n        if (bbn.fn.isFunction(this.cols[this.colButtons].buttons)) {\n          return this.cols[this.colButtons].buttons.bind(this.$origin);\n        } else if (bbn.fn.isArray(this.cols[this.colButtons].buttons)) {\n          let res = [];\n          bbn.fn.each(this.cols[this.colButtons].buttons, a => {\n            if (bbn.fn.isString(a)) {\n              switch (a) {\n                case 'edit':\n                  res.push({\n                    text: bbn._('Edit'),\n                    action: 'edit',\n                    icon: 'nf nf-fa-edit'\n                  });\n                  break;\n                case 'copy':\n                  res.push({\n                    text: bbn._(\"Copy\"),\n                    action: 'copy',\n                    icon: 'nf nf-fa-copy'\n                  });\n                  break;\n                case 'delete':\n                  res.push({\n                    text: bbn._(\"Delete\"),\n                    action: 'remove',\n                    icon: 'nf nf-md-close_thick'\n                  });\n                  break;\n              }\n            } else {\n              if (bbn.fn.isFunction(a.action)) {\n                a.action = a.action.bind(this.$origin);\n              }\n              res.push(a);\n            }\n          });\n          if (this.cols[this.colButtons].notext) {\n            bbn.fn.each(res, a => {\n              a.notext = true;\n              return a;\n            });\n          }\n          return res;\n        }\n      }\n      return [];\n    }\n  },\n  methods: {\n    buttonSource() {\n      if (bbn.fn.isFunction(this.realButtons)) {\n        return this.realButtons(...arguments);\n      }\n      if (bbn.fn.isArray(this.realButtons)) {\n        return this.realButtons;\n      }\n      return [];\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/buttons.js?");

/***/ }),

/***/ "./src/components/table/_mixins/config.js":
/*!************************************************!*\
  !*** ./src/components/table/_mixins/config.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * Set to true shows a save icon that allows to save the current configuration of the table at the bottom right of the table.\n     * @prop {Boolean} [false] saveable\n     */\n    saveable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * @todo desc\n     * @prop {Object} loadedConfig\n     */\n    loadedConfig: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      initialConfig: null,\n      /**\n       * The current configuration object.\n       * @data {Object} [{}] currentConfig\n       */\n      currentConfig: {},\n      /**\n       * The saved configuration.\n       * @data {Boolean} [false] savedConfig\n       */\n      savedConfig: false,\n      /**\n       * The default confuguration\n       * @data {Object} defaultConfig\n       */\n      defaultConfig: bbn.fn.extend({\n        filters: this.filters,\n        limit: this.limit,\n        order: this.order,\n        invisible: this.invisible || null\n      }, this.loadedConfig || {})\n    };\n  },\n  computed: {\n    /**\n     * Return the json string of currentConfig.\n     * @computed jsonConfig\n     * @returns {String}\n     */\n    jsonConfig() {\n      let cfg = this.currentConfig;\n      if (this.currentHidden.length > this.cols.length / 2) {\n        cfg = bbn.fn.createObject(cfg);\n        cfg.shown = this.allFields.filter(x => !cfg.invisible.includes(x));\n        //bbn.fn.log(\"WE ARE IN!!!!\", cfg);\n        delete cfg.invisible;\n      }\n      return JSON.stringify(this.currentConfig);\n    },\n    /**\n     * Return true if the saved config is identic to the jsonConfig.\n     * @computed isSaved\n     * @returns {Boolean}\n     */\n    isSaved() {\n      return this.jsonConfig === this.savedConfig;\n    },\n    /**\n     * Return true if the json string of currentConfig is different from initialConfig\n     * @computed isChanged\n     * @returns {Boolean}\n     */\n    isChanged() {\n      return this.jsonConfig !== this.initialConfig;\n    }\n  },\n  methods: {\n    initConfig() {\n      if (this.defaultConfig.invisible === null) {\n        let tmp = [];\n        let initColumn = [];\n        bbn.fn.each(this.cols, (a, i) => {\n          if (a.invisible) {\n            tmp.push(a.field || i);\n          } else if (initColumn.length <= 10) {\n            initColumn.push(i);\n          }\n        });\n        this.defaultConfig.invisible = tmp;\n      }\n      this.setConfig(false, true);\n      this.initialConfig = this.jsonConfig;\n      this.savedConfig = this.initialConfig;\n      let cfg = this.getStorage();\n      if (cfg) {\n        this.setConfig(cfg, true);\n      }\n    },\n    /**\n     * Returns the current configuration of the table.\n     * @method getConfig\n     * @returns {Object}\n     */\n    getConfig() {\n      return {\n        searchValue: this.searchValue,\n        limit: this.currentLimit,\n        order: this.currentOrder,\n        filters: this.currentFilters,\n        invisible: this.currentHidden\n      };\n    },\n    onSave() {\n      this.$emit('save', JSON.parse(this.jsonConfig));\n    },\n    /**\n     * Sets the current config of the table.\n     * @method setConfig\n     * @param {Object} cfg\n     * @param {Boolean} no_storage\n     * @fires getConfig\n     * @fires setStorage\n     */\n    setConfig(cfg, no_storage) {\n      if (cfg === false) {\n        cfg = bbn.fn.clone(this.defaultConfig);\n      } else if (cfg === true) {\n        cfg = this.getConfig();\n      }\n      if (cfg && cfg.limit) {\n        if (this.filterable && cfg.filters && this.currentFilters !== cfg.filters) {\n          this.currentFilters = cfg.filters;\n        }\n        if (this.pageable && this.currentLimit !== cfg.limit) {\n          this.currentLimit = cfg.limit;\n        }\n        if (this.search) {\n          this.searchValue = cfg.searchValue || '';\n        }\n        if (this.sortable && this.currentOrder !== cfg.order) {\n          if (bbn.fn.isObject(cfg.order)) {\n            let currentOrder = [];\n            bbn.fn.iterate(cfg.order, (v, n) => {\n              currentOrder.push({\n                field: n,\n                dir: v.toUpperCase() === 'DESC' ? 'DESC' : 'ASC'\n              });\n            });\n            this.currentOrder = currentOrder;\n          } else if (bbn.fn.isArray(cfg.order)) {\n            this.currentOrder = cfg.order;\n          }\n        }\n        if (this.showable) {\n          this.currentHidden = this.allFields.filter(x => cfg.shown && !cfg.shown.includes(x) || cfg.invisible && cfg.invisible.includes(x));\n          bbn.fn.each(this.cols, (a, i) => {\n            let isHidden = this.currentHidden.indexOf(a.field || i) > -1;\n            if (a.invisible !== isHidden) {\n              //bbn.fn.log(\"CHANGING HIDDEN\");\n              //this.cols[i].invisible = hidden;\n              this.cols[i].invisible = isHidden;\n            }\n          });\n        }\n        this.currentConfig = {\n          searchValue: this.searchValue,\n          limit: this.currentLimit,\n          order: this.currentOrder,\n          filters: this.currentFilters,\n          invisible: this.currentHidden\n        };\n        if (!no_storage) {\n          let cfg = this.currentConfig;\n          if (this.cols.length > 10 && this.currentHidden?.length > this.cols.length / 2) {\n            cfg = bbn.fn.extend({}, cfg);\n            cfg.shown = this.allFields.filter(x => !cfg.invisible.includes(x));\n            delete cfg.invisible;\n          }\n          this.setStorage(cfg);\n        }\n      }\n    },\n    /**\n     * Saves the current configuration.\n     * @method save\n     */\n    save() {\n      this.savedConfig = this.jsonConfig;\n    },\n    /**\n     * Resets configuration of the table.\n     * @method reset\n     * @param noCfg\n     * @fires setConfig\n     * @fires init\n     */\n    reset(noCfg) {\n      this.initReady = false;\n      this.$emit('reset', this);\n      if (!noCfg) {\n        this.setConfig(false);\n      }\n      this.init();\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/config.js?");

/***/ }),

/***/ "./src/components/table/_mixins/data.js":
/*!**********************************************!*\
  !*** ./src/components/table/_mixins/data.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data() {\n    return {\n      /**\n       * @data {Boolean} [false] isTableDataUpdating Will be set to true during the whole update process\n       */\n      isTableDataUpdating: false,\n      /**\n       * @data {Boolean} [false] _observerReceived\n       */\n      _observerReceived: false\n    };\n  },\n  computed: {\n    /**\n     * Return an array of objects containing the data of the row and other information about the current view of the table.\n     * @computed items\n     * @fires _checkConditionsOnValue\n     * @fires expandedValues\n     * @fires isExpanded\n     * @returns {Array}\n     */\n    items() {\n      if (!this.cols.length) {\n        return [];\n      }\n      // The final result\n      const cp = this;\n      let res = [],\n        isGroup = this.groupable && this.group !== false && this.cols[this.group] && this.cols[this.group].field,\n        groupField = isGroup ? this.cols[this.group].field : false,\n        // The group value will change each time a row has a different value on the group's column\n        currentGroupValue,\n        /* @todo Not sure of what it does ! */\n        currentLink,\n        // the data is put in a new array with its original index\n        o,\n        rowIndex = 0,\n        end = this.pageable ? this.currentLimit : this.currentData.length,\n        aggregates = {},\n        aggregateModes = [],\n        aggIndex = 0,\n        i = 0,\n        data = this.filteredData;\n      // Aggregated\n      // Paging locally\n      if (this.pageable && (!this.isAjax || !this.serverPaging)) {\n        i = this.start;\n        end = this.start + this.currentLimit > data.length ? data.length : this.start + this.currentLimit;\n      }\n      // Grouping (and sorting) locally\n      let pos;\n      if (isGroup && (this.isAjax && this.serverGrouping || !this.isAjax && this.localGrouping) && (pos = bbn.fn.search(this.currentOrder, {\n        field: this.cols[this.group].field\n      })) !== 0) {\n        // First ordering the data\n        let orders = [{\n          field: this.cols[this.group].field,\n          dir: pos > 0 ? this.currentOrder[pos].dir : 'asc'\n        }];\n        if (this.sortable && this.currentOrder.length) {\n          orders = orders.concat(JSON.parse(JSON.stringify(this.currentOrder)));\n        }\n        data = bbn.fn.multiorder(data, orders.map(item => {\n          item.field = 'data.' + item.field;\n          return item;\n        }));\n      }\n      // Sorting locally\n      else if (this.sortable && this.currentOrder.length && (!this.serverSorting || !this.isAjax)) {\n        // If there is a source, we sort based on the text (not the value), so we replace temporary the values\n        // with the text + a boundary + the value just the time of sorting\n        if (bbn.fn.count(this.cols, {\n          source: undefined\n        }, '!==')) {\n          /** @var will contain the original value of the column to reset it once the array is sorted */\n          let tmpData = {};\n          bbn.fn.each(this.cols, col => {\n            if (col.source && col.field) {\n              tmpData[col.field] = {};\n              bbn.fn.each(data, d => {\n                tmpData[col.field][d.index] = this.getProp(d.data, col.field);\n                //d.data[col.field] = d.data[col.field] ? bbn.fn.getField(col.source, col.sourceText ? col.sourceText : 'text', col.sourceValue ? col.sourceValue : 'value', d.data[col.field]) || '' : '';\n              });\n            }\n          });\n          data = bbn.fn.multiorder(data, JSON.parse(JSON.stringify(this.currentOrder)).map(item => {\n            item.field = 'data.' + item.field;\n            return item;\n          }));\n          bbn.fn.each(this.cols, col => {\n            if (col.source && col.field) {\n              bbn.fn.each(data, (d, i) => {\n                //d.data[col.field] = tmpData[col.field][d.index];\n              });\n            }\n          });\n        } else {\n          data = bbn.fn.multiorder(data, JSON.parse(JSON.stringify(this.currentOrder)).map(item => {\n            item.field = 'data.' + item.field;\n            return item;\n          }));\n        }\n      }\n      return data;\n    }\n  },\n  methods: {\n    isRowVisible(row, index) {\n      if (this.isGroupActive) {}\n    },\n    /**\n     * Refresh the current data set.\n     *\n     * @method updateData\n     * @param withoutOriginal\n     * @fires _removeTmp\n     * @fires init\n     */\n    updateData(withoutOriginal) {\n      /** Mini reset?? */\n      this.isTableDataUpdating = true;\n      this.allRowsChecked = false;\n      this.currentExpanded = [];\n      this.editedRow = false;\n      this.editedIndex = false;\n      this.$forceUpdate();\n      //bbn.fn.log('forceupdate4');\n      return bbn.cp.mixins.list.methods.updateData.apply(this, [withoutOriginal]).then(() => {\n        if (this.currentData.length && this.selection && this.currentSelected.length && !this.uid) {\n          this.currentSelected = [];\n        }\n        if (this.editable) {\n          this.originalData = JSON.parse(JSON.stringify(this.currentData.map(a => {\n            return a.data;\n          })));\n        }\n        this.isTableDataUpdating = false;\n      });\n    }\n  },\n  watch: {\n    /**\n     * Updates the data.\n     * @watch observerDirty\n     * @fires updateData\n     */\n    observerDirty(v) {\n      bbn.fn.log(\"WATCH OBSDIRY\");\n      if (v && !this.editedRow) {\n        this.confirm(_(\"The data has been modified outside, do you want to reload it?\"), () => {\n          this.observerDirty = false;\n          this.updateData();\n        });\n      }\n    },\n    /**\n     * @watch group\n     * @fires init\n     */\n    group() {\n      this.currentExpandedValues = [];\n      this.currentExpanded = [];\n      this.init();\n    },\n    items(val) {\n      if (this.expanded && !this.currentExpanded.length) {\n        this.currentExpanded = val.map(a => a.index);\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/data.js?");

/***/ }),

/***/ "./src/components/table/_mixins/edition.js":
/*!*************************************************!*\
  !*** ./src/components/table/_mixins/edition.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data() {\n    return {\n      editedIndex: false\n    };\n  },\n  methods: {\n    /**\n     * Returns true if a column is editable.\n     * @method isEditable\n     * @param {Object} row\n     * @param {Object} col\n     * @param {Number} index\n     * @returns {Boolean}\n     */\n    isEditable(row, col, index) {\n      if (!this.editable) {\n        return false;\n      }\n      if (bbn.fn.isFunction(col.editable)) {\n        return col.editable(row, col, index);\n      }\n      return col.editable !== false;\n    },\n    /**\n     * Returns true if the given row is edited.\n     * @method isEdited\n     * @param {Object} data\n     * @param {Object} col\n     * @param {Number} idx\n     * @fires isEditable\n     * @returns {Boolean}\n     */\n    isEdited(data, col, idx) {\n      return this.isEditable(data, col, idx) && this.editMode === 'inline' && this.filteredData[idx].index === this.editedIndex;\n    },\n    /**\n     * Returns an object of the default values for the different types of fields.\n     * @method defaultObject\n     * @returns {Object}\n     */\n    defaultObject() {\n      let o = {};\n      bbn.fn.iterate(bbn.cp.mixins.field.props, (v, n) => {\n        if (v.default !== undefined) {\n          o[n] = bbn.fn.isFunction(v.default) ? v.default() : v.default;\n        }\n      });\n      return o;\n    },\n    /**\n     * Normalizes the row's data.\n     * @method _defaultRow\n     * @param initialData\n     * @returns {Object}\n     */\n    _defaultRow(initialData) {\n      let res = {},\n        data = initialData ? bbn.fn.clone(initialData) : {};\n      bbn.fn.each(this.cols, function (a) {\n        if (a.field) {\n          if (data[a.field] !== undefined) {\n            res[a.field] = data[a.field];\n          } else if (a.default !== undefined) {\n            res[a.field] = bbn.fn.isFunction(a.default) ? a.default() : a.default;\n          } else if (a.nullable) {\n            res[a.field] = null;\n          } else if (a.type) {\n            switch (a.type) {\n              case 'number':\n              case 'money':\n                res[a.field] = a.min > 0 ? a.min : 0;\n                break;\n              default:\n                res[a.field] = '';\n            }\n          } else {\n            res[a.field] = '';\n          }\n          if (bbn.fn.isArray(res[a.field])) {\n            res[a.field] = res[a.field].slice();\n          } else if (res[a.field] instanceof Date) {\n            res[a.field] = new Date(res[a.field].getTime());\n          } else if (null !== res[a.field] && typeof res[a.field] === 'object') {\n            res[a.field] = bbn.fn.clone(res[a.field]);\n          }\n        }\n      });\n      return res;\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/edition.js?");

/***/ }),

/***/ "./src/components/table/_mixins/events.js":
/*!************************************************!*\
  !*** ./src/components/table/_mixins/events.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data() {\n    return {\n      /**\n       * @data {DOMElement} [undefined] focusedElement\n       */\n      focusedElement: null,\n      /**\n       * @data {Number} [0] focusedElementX Horizontal coordinate of focused element\n       */\n      focusedElementX: 0,\n      /**\n       * @data {Number} [0] focusedElementY Vertical coordinate of focused element\n       */\n      focusedElementY: 0,\n      /**\n       * @data {Boolean} [false] focusedRow\n       */\n      focusedRow: false\n    };\n  },\n  methods: {\n    /**\n     * Focuses the given row index.\n     * @method focusRow\n     * @param {Event} ev\n     * @param {Number} idx\n     */\n    focusRow(ev, idx) {\n      if (ev.target.tagName !== 'BUTTON') {\n        this.focusedRow = idx;\n      }\n    },\n    /**\n     * Blurs the given row index.\n     * @method blurRow\n     * @param {Event} ev\n     * @param {Number} idx\n     */\n    blurRow(ev, idx) {\n      if (ev.target.tagName !== 'BUTTON') {\n        this.focusedRow = false;\n      }\n    },\n    /**\n     * @method clickCell\n     * @param {Object} col\n     * @param {Number} colIndex\n     * @param {Number} dataIndex\n     * @emits click-row\n     * @emits click-cell\n     */\n    clickCell(col, colIndex, dataIndex) {\n      if (this.filteredData[dataIndex]) {\n        this.$emit('click-row', this.filteredData[dataIndex].data, dataIndex);\n        this.$emit('click-cell', col, colIndex, dataIndex);\n      }\n    },\n    /**\n     * @method dbclickCell\n     * @param {Object} col\n     * @param {Number} colIndex\n     * @param {Number} dataIndex\n     */\n    dbclickCell(col, data, itemIndex, force) {\n      if (this.zoomable && (!!col.zoomable || force)) {\n        let obj = {\n          label: col.label || col.flabel,\n          minHeight: '20%',\n          minWidth: '20%'\n        };\n        if (!!col.component) {\n          obj.component = col.component;\n          obj.source = bbn.fn.isFunction(col.mapper) ? col.mapper(data) : data;\n          obj.componentOptions = col.options;\n        } else if (bbn.fn.isFunction(col.render)) {\n          obj.content = `<div class=\"bbn-spadding\">${col.render(data, col, itemIndex)}</div>`;\n        } else if (col.field) {\n          obj.content = `<div class=\"bbn-spadding\">${getProp(data, col.field)}</div>`;\n        } else {\n          obj.content = `<div class=\"bbn-spadding\">${data.text}</div>`;\n        }\n        this.getPopup().open(obj);\n      }\n    },\n    /**\n     * Removes the focus from the given row.\n     * @param {Number} idx \n     */\n    focusout(idx) {\n      this.clickedTd = null;\n      if (idx === undefined || idx === this.focusedRow) {\n        this.focused = false;\n        //this.focusedElement = undefined;\n        setTimeout(() => {\n          if (!this.focused) {\n            this.focusedRow = false;\n          }\n        }, 50);\n      }\n    },\n    /**\n     * Focuses the given row.\n     * @param {Number} idx \n     * @param {Event} e \n     */\n    focusin(idx, e) {\n      if (!e.target.closest('td') || !e.target.closest('td').classList.contains('bbn-table-buttons') || e.target.closest('td').classList.contains('bbn-table-edit-buttons')) {\n        this.focused = true;\n        this.clickedTd = e.target;\n        //this.setFocusedElement(e)\n        if (this.focusedRow !== idx) {\n          this.focusedRow = idx;\n        }\n      }\n    },\n    setFocusedElement(ev) {\n      if (this.editable && this.editMode === 'inline' && (this.tmpRow || this.editedRow) && ev.target.tagName !== 'TR' && ev.target.tagName !== 'TD') {\n        let e = ev.target.closest('td'),\n          pos = e.getBoundingClientRect();\n        this.focuseElementX = pos.x;\n        this.focusedElementY = pos.y - pos.height;\n        this.focusedElement = ev.target;\n      }\n    },\n    /**\n     * The behavior of the component at mouseMove.\n     * @method moveMouse\n     * @param {Event} e\n     * @fires keepCool\n     * @fires checkFilterWindow\n     */\n    moveMouse(e) {\n      this.keepCool(() => {\n        this.checkFilterWindow(e);\n      }, 'moveMouse');\n    },\n    /**\n     * Prevents default if enter or tab keys are pressed.\n     * @method onKeydown\n     * @param {Event} e\n     */\n    onKeydown(e) {\n      if (this.isBatch && this.editedRow && e.which === 9 || e.which === 13) {\n        e.preventDefault();\n      }\n    }\n  },\n  watch: {\n    /**\n     * @watch focusedRow\n     * @fires isModified\n     * @fires edit\n     * @emit change\n     * @emit focus\n     * @emit focusout\n     */\n    focusedRow(newIndex, oldIndex) {\n      if (bbn.fn.isNumber(oldIndex)) {\n        this.$emit('focusout', oldIndex, this.items[oldIndex] ? this.items[oldIndex].index : undefined);\n      }\n      if (this.items[newIndex]) {\n        this.$emit('focus', this.items[newIndex].data, newIndex, this.items[newIndex].index);\n      }\n      if (this.editable && this.editMode === 'inline') {\n        if (bbn.fn.isNumber(oldIndex) && this.items[oldIndex]) {\n          let idx = this.items[oldIndex].index;\n          if (this.editedIndex === idx && (idx === -1 || this.isModified(idx))) {\n            if (this.autoSave) {\n              this.saveInline();\n            } else if (this.autoReset) {\n              this.cancel();\n            } else {\n              this.$emit('change', this.items[oldIndex].data, idx);\n            }\n          }\n        }\n        this.editedRow = false;\n        if (bbn.fn.isNumber(newIndex) && this.items[newIndex] && !this.items[newIndex].group && !this.items[newIndex].expander) {\n          let comeFromAfter = bbn.fn.isNumber(oldIndex) && newIndex === oldIndex - 1;\n          this.$nextTick(() => {\n            this.edit(this.items[newIndex].data, null, newIndex);\n            this.$nextTick(() => {\n              let ele = this.clickedTd || this.getTr(newIndex);\n              let nextInputs = ele ? ele.querySelectorAll('input') : [];\n              let nextInput;\n              bbn.fn.each(nextInputs, a => {\n                if (a.offsetWidth) {\n                  nextInput = a;\n                  if (!comeFromAfter) {\n                    return false;\n                  }\n                }\n              });\n              if (nextInput) {\n                nextInput.focus();\n              }\n            });\n          });\n        }\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/events.js?");

/***/ }),

/***/ "./src/components/table/_mixins/expand.js":
/*!************************************************!*\
  !*** ./src/components/table/_mixins/expand.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * Defines the expander of the rows.\n     * @prop  {Object|String|Function} expander\n     */\n    expander: {\n      type: [Object, String, Function]\n    },\n    /**\n     * The list of expanded rows based on a specific value (ex. group field) and not on the row index\n     * @prop {Array|Function} expandedValues\n     */\n    expandedValues: {\n      type: [Array, Function]\n    },\n    /**\n     * In a grouped table, if set to true defines that all rows will be expanded. If an array is given defines which row(s) of the table will be expanded.\n     * @prop {Boolean|Array} [[]] expanded\n     */\n    expanded: {\n      type: [Boolean, Array],\n      default() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      /**\n       * @data {Boolean} allExpanded\n       */\n      allExpanded: this.expanded === true ? true : false,\n      /**\n       * @data {Array} currentExpanded\n       */\n      currentExpanded: Array.isArray(this.expanded) ? this.expanded : [],\n      /**\n       * @data {Array} currentExpandedValues\n       */\n      currentExpandedValues: Array.isArray(this.expandedValues) ? this.expandedValues : []\n    };\n  },\n  computed: {\n    /**\n     * Returns true if an expander is defined or if the table is groupable and the group is 'number'.\n     * @computed hasExpander\n     * @returns {Boolean}\n     */\n    hasExpander() {\n      return this.expander || this.groupable && typeof this.group === 'number' && this.cols[this.group];\n    },\n    /**\n     * Indicates whether the column for the expander should be shown\n     * @computed expanderColumnVisible\n     * @returns {Boolean}\n     */\n    expanderColumnVisible() {\n      if (this.items && this.items.length) {\n        return !!this.items.filter(i => !!i.expander).length;\n      }\n      return false;\n    }\n  },\n  methods: {\n    /**\n     * Returns if the given row is expanded.\n     * @method isExpanded\n     * @param {Object} d\n     * @returns {boolean}\n     */\n    isExpanded(d, index) {\n      if (!this.expander && (this.group === false || !this.groupable)) {\n        return true;\n      }\n      if (this.expander && !this.groupable) {\n        return this.currentExpanded.includes(index);\n      }\n      if (this.groupable && this.group !== false && this.cols[this.group] && this.cols[this.group].field) {\n        if (this.getProp(d, this.cols[this.group].field) !== undefined) {\n          return this.currentExpandedValues.includes(this.getProp(d, this.cols[this.group].field));\n        }\n        return true;\n      }\n      if ((d.isGrouped || d.groupAggregated) && this.currentExpanded.includes(d.link)) {\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Toggles the expander of the row corresponding to the given idx.\n     * @method toggleExpanded\n     * @param {Number} idx\n     */\n    toggleExpanded(rowIdx) {\n      if (this.items[rowIdx]) {\n        const idx = this.items[rowIdx].index;\n        if (this.groupable && this.group !== false && this.cols[this.group] && this.cols[this.group].field && this.getProp(this.currentData[idx].data, this.cols[this.group].field) !== undefined) {\n          let groupValue = this.getProp(this.currentData[idx].data, this.cols[this.group].field);\n          let groupIndex = this.currentExpandedValues.indexOf(groupValue);\n          if (groupIndex > -1) {\n            this.currentExpandedValues.splice(groupIndex, 1);\n          } else {\n            this.currentExpandedValues.push(groupValue);\n          }\n        } else {\n          let i = this.currentExpanded.indexOf(idx);\n          if (i > -1) {\n            this.currentExpanded.splice(i, 1);\n          } else {\n            this.currentExpanded.push(idx);\n          }\n        }\n      }\n    },\n    /**\n     * Returns wheter or not the given row has the expander.\n     * @method rowHasExpander\n     * @param d\n     * @returns {Boolean}\n     */\n    rowHasExpander(d) {\n      if (this.hasExpander) {\n        if (!bbn.fn.isFunction(this.expander)) {\n          return true;\n        }\n        return !!this.expander(d);\n      }\n      return false;\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/expand.js?");

/***/ }),

/***/ "./src/components/table/_mixins/exporter.js":
/*!**************************************************!*\
  !*** ./src/components/table/_mixins/exporter.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  methods: {\n    /**\n     * Prepares the data to export the table to CSV.\n     * @method _export\n     * @returns {Array}\n     */\n    _export() {\n      let span = window.document.createElement('span');\n      let cols = {};\n      let res = [];\n      bbn.fn.each(this.currentData, a => {\n        let o = bbn.fn.clone(a.data);\n        let row = [];\n        bbn.fn.each(this.cols, b => {\n          if (!b.invisible && !b.buttons && b.field) {\n            const val = this.getProp(o, b.field);\n            if (typeof val === 'string') {\n              span.innerHTML = val;\n              row.push(span.textContent.trim());\n            } else {\n              row.push(val);\n            }\n          }\n        });\n        res.push(row);\n      });\n      return res;\n    },\n    /**\n     * Exports to csv and download the given filename.\n     * @method exportCSV\n     * @param {String} filename\n     * @param {String} valSep\n     * @param {String} rowSep\n     * @param {String} valEsc\n     * @fires _export\n     */\n    exportCSV(filename, valSep, rowSep, valEsc) {\n      let data = bbn.fn.toCSV(this._export(), valSep, rowSep, valEsc);\n      if (!filename) {\n        filename = 'export-' + bbn.fn.dateSQL().replace('/:/g', '-') + '.csv';\n      }\n      bbn.fn.downloadContent(filename, data, 'csv');\n    },\n    /**\n     * Exports to excel.\n     * @method exportExcel\n     * @fires getPostData\n     */\n    exportExcel() {\n      if (this.isAjax && !this.isLoading) {\n        if (this.pageable) {\n          this.getPopup({\n            label: bbn._('Warning'),\n            content: '<div class=\"bbn-padding bbn-c\">' + bbn._('What do you want to export?') + '</div>',\n            buttons: [{\n              label: bbn._('Cancel'),\n              action: () => {\n                this.getPopup().close();\n              }\n            }, {\n              label: bbn._('This view'),\n              action: () => {\n                bbn.fn.postOut(this.source, this.getExcelPostData(true));\n                this.getPopup().close();\n              }\n            }, {\n              label: bbn._('All'),\n              action: () => {\n                bbn.fn.postOut(this.source, this.getExcelPostData());\n                this.getPopup().close();\n              }\n            }],\n            width: 300\n          });\n        } else {\n          this.confirm(bbn._('Are you sure you want to export to Excel?'), () => {\n            bbn.fn.postOut(this.source, this.getExcelPostData());\n          });\n        }\n      }\n    },\n    /**\n     * @method getExcelPostData\n     * @param {Boolean} currentView \n     * @returns {Object}\n     */\n    getExcelPostData(currentView) {\n      let cols = bbn.fn.filter(bbn.fn.extend(true, [], this.cols), c => {\n          return this.shownFields.includes(c.field) && (c.export === undefined || !c.export.excluded) || c.export && !c.export.excluded;\n        }),\n        data = {\n          excel: {\n            fields: bbn.fn.map(cols, c => {\n              return {\n                field: c.field,\n                // check if is present a custom 'title' on column's export property\n                title: c.export?.title || c.label || '',\n                // check if is present a custom 'type' on column's export property\n                type: c.export?.type || c.type || 'string',\n                hidden: c.export?.hidden !== undefined ? c.export.hidden : !this.shownFields.includes(c.field) ? 1 : 0,\n                format: c.export?.format || null\n              };\n            })\n          },\n          // the current fields\n          fields: bbn.fn.map(cols.slice(), f => {\n            return f.field;\n          }),\n          limit: currentView ? this.currentLimit : 50000,\n          start: currentView ? this.start : 0,\n          data: this.getPostData()\n        };\n      if (this.sortable) {\n        data.order = this.currentOrder;\n      }\n      if (this.isFilterable) {\n        data.filters = this.currentFilters;\n      }\n      return data;\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/exporter.js?");

/***/ }),

/***/ "./src/components/table/_mixins/filter.js":
/*!************************************************!*\
  !*** ./src/components/table/_mixins/filter.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data() {\n    return {\n      /**\n       * @data {Boolean} [false] editedFilter\n       */\n      editedFilter: false,\n      /**\n       * @data {Number} [0] floatingFilterX\n       */\n      floatingFilterX: 0,\n      /**\n       * @data {Number} [0] floatingFilterY\n       */\n      floatingFilterY: 0,\n      /**\n       * @data {Number} [0] floatingFilterTimeOut\n       */\n      floatingFilterTimeOut: 0,\n      /**\n       * @data [null] filterElement\n       */\n      filterElement: null\n    };\n  },\n  methods: {\n    /**\n     * Returns true if the table has currentFilters defined for the given column.\n     * @method hasFilter\n     * @param {Object} col The column\n     * @returns {Boolean}\n     */\n    hasFilter(col) {\n      if (col.field) {\n        for (let i = 0; i < this.currentFilters.conditions.length; i++) {\n          if (this.currentFilters.conditions[i].field === col.field) {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n    /**\n     * Handles the floatingFilterTimeOut.\n     * @method checkFilterWindow\n     * @param {Event} e\n     */\n    checkFilterWindow(e) {\n      if (this.currentFilter) {\n        if (this.floatingFilterTimeOut) {\n          clearTimeout(this.floatingFilterTimeOut);\n        }\n        if (e.clientX < this.floatingFilterX || e.clientX > this.floatingFilterX + 600 || e.clientY < this.floatingFilterY || e.clientY > this.floatingFilterY + 200) {\n          if (!this.floatingFilterTimeOut) {\n            this.floatingFilterTimeOut = setTimeout(() => {\n              this.currentFilter = false;\n              this.editedFilter = false;\n            }, 500);\n          }\n        } else {\n          this.floatingFilterTimeOut = 0;\n        }\n      }\n    },\n    /**\n     * Returns the options for the bind of the table filter.\n     *\n     * @method getFilterOptions\n     * @fires getColFilters\n     * @returns {Object}\n     */\n    getFilterOptions() {\n      if (this.currentFilter) {\n        let o = this.editorGetComponentOptions(this.currentFilter);\n        if (o.field) {\n          o.conditions = this.getColFilters(this.currentFilter);\n        }\n        if (o.conditions.length) {\n          o.value = o.conditions[0].value;\n          o.operator = o.conditions[0].operator;\n          this.editedFilter = o.conditions[0];\n        }\n        o.multi = false;\n        return o;\n      }\n    },\n    /**\n     * Opens the popup containing the multifilter.\n     * @method openMultiFilter\n     */\n    openMultiFilter() {\n      this.currentFilter = false;\n      let table = this;\n      this.getPopup({\n        label: bbn._('Multiple filters'),\n        component: {\n          template: `<bbn-scroll><bbn-filter bbn-bind=\"source\" @change=\"changeConditions\" :multi=\"true\"></bbn-filter></bbn-scroll>`,\n          props: ['source'],\n          methods: {\n            changeConditions(o) {\n              table.currentFilters.logic = o.logic;\n              table.currentFilters.conditions = o.conditions;\n            }\n          }\n        },\n        width: '90%',\n        height: '90%',\n        source: {\n          fields: bbn.fn.filter(this.cols, a => {\n            return a.filterable !== false && !a.buttons;\n          }),\n          conditions: this.currentFilters.conditions,\n          logic: this.currentFilters.logic\n        }\n      });\n    },\n    /**\n     * Returns the filter of the given column.\n     * @method getColFilters\n     * @param {Object} col\n     * @returns {Object}\n     */\n    getColFilters(col) {\n      let r = [];\n      if (col.field) {\n        bbn.fn.each(this.currentFilters.conditions, a => {\n          if (a.field === col.field) {\n            r.push(a);\n          }\n        });\n      }\n      return r;\n    },\n    /**\n     * Shows the filter of the column.\n     * @method showFilter\n     * @param {Object} col\n     * @param {Event} ev\n     */\n    showFilter(col, ev) {\n      //bbn.fn.log(ev);\n      this.filterElement = ev.target;\n      this.floatingFilterX = ev.pageX - 10 < 0 ? 0 : ev.pageX - 10 + 600 > this.$el.clientWidth ? this.$el.clientWidth - 600 : ev.pageX - 10;\n      this.floatingFilterY = ev.pageY - 10 < 0 ? 0 : ev.pageY - 10 + 200 > this.$el.clientHeight ? this.$el.clientHeight - 200 : ev.pageY - 10;\n      this.currentFilter = col;\n    },\n    /**\n     * Returns true if the filter should be shown on the given column.\n     * @method showFilterOnColumn\n     * @param {Object} col\n     * @returns {Boolean}\n     */\n    showFilterOnColumn(col) {\n      if (!this.filterable || col.filterable === false || col.hideFilter) {\n        return false;\n      }\n      if (col.filterable === true) {\n        return true;\n      }\n      return !col.buttons && col.field;\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/filter.js?");

/***/ }),

/***/ "./src/components/table/_mixins/group.js":
/*!***********************************************!*\
  !*** ./src/components/table/_mixins/group.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * Set to true allows the table to be groupable according to the props groupBy.\n     * @prop {Boolean} [false] groupable\n     */\n    groupable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * In case of Ajax table, set to true will make an Ajax call to group the table by a field.\n     * @prop {Boolean} [true] serverGrouping\n     */\n    serverGrouping: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Set to false will make an Ajax call for the grouping.\n     * @prop {Boolean} [true] localGrouping\n     */\n    localGrouping: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * The index of the property to group by the table referred to the object of data of the row.\n     * @prop {Number} groupBy\n     */\n    groupBy: {\n      type: Number\n    },\n    /**\n     * Defines the footer for a group of rows.\n     * Allowed values ​​are the name or the object of a component or a function (to inject custom html)\n     * @prop {String|Object|Function} groupFooter\n     */\n    groupFooter: {\n      type: [String, Object, Function]\n    }\n  },\n  data() {\n    return {\n      /**\n       * @data {Boolean|Number} [false] group\n       */\n      group: this.groupBy === undefined ? false : this.groupBy\n    };\n  },\n  computed: {\n    isGroupActive() {\n      return this.groupable && this.group !== false && this.cols[this.group] && this.cols[this.group].field;\n    }\n  },\n  methods: {\n    /**\n     * Returns wheter or not the cell is grouped.\n     * @method isGroupedCell\n     * @param {Number} groupIndex\n     * @param {Object} row\n     * @returns {Boolean}\n     */\n    isGroupedCell(groupIndex, row) {\n      if (this.groupable && row.group) {\n        if (this.groupCols[0].width > 200) {\n          return groupIndex === 0;\n        } else {\n          return groupIndex === 1;\n        }\n      }\n      return false;\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/group.js?");

/***/ }),

/***/ "./src/components/table/_mixins/init.js":
/*!**********************************************!*\
  !*** ./src/components/table/_mixins/init.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data() {\n    return {\n      /**\n       * @data {Boolean} [false] initReady\n       */\n      initReady: false,\n      /**\n       * @data {Boolean} [false] groupInit\n       */\n      groupInit: false,\n      /**\n       * @data {String} [false] initStarted\n       */\n      initStarted: false\n    };\n  },\n  computed: {},\n  methods: {\n    /**\n     * Initializes the table.\n     * @method init\n     * @param {Boolean} with_data\n     * @fires updateData\n     */\n    init(with_data) {\n      //bbn.fn.warning(\"INIT TABLE\");\n      this.initStarted = true;\n      //this.setContainerMeasures();\n      //this.setResizeMeasures();\n      let numUnknown = bbn.fn.count(this.cols, a => !a.invisible && !a.width);\n      let isAggregated = false;\n      let aggregatedColIndex = false;\n      let aggregatedColTitle = false;\n      let aggregatedColumns = [];\n      const parentStyle = this.$el.offsetParent ? window.getComputedStyle(this.$el.offsetParent) : {};\n      const parentPadding = parseFloat(parentStyle?.paddingLeft || 0) + parseFloat(parentStyle?.paddingRight || 0);\n      const parentWidth = (this.$el.offsetParent ? this.$el.offsetParent.getBoundingClientRect().width : this.lastKnownCtWidth) - parentPadding;\n      this.initColumns();\n      const totalSumWidth = bbn.fn.sum(this.groupCols, 'sum');\n      const styles = window.getComputedStyle(this.$el);\n      const borderLeft = styles.getPropertyValue('border-left-width').slice(0, -2);\n      const borderRight = styles.getPropertyValue('border-right-width').slice(0, -2);\n      const toFill = parentWidth - borderLeft - borderRight - totalSumWidth;\n      this.borderLeft = borderLeft;\n      this.borderRight = borderRight;\n      // We must arrive to 100% minimum\n      if (toFill > 0) {\n        if (numUnknown) {\n          let newWidth = Math.floor(toFill / numUnknown);\n          if (newWidth < (bbn.fn.isMobile() ? this.minimumColumnWidthMobile : this.minimumColumnWidth)) {\n            newWidth = bbn.fn.isMobile() ? this.minimumColumnWidthMobile : this.minimumColumnWidth;\n          }\n          let maxPreAggregatedWidth = 0;\n          bbn.fn.each(this.cols, (a, i) => {\n            if (!a.invisible) {\n              if (!a.width) {\n                a.realWidth = newWidth + (bbn.fn.isMobile() ? this.defaultColumnWidthMobile : this.defaultColumnWidth);\n              }\n              if (isAggregated && i < aggregatedColIndex && a.realWidth >= maxPreAggregatedWidth) {\n                maxPreAggregatedWidth = a.realWidth;\n                aggregatedColTitle = a;\n              }\n            }\n          });\n        }\n        // Otherwise we dispatch it through the existing column\n        else {\n          let num = this.numVisible;\n          let ignore = 0;\n          if (this.hasExpander) {\n            num--;\n            ignore++;\n          }\n          if (this.selection) {\n            num--;\n            ignore++;\n          }\n          //let bonus = Math.floor(toFill / num * 100) / 100;\n          let bonus = toFill / num;\n          let maxPreAggregatedWidth = 0;\n          bbn.fn.each(this.cols, (a, i) => {\n            if (!a.invisible && i >= ignore) {\n              a.realWidth += bonus;\n              if (isAggregated && i < aggregatedColIndex && a.realWidth >= maxPreAggregatedWidth) {\n                maxPreAggregatedWidth = a.realWidth;\n                aggregatedColTitle = a;\n              }\n            }\n          });\n        }\n      }\n      if (aggregatedColTitle) {\n        aggregatedColTitle.isAggregatedTitle = true;\n      }\n      let sum = 0,\n        sumLeft = 0,\n        sumRight = 0;\n      bbn.fn.each(this.groupCols, (a, i) => {\n        bbn.fn.each(i !== 2 ? a.cols : a.cols.slice().reverse(), c => {\n          if (!c.invisible) {\n            sum += c.realWidth;\n            if (i === 0) {\n              c.left = sumLeft;\n              sumLeft += c.realWidth;\n            } else if (i === 2) {\n              c.right = sumRight;\n              sumRight += c.realWidth;\n            }\n          }\n        });\n        a.width = sum;\n        sum = 0;\n        sumLeft = 0;\n        sumRight = 0;\n      });\n      this.isAggregated = isAggregated;\n      this.aggregatedColumns = aggregatedColumns;\n      this.resizeWidth();\n      this.initReady = true;\n      if (with_data) {\n        this.$once('dataloaded', () => {\n          this.initStarted = false;\n          this.$emit('init', this);\n          this.resizeWidth();\n        });\n        this.updateData();\n      } else {\n        this.$nextTick(() => {\n          this.initStarted = false;\n          this.resizeWidth();\n          this.$emit('init', this);\n        });\n      }\n      //bbn.fn.log('forceupdate5');\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/init.js?");

/***/ }),

/***/ "./src/components/table/_mixins/picker.js":
/*!************************************************!*\
  !*** ./src/components/table/_mixins/picker.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  methods: {\n    /**\n     * Returns the list of the showable columns\n     * @method pickableColumnList\n     * @returns {Array}\n     */\n    pickableColumnList() {\n      return this.cols.slice().map(a => {\n        return a.showable !== false;\n      });\n    },\n    /**\n     * Opens the popup containing the column picker.\n     * @method openColumnsPicker\n     */\n    openColumnsPicker() {\n      let table = this;\n      this.getPopup({\n        label: bbn._(\"Columns' picker\"),\n        height: '90%',\n        width: '90%',\n        component: {\n          template: `\n<div class=\"bbn-table-column-picker\">\n  <bbn-form ref=\"scroll\"\n            :source=\"formData\"\n            :scrollable=\"true\"\n            :prefilled=\"true\"\n            @success=\"applyColumnsShown\">\n    <div class=\"bbn-padding\">\n      <ul bbn-if=\"source.titleGroups\">\n        <li bbn-for=\"(tg, idx) in source.titleGroups\">\n          <h3>\n            <bbn-checkbox :checked=\"allVisible(tg.value)\"\n                          @change=\"checkAll(tg.value)\"\n                          :label=\"tg.text\"/>\n          </h3>\n          <ul>\n            <li bbn-for=\"(col, i) in source.cols\"\n                bbn-if=\"!col.fixed && (col.group === tg.value) && (col.showable !== false) && (col.label || col.flabel)\">\n              <bbn-checkbox bbn-model=\"shownCols[i]\"\n                            :value=\"true\"\n                            :novalue=\"false\"\n                            :label=\"col.flabel || col.label\"\n                            :contrary=\"true\"/>\n            </li>\n          </ul>\n        </li>\n      </ul>\n      <ul bbn-else>\n        <li bbn-for=\"(col, i) in source.cols\"\n            bbn-if=\"!col.fixed && (col.showable !== false) && (col.label || col.flabel)\">\n          <bbn-checkbox bbn-model=\"shownCols[i]\"\n                        @change=\"check(col, i)\"\n                        :label=\"col.flabel || col.label\"\n                        :contrary=\"true\"/>\n        </li>\n      </ul>\n    </div>\n  </bbn-form>\n</div>\n`,\n          props: ['source'],\n          data() {\n            let shownColumns = this.source.cols.map(a => !a.invisible);\n            return {\n              table: table,\n              formData: {\n                changed: false\n              },\n              shownCols: shownColumns\n            };\n          },\n          methods: {\n            applyColumnsShown() {\n              let toShow = [];\n              let toHide = [];\n              bbn.fn.each(this.source.cols, (a, i) => {\n                if (a.invisible == this.shownCols[i]) {\n                  if (this.shownCols[i]) {\n                    toShow.push(a.field || i);\n                  } else {\n                    toHide.push(a.field || i);\n                  }\n                }\n              });\n              if (toShow.length) {\n                table.show(toShow);\n              }\n              if (toHide.length) {\n                table.show(toHide, true);\n              }\n            },\n            allVisible(group) {\n              let ok = true;\n              bbn.fn.each(this.source.cols, (a, i) => {\n                if (a.showable !== false && a.group === group && !a.fixed) {\n                  if (!this.shownCols[i]) {\n                    ok = false;\n                    return false;\n                  }\n                }\n              });\n              return ok;\n            },\n            check(col, index) {\n              this.shownCols[index] = !this.shownCols[index];\n            },\n            checkAll(group) {\n              let show = !this.allVisible(group);\n              bbn.fn.each(this.source.cols, (a, i) => {\n                if (a.showable !== false && a.group === group && !a.fixed) {\n                  if (this.shownCols[i] != show) {\n                    this.shownCols.splice(i, 1, show);\n                  }\n                }\n              });\n              this.$forceUpdate();\n            }\n          },\n          watch: {\n            shownCols: {\n              deep: true,\n              handler() {\n                this.formData.changed = true;\n              }\n            }\n          }\n        },\n        source: {\n          cols: this.cols,\n          titleGroups: this.titleGroups\n        }\n      });\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/picker.js?");

/***/ }),

/***/ "./src/components/table/_mixins/selection.js":
/*!***************************************************!*\
  !*** ./src/components/table/_mixins/selection.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  data() {\n    return {\n      allRowsChecked: false\n    };\n  },\n  computed: {\n    /**\n     * The array of selected values if the table is selectable.\n     * @computed selectedValues\n     * @returns {Array}\n     */\n    selectedValues() {\n      return this.currentSelected.map(a => {\n        return this.uid ? this.currentData[a].data[this.uid] : this.currentData[a].data;\n      });\n    }\n  },\n  methods: {\n    checkAll() {\n      this.getRef('table').querySelectorAll(':scope > tbody > tr > td[is=\"bbn-table-cell-selector\"] bbn-checkbox').forEach(a => a.check());\n    },\n    uncheckAll() {\n      this.getRef('table').querySelectorAll(':scope > tbody > tr > td[is=\"bbn-table-cell-selector\"] bbn-checkbox').forEach(a => a.uncheck());\n    },\n    /**\n     * Returns true if the given index is selected.\n     * @method isSelected\n     * @param {Number} index\n     * @returns {Boolean}\n     */\n    isSelected(index) {\n      return this.selection && (!this.uid && this.currentSelected.includes(index) || this.uid && this.currentSelected.includes(this.currentData[index].data[this.uid]));\n    },\n    /**\n     * Emits 'select',  'unselect' or 'toggle' at change of checkbox of the row in a selectable table.\n     * @method checkSelection\n     * @param {Number}  index\n     * @param {Boolean} index\n     * @emit unselect\n     * @emit select\n     * @emit toggle\n     */\n    checkSelection(index, state) {\n      if (this.cancelSelection) {\n        this.cancelSelection = false;\n        return;\n      }\n\n      // Obliged to add this otherwise there are 2 changes events canceling each other\n      if (!this.isCheckingSelection) {\n        this.isCheckingSelection = [];\n      }\n      if (!this.isCheckingSelection.includes(index)) {\n        this.isCheckingSelection.push(index);\n        const row = this.items[index];\n        if (row) {\n          if (this.groupable && row.group) {\n            if (row.expanded) {\n              bbn.fn.fori((d, i) => {\n                if (d && d.selection && this.getProp(d.data, this.cols[this.group].field) === row.value) {\n                  this.checkSelection(i, state);\n                }\n              }, this.items, index + row.num, index + 1);\n            }\n          } else if (row.selection || this.selection && (!bbn.fn.isFunction(this.selection) || this.selection(row))) {\n            const idx = this.currentSelected.indexOf(this.uid ? this.currentData[row.index].data[this.uid] : row.index);\n            const isSelected = !!state;\n            let toggled = false;\n            if (state && idx > -1) {\n              this.$emit('select', row.data);\n              toggled = true;\n            } else if (!state && idx === -1) {\n              this.$emit('unselect', row.data);\n              toggled = true;\n            }\n            /* if (idx > -1) {\n              if ([undefined, false].includes(state)) {\n                toggled = true;\n                this.$emit('unselect', row.data);\n                this.currentSelected.splice(idx, 1);\n              }\n            }\n            else if ([undefined, true].includes(state)) {\n              toggled = true;\n              this.$emit('select', row.data);\n              this.currentSelected.push(this.uid ? this.currentData[row.index].data[this.uid] : row.index);\n              isSelected = true;\n            } */\n\n            if (toggled) {\n              this.$emit('toggle', isSelected, row.data);\n            }\n          }\n        }\n        this.$nextTick(() => {\n          this.isCheckingSelection.splice(this.isCheckingSelection.indexOf(index), 1);\n        });\n      }\n    },\n    beforeSelect(index, ev, isSelected) {\n      this.$emit('beforeselect', ev, index, this.items[index], isSelected);\n    }\n  },\n  watch: {\n    allRowsChecked(v) {\n      if (v) {\n        this.checkAll();\n      } else if (!this.isTableDataUpdating) {\n        this.uncheckAll();\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/selection.js?");

/***/ }),

/***/ "./src/components/table/_mixins/size.js":
/*!**********************************************!*\
  !*** ./src/components/table/_mixins/size.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * Set to true allows the table to be resizable.\n     * @prop {Boolean} [false] resizable\n     */\n    resizable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Defines the minimum columns width.\n     * @prop {Number} [30] minimumColumnWidth\n     */\n    minimumColumnWidth: {\n      type: Number,\n      default: 20\n    },\n    /**\n     * Defines the minimum columns width for mobile devices.\n     * @prop {Number} [100] minimumColumnWidthMobile\n     */\n    minimumColumnWidthMobile: {\n      type: Number,\n      default: 100\n    },\n    /**\n     * Defines the default columns width.\n     * @prop {Number} [150] defaultColumnWidth\n     */\n    defaultColumnWidth: {\n      type: Number,\n      default: 150\n    },\n    /**\n     * The max row height value\n     * @prop {Number} maxRowHeight\n     */\n    maxRowHeight: {\n      type: Number\n    }\n  },\n  data() {\n    return {\n      /**\n       * True if the table is resizing its width\n       * @data {Boolean} [false] isResizingWidth\n       */\n      isResizingWidth: false,\n      isResizing: false\n    };\n  },\n  computed: {\n    /**\n     * The container width.\n     * @computed containerWidth\n     * @returns {String}\n     */\n    containerWidth() {\n      if (!this.groupCols || !this.groupCols[1] || !this.groupCols[1].width || !this.offsetParent?.offsetWidth) {\n        return '0px';\n      }\n      return this.offsetParent.offsetWidth - this.groupCols[0].width - this.groupCols[2].width + 'px';\n    },\n    /**\n     * The total width.\n     * @computed totalWidth\n     * @returns {String}\n     */\n    totalWidth() {\n      const sum = bbn.fn.sum(this.groupCols, 'width');\n      if (sum) {\n        return sum + 'px';\n      }\n      return '100%';\n    },\n    currentMaxRowHeight() {\n      return this.maxRowHeight ? this.maxRowHeight + 'px' : 'auto';\n    }\n  },\n  methods: {\n    onResize() {\n      bbn.cp.mixins.resizer.methods.onResize.apply(this);\n      if (this.$isMounted) {\n        this.$nextTick(() => {\n          this.resizeWidth();\n        });\n      }\n    },\n    /**\n     * Returns an object of numbers as width and height based on whatever unit given.\n     * \n     * @method getDimensions\n     * @param {Number} width\n     * @param {Number} height\n     * @return {Number}\n     */\n    getDimensionWidth(width) {\n      if (bbn.fn.isNumber(width) && width) {\n        return parseInt(width);\n      }\n      let parent = this;\n      let r = 0;\n      if (parent && width) {\n        if (!parent.insertAdjacentElement) {\n          return 0;\n        }\n        let el = document.createElement('div');\n        el.style.position = 'absolute';\n        el.style.opacity = 0;\n        el.className = 'bbn-reset';\n        el.style.width = this.formatSize(width);\n        try {\n          parent.insertAdjacentElement('beforeend', el);\n        } catch (e) {\n          bbn.fn.log(\"Error while inserting adjacent element for dimensioncalculation\", e, this.$el);\n          return 0;\n        }\n        r = el.offsetWidth || el.clientWidth || 0;\n        el.parentNode.removeChild(el);\n      }\n      return r;\n    },\n    /**\n     * Resizes the table.\n     * @method resizeWidth\n     * @returns {HTMLElement}\n     */\n    resizeWidth() {\n      if (!this.checkVisibility()) {\n        return;\n      }\n      const table = this.getRef('table');\n      if (!table) {\n        return;\n      }\n      let currentTot = this.groupCols[0].width + this.groupCols[1].width + this.groupCols[2].width;\n      let parentWidth = this.$el.offsetParent ? this.$el.offsetParent.getBoundingClientRect().width : this.$el.offsetWidth;\n      let parentStyle = this.$el.offsetParent ? window.getComputedStyle(this.$el.offsetParent) : {};\n      let parentPadding = parseFloat(parentStyle?.paddingLeft || 0) + parseFloat(parentStyle?.paddingRight || 0);\n      let diff = Math.floor(parentWidth - parentPadding - this.borderLeft - this.borderRight - currentTot);\n      let numDynCols = this.currentColumns.filter(c => c.width === undefined && !c.isExpander && !c.isSelection && !c.invisible).length;\n      let numStaticCols = this.currentColumns.filter(c => !!c.width && !c.isExpander && !c.isSelection && !c.invisible).length;\n      let newWidth = numDynCols || numStaticCols ? Math.floor(diff / (numDynCols || numStaticCols)) : 0;\n      if (newWidth) {\n        this.getRef('table').style.width = currentTot + newWidth + 'px';\n        this.isResizingWidth = true;\n        bbn.fn.each(this.groupCols, (groupCol, groupIdx) => {\n          let sum = 0,\n            sumRight = 0,\n            sumLeft = 0;\n          bbn.fn.each(groupIdx !== 2 ? groupCol.cols : groupCol.cols.slice().reverse(), col => {\n            if (!col.invisible) {\n              if (!col.isExpander && !col.isSelection && (!!numDynCols && col.width === undefined || !numDynCols && !!numStaticCols && !!col.width)) {\n                let tmp = col.realWidth + newWidth;\n                if (col.width !== undefined && (!bbn.fn.isString(col.width) || bbn.fn.isNumber(bbn.fn.substr(col.width, -1)))) {\n                  tmp = col.realWidth;\n                } else if (tmp < (bbn.fn.isMobile() ? this.minimumColumnWidthMobile : this.minimumColumnWidth)) {\n                  tmp = bbn.fn.isMobile() ? this.minimumColumnWidthMobile : this.minimumColumnWidth;\n                }\n                let minWidth = this.getDimensionWidth(col.minWidth);\n                let maxWidth = this.getDimensionWidth(col.maxWidth);\n                if (col.minWidth && tmp < minWidth) {\n                  tmp = minWidth;\n                }\n                if (col.maxWidth && tmp > maxWidth) {\n                  tmp = maxWidth;\n                }\n                col.realWidth = Math.floor(tmp);\n              }\n              sum += col.realWidth;\n              if (groupIdx === 0) {\n                col.left = sumLeft;\n                sumLeft += col.realWidth;\n              }\n              if (groupIdx === 2) {\n                col.right = sumRight;\n                sumRight += col.realWidth;\n              }\n            }\n          });\n          this.groupCols[groupIdx].width = sum;\n          sum = 0;\n          sumLeft = 0;\n          sumRight = 0;\n        });\n        this.isResizingWidth = false;\n      }\n      this.updateStyle();\n      return this;\n    },\n    /**\n     * The method called on a column resize (by user)\n     * @method onUserResize\n     * @param {Event} e\n     * @fires $forceUpdate\n     */\n    onUserResize(e) {\n      if (e.target && e.detail) {\n        let d = e.target._bbn.directives.resizable.options.data,\n          nextCol = this.groupCols[d.groupColIndex].cols[d.columnIndex + 1],\n          nextColSize = nextCol ? nextCol.realWidth + e.detail.movement : 0;\n        if (d.column.realWidth !== e.detail.size && e.detail.size >= this.defaultColumnWidth && (!nextCol || nextColSize >= this.defaultColumnWidth)) {\n          this.groupCols[d.groupColIndex].cols[d.columnIndex].realWidth = Math.floor(e.detail.size);\n          if (nextCol) {\n            this.groupCols[d.groupColIndex].cols[d.columnIndex + 1].realWidth = nextColSize;\n          }\n          this.$forceUpdate();\n        }\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/size.js?");

/***/ }),

/***/ "./src/components/table/_mixins/sort.js":
/*!**********************************************!*\
  !*** ./src/components/table/_mixins/sort.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  methods: {\n    /**\n     * Returns true if the given column is sorted.\n     * @method isSorted\n     * @param {Object} col\n     */\n    isSorted(col) {\n      if (this.sortable && col.sortable !== false && !col.buttons && col.field) {\n        let idx = bbn.fn.search(this.currentOrder, {\n          field: col.field\n        });\n        if (idx > -1) {\n          return this.currentOrder[idx];\n        }\n      }\n      return false;\n    },\n    /**\n     * Sorts the given column.\n     * @method sort\n     * @param {Object} col\n     * @fires updateData\n     */\n    sort(col) {\n      if (!this.isLoading && this.sortable && col.field && col.sortable !== false) {\n        let f = col.field,\n          pos = bbn.fn.search(this.currentOrder, {\n            field: f\n          });\n        if (pos > -1) {\n          if (this.currentOrder[pos].dir.toUpperCase() === 'ASC') {\n            this.currentOrder[pos].dir = 'DESC';\n          } else {\n            this.currentOrder.splice(0, this.currentOrder.length);\n          }\n        } else {\n          this.currentOrder.splice(0, this.currentOrder.length);\n          this.currentOrder.push({\n            field: f,\n            dir: 'ASC'\n          });\n        }\n        if (this.isAjax) {\n          this.updateData();\n        }\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/sort.js?");

/***/ }),

/***/ "./src/components/table/_mixins/style.js":
/*!***********************************************!*\
  !*** ./src/components/table/_mixins/style.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * Set to true shows a button at the bottom right of the table that opens a column picker for the table.\n     * @prop {Boolean} [false] showable\n     */\n    showable: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * A function to define css class(es) for each row.\n     * @prop {Function} trClass\n     */\n    trClass: {\n      type: [String, Function, Object]\n    },\n    /**\n     * A function to define css style(s) for each row.\n     * @prop {Function} trStyle\n     */\n    trStyle: {\n      type: [String, Function, Object]\n    },\n    titleClass: {\n      type: [String, Function, Object, Array]\n    }\n  },\n  data() {\n    return {\n      /**\n       * @data {Array} currentHidden\n       */\n      currentHidden: this.invisible || [],\n      /**\n       * @data {String} [bbn.fn.randomString().toLowerCase()] cssRuleName\n       */\n      cssRuleName: bbn.fn.randomString().toLowerCase(),\n      /**\n       * @data {String} containerPadding\n       */\n      containerPadding: (bbn.fn.getScrollBarSize() ? bbn.fn.getScrollBarSize() : '0') + 'px',\n      /**\n       * The current scroll top position.\n       * @data {Number} [0] currentScrollTop\n       */\n      currentScrollTop: 0,\n      /**\n       * @data {Number} [0] borderLeft\n       */\n      borderLeft: 0,\n      /**\n       * @data {Number} [0] borderRight\n       */\n      borderRight: 0,\n      tableStyle: ''\n    };\n  },\n  computed: {\n    /**\n     * Return the number of visible columns of the table.\n     * @computed numVisible\n     * @returns {number}\n     */\n    numVisible() {\n      return this.cols.length - bbn.fn.count(this.cols, {\n        invisible: true\n      }) + (this.hasExpander ? 1 : 0) + (this.selection ? 1 : 0);\n    }\n  },\n  methods: {\n    updateStyle() {\n      let style = `\n.bbn-table table.bbn-table-${this.cssRuleName} {\n  width: ${this.totalWidth};\n}\n.bbn-table table.bbn-table-${this.cssRuleName} > tbody > tr {\n  maxHeight: ${this.currentMaxRowHeight};\n}\n      `;\n      const headRowIndex = this.titleGroups ? 2 : 1;\n      bbn.fn.each(this.currentColumns, (a, i) => {\n        style += `\n.bbn-table table.bbn-table-${this.cssRuleName} > thead > tr:nth-of-type(${headRowIndex}) > th:nth-of-type(${i + 1}):not([colspan]),\n.bbn-table table.bbn-table-${this.cssRuleName} > tbody > tr > td:nth-of-type(${i + 1}):not([colspan]) {\n  width: ${a.realWidth};`;\n        if (bbn.fn.isNumber(a.left)) {\n          style += `\n  left: ${a.left}px;\n  position: sticky`;\n        } else if (bbn.fn.isNumber(a.right)) {\n          style += `\n  right: ${a.right}px;\n  position: sticky`;\n        }\n        style += `\n}`;\n      });\n      if (style !== this.tableStyle) {\n        this.tableStyle = style;\n        let css = document.getElementById('bbn-table-' + this.cssRuleName);\n        if (!css) {\n          css = document.createElement('style');\n          css.id = 'bbn-table-' + this.cssRuleName;\n          document.head.appendChild(css);\n        }\n        css.textContent = style;\n      }\n    }\n  },\n  watch: {\n    /**\n     * Forces the update of the component.\n     * @watch currentHidden\n     * @fires setConfig\n     */\n    currentHidden: {\n      deep: true,\n      handler() {\n        bbn.fn.log(\"WATCH HIDDDEN\");\n        if (this.ready) {\n          this.setConfig(true);\n          this.$forceUpdate();\n          //bbn.fn.log('forceupdate2');\n        }\n      }\n    }\n  },\n  beforeDestroy() {\n    const css = document.getElementById('bbn-table-' + this.cssRuleName);\n    if (css) {\n      document.head.removeChild(css);\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/style.js?");

/***/ }),

/***/ "./src/components/table/_mixins/title.js":
/*!***********************************************!*\
  !*** ./src/components/table/_mixins/title.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: {\n    /**\n     * True if the columns has to have titles.\n     * @prop {Boolean} [true] titles\n     */\n    titles: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * If the property 'group' is given to one or more columns in the table (ex: group=\"test\"), it defines the title of a group of columns. (ex: titleGroups=\"[{value: 'test', text: 'My group'}]\").\n     * @prop {Array|Function} titleGroups\n     */\n    titleGroups: {\n      type: [Array, Function]\n    }\n  }\n});\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/_mixins/title.js?");

/***/ }),

/***/ "./src/components/table/table.html":
/*!*****************************************!*\
  !*** ./src/components/table/table.html ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = `<div :class=\"[{\n    'bbn-overlay': scrollable,\n    'bbn-block': !scrollable\n  },\n  componentClass,\n  'bbn-border'\n]\">\n  <div :class=\"{\n    'bbn-overlay': scrollable,\n    'bbn-flex-height': scrollable,\n    'bbn-block': !scrollable\n  }\"\n       :style=\"scrollable && groupCols.length ? {} : {\n         width: totalWidth\n       }\"\n       bbn-if=\"cols.length\">\n    <!-- Toolbar -->\n    <div bbn-if=\"hasToolbar\"\n         class=\"bbn-table-toolbar bbn-header bbn-no-border\"\n         ref=\"toolbar\">\n      <bbn-toolbar bbn-if=\"toolbarButtons.length || (search && !bbn.fn.isString(toolbar) && !isObject(toolbar))\"\n                   :source=\"toolbarButtons\"\n                   :slot-before=\"toolbarSlotBefore\"\n                   class=\"bbn-spadding bbn-no-border-left bbn-no-border-right bbn-no-border-top\">\n        <slot name=\"toolbar\"></slot>\n        <div slot=\"right\"\n             bbn-if=\"search\"\n             class=\"bbn-hsmargin\">\n          <bbn-input :nullable=\"true\"\n                      button-right=\"nf nf-fa-search\"\n                      class=\"bbn-wide\"\n                      :placeholder=\"searchPlaceholder || _('Search in data')\"\n                      bbn-model=\"searchValue\"/>\n        </div>\n      </bbn-toolbar>\n      <div bbn-elseif=\"typeof toolbar === 'function'\"\n           bbn-html=\"toolbar()\"/>\n      <component bbn-else\n                 :is=\"toolbar\"/>\n    </div>\n    <!-- Main container -->\n    <div :class=\"['bbn-w-100', 'bbn-table-container', {'bbn-flex-fill': scrollable}]\">\n      <!--<div bbn-if=\"initStarted || isLoading\"-->\n      <div bbn-if=\"initStarted || isResizing\"\n           :class=\"[\n            'bbn-middle',\n            'bbn-background',\n            'bbn-text',\n            'bbn-padding',\n            {\n              'bbn-overlay': !!scrollable,\n              'bbn-w-100': !scrollable\n            }]\"\n           style=\"z-index: 5\">\n        <bbn-loadicon class=\"bbn-vmiddle\"\n                      :size=\"24\"/>\n        <span class=\"bbn-xl bbn-b bbn-left-sspace\"\n              bbn-text=\"_('Loading') + '...'\"/>\n      </div>\n      <bbn-scroll bbn-elseif=\"currentColumns.length\"\n                  :scrollable=\"scrollable\"\n                  :autoresize=\"false\"\n                  :class=\"{'bbn-w-100': !scrollable, 'bbn-overlay': scrollable}\"\n                  ref=\"scroll\"\n                  :disabled=\"!scrollable\"\n                  :offset-y=\"scrollOffset\"\n                  @resize=\"resizeWidth\">\n        <!-- Table -->\n        <table :style=\"{width: totalWidth}\"\n               ref=\"table\"\n               aria-describedby=\"table\"\n               :class=\"['bbn-table-' + cssRuleName, 'bbn-table-table']\">\n          <!-- Colgroups -->\n          <colgroup bbn-for=\"(groupCol, groupIndex) in groupCols\"\n                    bbn-if=\"groupCol.cols.length\">\n            <col bbn-for=\"(col, i) in groupCol.cols\"\n                bbn-show=\"!col.invisible\"\n                :style=\"{width: col.realWidth ? col.realWidth + 'px' : 'auto'}\"\n                :key=\"groupIndex + '-'+ i\">\n          </colgroup>\n          <!-- Thead -->\n          <thead bbn-if=\"titles\" ref=\"thead\">\n            <!-- Group titles -->\n            <tr bbn-if=\"titleGroups\" class=\"bbn-table-tr-groups-titles\">\n              <template bbn-for=\"(groupCol, groupIndex) in groupCols\">\n                <bbn-table-head-group bbn-if=\"!!groupCol.cols.length\"\n                                      bbn-for=\"(col, i) in titleGroupsCells(groupIndex)\"\n                                      :source=\"col\"\n                                      :group-index=\"groupIndex\"\n                                      :index=\"i\"/>\n\n              </template>\n            </tr>\n            <!-- Titles -->\n            <tr class=\"bbn-table-tr-titles\">\n              <template bbn-for=\"(groupCol, groupIndex) in groupCols\">\n                <bbn-table-head-title bbn-for=\"(col, i) in groupCol.cols\"\n                                      :source=\"col\"\n                                      :group-index=\"groupIndex\"\n                                      :index=\"i\"\n                                      :ref=\"'title-' + groupIndex + '-' + i\"/>\n              </template>\n            </tr>\n          </thead>\n          <!-- Tbody -->\n          <tbody ref=\"tbody\"\n                 :class=\"{\n                   'bbn-overlay': ((!filteredData.length && !tmpRow) || isLoading) && !!scrollable\n                 }\">\n            <!-- Loading -->\n            <tr bbn-if=\"isLoading\"\n                :class=\"{\n                  'bbn-overlay': !!scrollable,\n                  'bbn-middle': !!scrollable\n                }\"\n                :style=\"{\n                  paddingTop: \\$refs.thead && !!scrollable ? \\$refs.thead.getBoundingClientRect().height + 'px' : 0,\n                  maxWidth: !!scrollable ? \\$el.clientWidth + 'px' : '',\n                  left: !!scrollable && getRef('scroll') ? getRef('scroll').currentX + 'px' : ''\n                }\">\n              <td :colspan=\"currentColumns ? currentColumns.length : 1\">\n                <div class=\"bbn-spadding bbn-background bbn-c\">\n                  <div bbn-if=\"loader\"\n                       class=\"bbn-vmiddle\">\n                    <bbn-loadicon class=\"bbn-vmiddle\"\n                                  :size=\"24\"/>\n                    <span class=\"bbn-xl bbn-b bbn-left-sspace\"\n                          bbn-text=\"currentLoaderText\"/>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            <!-- Inline insertion -->\n            <tr bbn-if=\"tmpRow\">\n            </tr>\n            <!-- No data -->\n            <tr bbn-elseif=\"!filteredData.length\"\n                :class=\"{\n                  'bbn-overlay': !!scrollable,\n                  'bbn-middle': !!scrollable\n                }\"\n                :style=\"{\n                  paddingTop: \\$refs.thead && !!scrollable ? \\$refs.thead.getBoundingClientRect().height + 'px' : 0,\n                  maxWidth: !!scrollable ? \\$el.clientWidth + 'px' : '',\n                  left: !!scrollable && getRef('scroll') ? getRef('scroll').currentX + 'px' : ''\n                }\">\n              <td :colspan=\"currentColumns ? currentColumns.length : 1\">\n                <div class=\"bbn-spadding bbn-background bbn-c\">\n                  <div bbn-if=\"!isLoading\"\n                       bbn-html=\"noData || ' '\"/>\n                  <div bbn-elseif=\"loader\"\n                       class=\"bbn-vmiddle\">\n                    <bbn-loadicon class=\"bbn-vmiddle\"\n                                  :size=\"24\"/>\n                    <span class=\"bbn-xl bbn-b bbn-left-sspace\"\n                          bbn-text=\"currentLoaderText\"/>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            <!-- Rows -->\n            <template bbn-else\n                      bbn-for=\"(d, i) in items\"\n                      :key=\"i\"\n                      bbn-break=\"loseViewport\">\n              <!-- Group rows = start of a new group -->\n              <bbn-table-row-group bbn-if=\"isGroupActive && (!i || (items[i-1].data[cols[group].field] !== d.data[cols[group].field]))\"\n                                   :source=\"d\"\n                                   :index=\"i\"\n                                   :group=\"group\"\n                                   :class=\"{'bbn-alt': i % 2}\"\n                                   ref=\"groupRows\"/>\n              <bbn-table-row-full bbn-if=\"d.full\"\n                                  :source=\"d\"\n                                  :class=\"{'bbn-alt': i % 2}\"\n                                  :key=\"d.index\"\n                                  :index=\"i\"\n                                  ref=\"rows\"/>\n              <bbn-table-row bbn-else\n                             :source=\"d\"\n                             bbn-show=\"!isGroupActive || isExpanded(d.data, d.index)\"\n                             :key=\"d.index\"\n                             :class=\"{'bbn-alt': i % 2}\"\n                             :editing=\"editedRow === d.data\"\n                             :index=\"i\"\n                             ref=\"rows\"/>\n              <bbn-table-row-expansion bbn-if=\"expander && !isGroupActive && isExpanded(d.data, d.index)\"\n                                       :source=\"d\"\n                                       :index=\"i\"\n                                       :class=\"{'bbn-alt': i % 2}\"\n                                       ref=\"expansionRows\"/>\n              <bbn-table-row-aggregate bbn-elseif=\"d.aggregated || d.groupAggregated\"\n                                      :source=\"d\"\n                                      :class=\"{'bbn-alt': i % 2}\"\n                                      :index=\"i\"\n                                      ref=\"aggregateRows\"/>\n              <bbn-table-row-footer bbn-elseif=\"d.footer && groupFooter && groupable\"\n                                    :source=\"d\"\n                                    :class=\"{'bbn-alt': i % 2}\"\n                                    :index=\"i\"\n                                    ref=\"footerRows\"/>\n            </template>\n          </tbody>\n        </table>\n      </bbn-scroll>\n    </div>\n    <!-- Footer -->\n    <bbn-pager class=\"bbn-table-footer bbn-no-border-right bbn-no-border-left bbn-no-border-bottom\"\n               bbn-if=\"hasPager\"\n               :item-name=\"itemName\"\n               ref=\"pager\"\n               :limit=\"currentLimit\"\n               :page-name=\"pageName\"\n               :buttons=\"footerButtons\"/>\n    <component bbn-elseif=\"(typeof footer === 'string') || (typeof footer === 'object')\"\n               :is=\"footer\"\n               class=\"bbn-table-footer bbn-no-border-right bbn-no-border-left bbn-no-border-bottom\"/>\n    <div bbn-elseif=\"(typeof footer === 'function') && footer()\"\n         bbn-html=\"footer()\"\n         class=\"bbn-table-footer bbn-no-border-right bbn-no-border-left bbn-no-border-bottom\"/>\n  </div>\n  <bbn-floater bbn-if=\"currentFilter\"\n               class=\"bbn-table-floating-filter bbn-widget\"\n               :element=\"filterElement\"\n               @close=\"currentFilter = false\"\n               :auto-hide=\"true\"\n               :scrollable=\"true\"\n               :left=\"floatingFilterX\"\n               :top=\"floatingFilterY\">\n    <bbn-filter bbn-bind=\"getFilterOptions()\"\n                @set=\"onSetFilter\"\n                @unset=\"unsetCurrentFilter\"\n                class=\"bbn-w-100\"/>\n    <div bbn-if=\"multifilter\"\n         class=\"bbn-table-filter-link bbn-p bbn-b bbn-i bbn-w-100 bbn-bottom-padding bbn-left-padding bbn-right-padding bbn-r\"\n         @click=\"openMultiFilter\">\n      <i class=\"zmdi zmdi-filter-list\"/>\n      <span bbn-text=\"_('Open the full filter')\"/>\n    </div>\n  </bbn-floater>\n  <bbn-popup ref=\"popup\" bbn-if=\"inTable === false\"/>\n  <bbn-floater bbn-if=\"focusedElement && (editMode === 'inline') && editedRow\"\n               class=\"bbn-widget\"\n               :element=\"focusedElement\"\n               :scrollable=\"true\"\n               tabindex=\"-1\"\n               :left=\"focusedElementX\"\n               :top=\"focusedElementY\">\n        <bbn-button :label=\"_('Save')\"\n                    :disabled=\"!isEditedValid\"\n                    icon=\"nf nf-fa-save\"\n                    :notext=\"true\"\n                    @click.prevent.stop=\"saveInline\"\n                    style=\"margin: 0 .1rem\"\n                    tabindex=\"-1\"/>\n        <bbn-button :label=\"_('Cancel')\"\n                    icon=\"nf nf-md-close_thick\"\n                    :notext=\"true\"\n                    @click.prevent.stop=\"cancel\"\n                    style=\"margin: 0 .1rem\"\n                    tabindex=\"-1\"/>\n  </bbn-floater>\n</div>\n`;\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/table.html?");

/***/ }),

/***/ "./src/components/table/table.js":
/*!***************************************!*\
  !*** ./src/components/table/table.js ***!
  \***************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _mixins_aggregation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_mixins/aggregation.js */ \"./src/components/table/_mixins/aggregation.js\");\n/* harmony import */ var _mixins_buttons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_mixins/buttons.js */ \"./src/components/table/_mixins/buttons.js\");\n/* harmony import */ var _mixins_columns_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_mixins/columns.js */ \"./src/components/table/_mixins/columns.js\");\n/* harmony import */ var _mixins_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_mixins/config.js */ \"./src/components/table/_mixins/config.js\");\n/* harmony import */ var _mixins_data_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_mixins/data.js */ \"./src/components/table/_mixins/data.js\");\n/* harmony import */ var _mixins_edition_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_mixins/edition.js */ \"./src/components/table/_mixins/edition.js\");\n/* harmony import */ var _mixins_events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_mixins/events.js */ \"./src/components/table/_mixins/events.js\");\n/* harmony import */ var _mixins_expand_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_mixins/expand.js */ \"./src/components/table/_mixins/expand.js\");\n/* harmony import */ var _mixins_exporter_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./_mixins/exporter.js */ \"./src/components/table/_mixins/exporter.js\");\n/* harmony import */ var _mixins_filter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./_mixins/filter.js */ \"./src/components/table/_mixins/filter.js\");\n/* harmony import */ var _mixins_group_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./_mixins/group.js */ \"./src/components/table/_mixins/group.js\");\n/* harmony import */ var _mixins_init_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./_mixins/init.js */ \"./src/components/table/_mixins/init.js\");\n/* harmony import */ var _mixins_picker_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_mixins/picker.js */ \"./src/components/table/_mixins/picker.js\");\n/* harmony import */ var _mixins_selection_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./_mixins/selection.js */ \"./src/components/table/_mixins/selection.js\");\n/* harmony import */ var _mixins_size_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./_mixins/size.js */ \"./src/components/table/_mixins/size.js\");\n/* harmony import */ var _mixins_sort_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./_mixins/sort.js */ \"./src/components/table/_mixins/sort.js\");\n/* harmony import */ var _mixins_style_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./_mixins/style.js */ \"./src/components/table/_mixins/style.js\");\n/* harmony import */ var _mixins_title_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./_mixins/title.js */ \"./src/components/table/_mixins/title.js\");\n/* harmony import */ var _mixins_ui_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./_mixins/ui.js */ \"./src/components/table/_mixins/ui.js\");\n/* harmony import */ var _table_html__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./table.html */ \"./src/components/table/table.html\");\n/* harmony import */ var _table_less__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./table.less */ \"./src/components/table/table.less\");\n/**\r\n * @file bbn-table component\r\n *\r\n * @description  bbn-table is a powerful component of wide configuration that offers vast customizations.\r\n * The source obtains it by giving a url to retrieve data or directly supplying an array.\r\n * It allows you to easily modify the content by entering new data in the input field corresponding to the type of column being defined.\r\n * The table rows can be sorted by clicking on a column header.\r\n * Table elements can be filtered with the help of a built-in filters in the column headings or using a multifilter panel and a reset by removing a filter or all filters with just one click.\r\n * It's possible to create fixed areas that will keep their position by always having them available during scrolling.\r\n * It gives the possibility to group the data.\r\n * These are some examples of what can be done with this component, from the few configuration lines we can express considerable work complexity.\r\n *\r\n * @author BBN Solutions\r\n *\r\n * @copyright BBN Solutions\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst cpDef = {\n  /**\r\n   * @mixin bbn.cp.mixins.basic\r\n   * @mixin bbn.cp.mixins.resizer\r\n   * @mixin bbn.cp.mixins.editableList\r\n   * @mixin bbn.cp.mixins.list\r\n   * @mixin bbn.cp.mixins.dataEditor\r\n   * @mixin bbn.cp.mixins.localStorage\r\n   * @mixin bbn.cp.mixins.observer\r\n   * @mixin bbn.cp.mixins.data\r\n   */\n  mixins: [bbn.cp.mixins.basic, bbn.cp.mixins.resizer, bbn.cp.mixins.editableList, bbn.cp.mixins.list, bbn.cp.mixins.config, bbn.cp.mixins.dataEditor, bbn.cp.mixins.localStorage, bbn.cp.mixins.observer, bbn.cp.mixins.keepCool, bbn.cp.mixins.data, _mixins_aggregation_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _mixins_buttons_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _mixins_columns_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _mixins_config_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _mixins_data_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], _mixins_edition_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"], _mixins_events_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"], _mixins_expand_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"], _mixins_exporter_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"], _mixins_filter_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"], _mixins_group_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"], _mixins_init_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"], _mixins_picker_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"], _mixins_selection_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"], _mixins_size_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"], _mixins_sort_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"], _mixins_style_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"], _mixins_title_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"], _mixins_ui_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]],\n  iface() {\n    return {\n      config: {\n        name: 'bbns-column',\n        data: 'columns',\n        props: {\n          /**\r\n           * The width of the component.\r\n           * @prop {String|Number} width\r\n           * @memberof fieldComponent\r\n           */\n          width: {\n            type: [String, Number]\n          },\n          /**\r\n           * The min-width of the component.\r\n           * @prop {String|Number} minWidth\r\n           * @memberof fieldComponent\r\n           */\n          minWidth: {\n            type: [String, Number]\n          },\n          /**\r\n           * The max-width of the component.\r\n           * @prop {String|Number} maxWidth\r\n           * @memberof fieldComponent\r\n           */\n          maxWidth: {\n            type: [String, Number]\n          },\n          /**\r\n           * The render of the component.\r\n           * @prop {String|Function} render\r\n           * @memberof fieldComponent\r\n           */\n          render: {\n            type: [String, Function]\n          },\n          /**\r\n           * The label of the component.\r\n           * @prop {String|Number} label\r\n           * @memberof fieldComponent\r\n           */\n          label: {\n            type: [String, Number]\n          },\n          /**\r\n           * The full label of the component.\r\n           * @prop {String} flabel\r\n           * @memberof fieldComponent\r\n           */\n          flabel: {\n            type: String\n          },\n          /**\r\n           * @prop {String|Object} tcomponent\r\n           * @memberof fieldComponent\r\n           */\n          tcomponent: {\n            type: [String, Object]\n          },\n          /**\r\n           * The icon of the component.\r\n           * @prop {String} icon\r\n           * @memberof fieldComponent\r\n           */\n          icon: {\n            type: String\n          },\n          /**\r\n           * The classes added to the component.\r\n           * @prop {String|Function} cls\r\n           * @memberof fieldComponent\r\n           */\n          cls: {\n            type: [String, Function]\n          },\n          /**\r\n           * The component's type.\r\n           * @prop {String} type\r\n           * @memberof fieldComponent\r\n           */\n          type: {\n            type: String\n          },\n          /**\r\n           * The component's field.\r\n           * @prop {String} field\r\n           * @memberof fieldComponent\r\n           */\n          field: {\n            type: String\n          },\n          /**\r\n           * Defines if the component has to be fixed.\r\n           * @prop {Boolean|String} [false] fixed\r\n           * @memberof fieldComponent\r\n           */\n          fixed: {\n            type: [Boolean, String],\n            default: false\n          },\n          /**\r\n           * Defines if the component has to be invisible.\r\n           * @prop {Boolean} invisible\r\n           * @memberof fieldComponent\r\n           */\n          invisible: {\n            type: Boolean\n          },\n          /**\r\n           * Defines if the componenent has to be encoded.\r\n           * @prop {Boolean} [false] encoded\r\n           * @memberof fieldComponent\r\n           */\n          encoded: {\n            type: Boolean,\n            default: false\n          },\n          /**\r\n           * Defines if the componenent has to be sortable.\r\n           * @prop {Boolean|Function} [true] sortable \r\n           * @memberof fieldComponent\r\n           */\n          sortable: {\n            type: [Boolean, Function],\n            default: true\n          },\n          /**\r\n           * Defines if the componenent has to be editable.\r\n           * @prop {Boolean|Function} [true] editable \r\n           * @memberof fieldComponent\r\n           */\n          editable: {\n            type: [Boolean, Function],\n            default: true\n          },\n          /**\r\n           * Defines if the componenent has to be filterable.\r\n           * @prop {Boolean|Function} [true] filterable \r\n           * @memberof fieldComponent\r\n           */\n          filterable: {\n            type: [Boolean, Function],\n            default: true\n          },\n          /**\r\n           * Defines if the componenent has to be resizable.\r\n           * @prop {Boolean|Function} [true] resizable \r\n           * @memberof fieldComponent\r\n           */\n          resizable: {\n            type: [Boolean, Function],\n            default: true\n          },\n          /**\r\n           * Defines if the componenent has to be showable.\r\n           * @prop {Boolean|Function} [true] showable \r\n           * @memberof fieldComponent\r\n           */\n          showable: {\n            type: [Boolean, Function],\n            default: true\n          },\n          /**\r\n           * Defines if the componenent can have a null value.\r\n           * @prop {Boolean|Function} nullable \r\n           * @memberof fieldComponent\r\n           */\n          nullable: {\n            type: [Boolean, Function]\n          },\n          /**\r\n           * The buttons of the component.\r\n           * @prop {Array|Function} buttons \r\n           * @memberof fieldComponent\r\n           */\n          buttons: {\n            type: [Array, Function]\n          },\n          /**\r\n           * The source of the component.\r\n           * @prop {Array|Object|String|Function} source \r\n           * @memberof fieldComponent\r\n           */\n          source: {\n            type: [Array, Object, String, Function]\n          },\n          /**\r\n           * Defines if the the value of the component is required.\r\n           * @prop {Boolean|Function} required \r\n           * @memberof fieldComponent\r\n           */\n          required: {\n            type: [Boolean, Function]\n          },\n          /**\r\n           * Defines the precision of the component.\r\n           * @prop {Number} [0] precision \r\n           * @memberof fieldComponent\r\n           */\n          precision: {\n            type: Number\n          },\n          /**\r\n           * Defines the number of decimals for the component.\r\n           * @prop {Number} [0] decimals \r\n           * @memberof fieldComponent\r\n           */\n          decimals: {\n            type: Number\n          },\n          /**\r\n           * Defines the precision of the component.\r\n           * @prop {Number} [0] precision \r\n           * @memberof fieldComponent\r\n           */\n          unit: {\n            type: String\n          },\n          /**\r\n           * Defines the options of the component.\r\n           * @prop {Object|Function} options\r\n           * @memberof fieldComponent\r\n           */\n          options: {\n            type: [Object, Function],\n            default() {\n              return {};\n            }\n          },\n          /**\r\n           * Defines the editor of the component.\r\n           * @prop {String|Object} editor\r\n           * @memberof fieldComponent\r\n           */\n          editor: {\n            type: [String, Object]\n          },\n          /**\r\n           * Defines the maxLength of the component.\r\n           * @prop {Number} maxLength \r\n           * @memberof fieldComponent\r\n           */\n          maxLength: {\n            type: Number\n          },\n          /**\r\n           * Defines the max number of chars visible in reading.\r\n           * @prop {Number} maxVisible \r\n           * @memberof fieldComponent\r\n           */\n          maxVisible: {\n            type: Number\n          },\n          /**\r\n           * Defines the sqlType of the component.\r\n           * @prop {String} sqlType \r\n           * @memberof fieldComponent\r\n           */\n          sqlType: {\n            type: String\n          },\n          /**\r\n           * @prop {String|Array} aggregate\r\n           * @memberof fieldComponent\r\n           */\n          aggregate: {\n            type: [String, Array]\n          },\n          /**\r\n           * Define a component to use.\r\n           * @prop {String|Object} component\r\n           * @memberof fieldComponent\r\n           */\n          component: {\n            type: [String, Object]\n          },\n          /**\r\n           * A function to map the data of the component.\r\n           * @prop {Function} mapper\r\n           * @memberof fieldComponent\r\n           */\n          mapper: {\n            type: Function\n          },\n          /**\r\n           * Defines the group of the component.\r\n           * @prop {String} group\r\n           * @memberof fieldComponent\r\n           */\n          group: {\n            type: String\n          },\n          titleCls: {\n            type: [String, Object, Array],\n            default: ''\n          }\n        }\n      }\n    };\n  },\n  data() {\n    return {\n      /**\r\n       * @data {Boolean} [false] table\r\n       */\n      table: false,\n      /**\r\n       * @data {Boolean} [false] updaterTimeout\r\n       */\n      updaterTimeout: false,\n      /**\r\n       * @data {} [null] rowIndexTimeOut\r\n       */\n      rowIndexTimeOut: null,\n      /**\r\n       * @data {Number|Array} [0] scrollOffset\r\n       */\n      scrollOffset: 0\n    };\n  },\n  /**\r\n   * Adds bbns-column from the slot and sets the initial configuration of the table.\r\n   * @event created\r\n   * @fires addColumn\r\n   * @fires setConfig\r\n   * @fires getStorage\r\n   */\n  created() {\n    this.componentClass.push('bbn-resize-emitter');\n    // Adding bbns-column from the slot\n    if (this.$slots.default) {\n      //bbn.fn.log(\"SLOTS TABLE CREATED\", this.$slots, this.$el.bbnSlots);\n      for (let node of this.$slots.default) {\n        if (node.bbnSchema?.tag === 'tr') {\n          this.hasTrSlot = true;\n          break;\n        }\n      }\n    }\n    if (this.columns.length) {\n      bbn.fn.each(this.columns, a => this.addColumn(a));\n    }\n    bbn.fn.log(\"TABLE CREATED\", this.columns.length);\n    this.initConfig();\n    this.$on('addTmp', () => {\n      let scroll = this.getRef('scroll');\n      if (bbn.cp.isComponent(scroll) && bbn.fn.isFunction(scroll.scrollStartY) && bbn.fn.isFunction(scroll.scrollStartX)) {\n        scroll.scrollStartY();\n        scroll.scrollStartX();\n      }\n    });\n  },\n  /**\r\n   * After the initialization of the component sets the property ready on true.\r\n   * @event mounted\r\n   * @fires init\r\n   * @fires updateData\r\n   */\n  mounted() {\n    this.container = this.getRef('container');\n    this.isTable = !!this.closest('bbn-table');\n    let floater = this.closest('bbn-floater');\n    if (floater) {\n      if (floater.ready) {\n        this.init();\n        this.$once('dataloaded', () => {\n          this.ready = true;\n          this.setResizeEvent();\n          floater.onResize();\n        });\n      } else {\n        floater.$on('ready', () => {\n          this.init();\n          this.$once('dataloaded', () => {\n            this.ready = true;\n            this.setResizeEvent();\n            floater.onResize();\n          });\n        });\n      }\n      if (this.isAutobind) {\n        this.updateData();\n      }\n    } else {\n      this.$once('dataloaded', () => {\n        this.ready = true;\n      });\n      this.init(!!this.isAutobind);\n    }\n    if (this.titles) {\n      setTimeout(() => {\n        this.scrollOffset = this.getRef('thead') ? [this.$position(this.getRef('thead')).height, 0] : 0;\n      }, 1000);\n    }\n  }\n};\n\n\nlet cpLang = {};\nif (bbn.env.lang) {\n  try {\n    const lang = bbn.env.lang || 'en';\n    cpLang = await __webpack_require__(\"./src/components/table/_i18n lazy recursive ^\\\\.\\\\/table\\\\..*\\\\.lang$\")(`./table.${lang}.lang`);\n    if (cpLang.default) {\n      cpLang = cpLang.default;\n    }\n  } catch (err) {}\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'bbn-table',\n  definition: cpDef,\n  template: _table_html__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n  style: _table_less__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n  lang: cpLang\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/table.js?");

/***/ }),

/***/ "./src/components/table/table.less":
/*!*****************************************!*\
  !*** ./src/components/table/table.less ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_table_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js!./table.less */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/components/table/table.less\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_table_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_table_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_table_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_less_loader_dist_cjs_js_table_less__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://@bbn/bbn-cp/./src/components/table/table.less?");

/***/ })

}]);